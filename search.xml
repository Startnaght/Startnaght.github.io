<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/10/hello-world/"/>
      <url>/2021/10/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-yezi-3"></use></svg> 张三 Quick Start### Create a new post<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#[icon-yezi-]"></use></svg> 张三 More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数组中最大数对和的最小值</title>
      <link href="/2021/07/20/%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
      <url>/2021/07/20/%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="基本分析-amp-证明"><a href="#基本分析-amp-证明" class="headerlink" title="基本分析 &amp; 证明 "></a>基本分析 &amp; 证明 <svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#[icon-yezi-]"></use></svg></h2><svg class="icon" style="width:8em; height:8em" aria-hidden="true"><use xlink:href="#[icon-yezi-3]"></use></svg><blockquote><p>直觉上，我们会认为「尽量让“较小数”和“较大数”组成数对，可以有效避免出现“较大数成对”的现象」。<br>我们来证明一下该猜想是否成立。<br>假定 numsnums 本身有序，由于我们要将 numsnums 拆分成 n / 2n/2 个数对，根据猜想，我们得到的数对序列为：</p></blockquote><p>(nums[0], nums[n - 1]), (nums[1], nums[n - 2]), … , (nums[(n / 2) - 1], nums[n / 2])(nums[0],nums[n−1]),(nums[1],nums[n−2]),…,(nums[(n/2)−1],nums[n/2])</p><font color="brack">换句话说，构成答案的数对必然是较小数取自有序序列的左边，较大数取自有序序列的右边，且与数组中心对称。</font><p>假设最大数对是 (nums[i], nums[j])(nums[i],nums[j])，其中 i &lt; ji&lt;j，记两者之和为 ans = nums[i] + nums[j]ans=nums[i]+nums[j]。</p><p>反证法证明，不存在别的数对组合会比 (nums[i], nums[j])(nums[i],nums[j]) 更优：</p><p>假设存在数对 (nums[p], nums[q])(nums[p],nums[q]) 与 (nums[i], nums[j])(nums[i],nums[j]) 进行调整使答案更优。<br><img src="贪心算法分析.png"></p><blockquote><p>接下来分情况讨论：<br>调整为 (nums[i], nums[p])(nums[i],nums[p]) 和 (nums[q], nums[j])(nums[q],nums[j])：此时最大数对答案为 nums[q] + nums[j]nums[q]+nums[j]，<br>显然nums[q] + nums[j] &gt;= nums[i] + nums[j] = ansnums[q]+nums[j]&gt;=nums[i]+nums[j]=ans。我们要最小化最大数对和，因此该调整方案不会让答案更好；&lt;/br&gt;<br>调整为 (nums[i], nums[q])(nums[i],nums[q]) 和 (nums[p], nums[j])(nums[p],nums[j])：此时最大数对答案为 max(nums[i] + nums[q], nums[p] + nums[j]) = nums[p] + nums[j] &gt;= nums[i] + nums[j] = ansmax(nums[i]+nums[q],nums[p]+nums[j])=nums[p]+nums[j]&gt;=nums[i]+nums[j]=ans。我们要最小化最大数对和，因此该调整方案不会让答案更好；<br>上述分析可以归纳推理到每一个“非对称”的数对配对中。</p></blockquote><font color="red">至此我们得证，将原本对称的数对调整为不对称的数对，不会使得答案更优，即贪心解可取得最优解。</font><h2 id="程序代码"><a href="#程序代码" class="headerlink" title="程序代码"></a>程序代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPairSum</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//nums中的每个元素恰好在一个数组中且最大数的和的值最小.</span></span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n/<span class="number">2</span>;++i)&#123;</span><br><span class="line">            res =Math.max(res, nums[i]+ nums[n-<span class="number">1</span>-i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>时间复杂度为：O(n log n)，其中n是nums数组的长度，排序的时间长度O(n log n),遍历堆维护最大值的和所需时间为O(n)<br>空间复杂度为：O(log n ),即为排序栈空间开销</p><h2 id="使用的算法设计—论文出处"><a href="#使用的算法设计—论文出处" class="headerlink" title="使用的算法设计—论文出处"></a>使用的算法设计—论文出处</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>分析参考至：宫水三叶</p>]]></content>
      
      
      <categories>
          
          <category> 算法题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相信科学系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java框架之-spring简介</title>
      <link href="/2021/07/10/java%E6%A1%86%E6%9E%B6%E4%B9%8B-spring%E7%AE%80%E4%BB%8B/"/>
      <url>/2021/07/10/java%E6%A1%86%E6%9E%B6%E4%B9%8B-spring%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>spring 是一个开源框架<br>spring 是一个轻量级、非入侵式框架<br>控制反转（ioc）,面向切面编程（AOP)<br>支持对事务的处理，对框架德整合的支持<br>总结一句话：spring就是一个轻量级的控制反转（IOC）和面向切面编程（AOP）</p><div class="table-container"><table><thead><tr><th>name</th><th>id</th></tr></thead><tbody><tr><td>张三</td><td>21321</td></tr></tbody></table></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Http&amp;Https区别</title>
      <link href="/2021/07/09/Http-Https%E5%8C%BA%E5%88%AB/"/>
      <url>/2021/07/09/Http-Https%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h3 id="荷花娇欲语，愁杀荡舟人。—-李白"><a href="#荷花娇欲语，愁杀荡舟人。—-李白" class="headerlink" title="荷花娇欲语，愁杀荡舟人。— 李白"></a><font color="#c08eaf">荷花娇欲语，愁杀荡舟人。— 李白</font></h3><h2 id="Htpp"><a href="#Htpp" class="headerlink" title="Htpp"></a>Htpp</h2><blockquote><p>HyperText Transfer Protocol：超文本传输协议，是一种用于分布式、协作式和超媒体信息系统的应用层协议。简单的来说就是发布和接收html页面的方法，用于大多数页面中</p><p><font color="red">http默认工作在TCP协议80端口</font><br>http协议以明文的方式，<font color="red">不提供任何方式加密</font>，如果攻击者截取了服务器端和客户端则所有数据都会被暴露，因此http协议不适合传输一些敏感信息，比如身份证号、密码等、</p></blockquote><h2 id="Https"><a href="#Https" class="headerlink" title="Https"></a>Https</h2><blockquote><p>Hypertext Transfer Protocol Secure：超文本传输安全协议 是一种通过计算机网络进行安全通信的传输协议，Https经由Http进行通信，但利用<font color="red">SSH/TLS进行加密数据包</font>，HTTPS开发的主要目的，<font color="red">是提供网站服务器的安全，保护交互数据的安全性与完整信。</font><br>https默认工作在<font color="red">TCP协议443端口</font>工作流程如下：<br>1、TCP 三次同步握手<br>2、客户端验证服务器数字证书<br>3、DH 算法协商对称加密算法的密钥、hash 算法的密钥<br>4、SSL 安全加密隧道协商完成<br>5、网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的hash算法进行数据完整性保护，保证数据不被篡改。</p><blockquote><p>截至 2018 年 6 月，Alexa 排名前 100 万的网站中有 34.6% 使用 HTTPS 作为默认值，互联网 141387 个最受欢迎网站的 43.1% 具有安全实施的 HTTPS，以及 45% 的页面加载（透过Firefox纪录）使用HTTPS。2017 年3 月，中国注册域名总数的 0.11％使用 HTTPS。根据 Mozilla 统计，自 2017 年 1 月以来，超过一半的网站流量被加密。</p></blockquote></blockquote><h1 id="Http-amp-amp-Https的区别"><a href="#Http-amp-amp-Https的区别" class="headerlink" title="Http&amp;&amp; Https的区别"></a>Http&amp;&amp; Https的区别</h1><blockquote><p>1、HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。<br>2、使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。<br>3、HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。<br>4、http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。<br>5、HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</p></blockquote><h1 id="TCP-三次握手"><a href="#TCP-三次握手" class="headerlink" title="TCP 三次握手"></a>TCP 三次握手</h1><blockquote><p>在TCP/IP协议中，TCP协议通过三次握手建立一个可靠的连接<br><img href="TCP三次握手"><br>第一次握手：客户端尝试连接服务器，向服务器发送 syn 包（同步序列编号Synchronize Sequence Numbers），syn=j，客户端进入 SYN_SEND 状态等待服务器确认<br>第二次握手：服务器接收客户端syn包并确认（ack=j+1），同时向客户端发送一个 SYN包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态<br>第三次握手：第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手<br>简化：<br><img herf="简化"></p></blockquote><h1 id="HTTPS工作原理"><a href="#HTTPS工作原理" class="headerlink" title="HTTPS工作原理"></a>HTTPS工作原理</h1><p><img href="HTTPS工作原理"></p><blockquote><p>1、客户端发起 HTTPS 请求这个没什么好说的，就是用户在浏览器里输入一个 https 网址，然后连接到 server 的 443 端口。<br>2、服务端的配置  采用 HTTPS 协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请，区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面(startssl 就是个不错的选择，有 1 年的免费服务)。这套证书其实就是一对公钥和私钥，如果对公钥和私钥不太理解，可以想象成一把钥匙和一个锁头，只是全世界只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。</p><p>3、传送证书这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。</p><p>4、客户端解析证书这部分工作是有客户端的TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，提示证书存在问题。如果证书没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密，就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。</p><p>5、传送加密信息这部分传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。</p><p>6、服务端解密信息服务端用私钥解密后，得到了客户端传过来的随机值(私钥)，然后把内容通过该值进行对称加密，所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。</p><p>7、传输加密后的信息这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。</p><p>8、客户端解密信息客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容，整个过程第三方即使监听到了数据，也束手无策。</p></blockquote><p><a href="https://www.runoob.com/w3cnote/summary-of-network.html#_label0">参考于菜鸟教程_只是为了加强记忆</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令手册</title>
      <link href="/2021/07/09/Linux%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8C/"/>
      <url>/2021/07/09/Linux%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="关机-重启-注销"><a href="#关机-重启-注销" class="headerlink" title="关机/重启/注销"></a>关机/重启/注销</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>shutdown -h now</td><td>即刻关机</td></tr><tr><td>shutdown -h 10</td><td>10分钟后关机</td></tr><tr><td>shutdown -h 11:00</td><td>11：00关机</td></tr><tr><td>shutdown -h +10</td><td>预定时间关机（10分钟后）</td></tr><tr><td>shutdown -c</td><td>取消指定时间关机</td></tr><tr><td>shutdown -r now</td><td>重启</td></tr><tr><td>shutdown -r 10</td><td>10分钟之后重启</td></tr><tr><td>shutdown -r 11:00</td><td>定时重启</td></tr><tr><td>reboot</td><td>重启</td></tr><tr><td>init 6</td><td>重启</td></tr><tr><td>init 0</td><td>⽴刻关机</td></tr><tr><td>telinit 0</td><td>关机</td></tr><tr><td>poweroff</td><td>⽴刻关机</td></tr><tr><td>halt</td><td>关机</td></tr><tr><td>sync</td><td>buff数据同步到磁盘</td></tr><tr><td>logout</td><td>退出登录Shell</td></tr></tbody></table></div><h1 id="系统信息和性能查看"><a href="#系统信息和性能查看" class="headerlink" title="系统信息和性能查看"></a>系统信息和性能查看</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>uname -a</td><td>查看内核/OS/CPU信息</td></tr><tr><td>uname -r</td><td>查看内核版本</td></tr><tr><td>uname -m</td><td>查看处理器架构</td></tr><tr><td>arch</td><td>查看处理器架构</td></tr><tr><td>hostname</td><td>查看计算机名</td></tr><tr><td>who</td><td>显示当前登录系统的⽤户</td></tr><tr><td>who am i</td><td>显示登录时的⽤户名</td></tr><tr><td>whoami</td><td>显示当前⽤户名</td></tr><tr><td>cat /proc/version</td><td>查看linux版本信息</td></tr><tr><td>cat /proc/cpuinfo</td><td>查看CPU信息</td></tr><tr><td>cat /proc/interrupts</td><td>查看中断</td></tr><tr><td>cat /proc/loadavg</td><td>查看系统负载</td></tr><tr><td>uptime</td><td>查看系统运⾏时间、⽤户数、负载</td></tr><tr><td>env</td><td>查看系统的环境变量</td></tr><tr><td>lsusb -tv</td><td>查看系统USB设备信息</td></tr><tr><td>lspci -tv</td><td>查看系统PCI设备信息</td></tr><tr><td>lsmod</td><td>查看已加载的系统模块</td></tr><tr><td>grep MemTotal /proc/meminfo</td><td>查看内存总量</td></tr><tr><td>grep MemFree /proc/meminfo</td><td>查看空闲内存量</td></tr><tr><td>free -m</td><td>查看内存⽤量和交换区⽤量</td></tr><tr><td>date</td><td>显示系统⽇期时间</td></tr><tr><td>cal 2021</td><td>显示2021⽇历表</td></tr><tr><td>top</td><td>动态显示cpu/内存/进程等情况</td></tr><tr><td>vmstat 1 20</td><td>每1秒采⼀次系统状态，采20次</td></tr><tr><td>iostat</td><td>查看io读写/cpu使⽤情况</td></tr><tr><td>查看io读写/cpu使⽤情况</td><td>查询cpu使⽤情况（1秒⼀次，共10次）</td></tr><tr><td>sar -d 1 10</td><td>查询磁盘性能</td></tr></tbody></table></div><h1 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>fdisk -l</td><td>查看所有磁盘分区</td></tr><tr><td>swapon -s</td><td>查看所有交换分区</td></tr><tr><td>df -h</td><td>查看磁盘使⽤情况及挂载点</td></tr><tr><td>df -hl</td><td>同上</td></tr><tr><td>du -sh /dir</td><td>查看指定某个⽬录的⼤⼩</td></tr><tr><td>du -sk * \</td><td>sort -rn</td><td>从⾼到低依次显示⽂件和⽬录⼤⼩</td></tr><tr><td>mount /dev/hda2 /mnt/hda2</td><td>挂载hda2盘</td></tr><tr><td>mount -t ntfs /dev/sdc1 /mnt/usbhd1</td><td>指定⽂件系统类型挂载（如ntfs）</td></tr><tr><td>mount -o loop xxx.iso /mnt/cdrom</td><td>挂 载 iso ⽂ 件</td></tr><tr><td>umount -v /dev/sda1</td><td>通过设备名卸载</td></tr><tr><td>umount -v /mnt/mymnt</td><td>通过挂载点卸载</td></tr><tr><td>fuser -km /mnt/hda1</td><td>强制卸载(慎⽤)</td></tr></tbody></table></div><h1 id="⽤户和⽤户组"><a href="#⽤户和⽤户组" class="headerlink" title="⽤户和⽤户组"></a>⽤户和⽤户组</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>useradd codesheep</td><td>创建⽤户</td></tr><tr><td>userdel -r codesheep</td><td>删除⽤户</td></tr><tr><td>usermod -g group_name user_name</td><td>修改⽤户的组</td></tr><tr><td>usermod -aG group_name user_name</td><td>将⽤户添加到组</td></tr><tr><td>usermod -s /bin/ksh -d /home/codepig –g dev codesheep</td><td>修改⽤户codesheep的登录Shell、主⽬录以及⽤户组</td></tr><tr><td>groups test</td><td>查看test⽤户所在的组</td></tr><tr><td>groupadd group_name</td><td>创建⽤户组</td></tr><tr><td>groupdel group_name</td><td>删除⽤户组</td></tr><tr><td>groupmod -n new_name old_name</td><td>重命名⽤户组</td></tr><tr><td>su - user_name</td><td>su - user_name</td></tr><tr><td>passwd</td><td>修改⼝令</td></tr><tr><td>passwd codesheep</td><td>修改某⽤户的⼝令</td></tr><tr><td>w</td><td>查看活动⽤户</td></tr><tr><td>id codesheep</td><td>查看指定⽤户codesheep信息</td></tr><tr><td>last</td><td>查看⽤户登录⽇志</td></tr><tr><td>crontab -l</td><td>查看当前⽤户的计划任务</td></tr><tr><td>cut -d: -f1 /etc/passwd</td><td>查看系统所有⽤户</td></tr><tr><td>cut -d: -f1 /etc/group</td><td>查看系统所有组</td></tr></tbody></table></div><h1 id="⽹络和进程管理"><a href="#⽹络和进程管理" class="headerlink" title="⽹络和进程管理"></a>⽹络和进程管理</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>ifconfig</td><td>查看⽹络接⼝属性</td></tr><tr><td>ifconfig eth0</td><td>查看某⽹卡的配置</td></tr><tr><td>route -n</td><td>查看路由表</td></tr><tr><td>netstat -lntp</td><td>查看所有监听端⼝</td></tr><tr><td>netstat -antp</td><td>查看已经建⽴的TCP连接</td></tr><tr><td>netstat -lutp</td><td>查看TCP/UDP的状态信息</td></tr><tr><td>ifup eth0</td><td>启⽤eth0⽹络设备</td></tr><tr><td>ifdown eth0</td><td>禁⽤eth0⽹络设备</td></tr><tr><td>iptables -L</td><td>查看iptables规则</td></tr><tr><td>ifconfig eth0 192.168.1.1 netmask 255.255.255.0</td><td>配置ip地址</td></tr><tr><td>dhclient eth0</td><td>以dhcp模式启⽤eth0</td></tr><tr><td>route add -net 0/0 gw Gateway_IP</td><td>配置默认⽹关</td></tr><tr><td>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1</td><td>配置静态路由到达⽹络’192.168.0.0/16’</td></tr><tr><td>route del 0/0 gw Gateway_IP</td><td>删除静态路由</td></tr><tr><td>hostname</td><td>查看主机名</td></tr><tr><td>host <a href="http://www.baidu.com">www.baidu.com</a></td><td>解析主机名</td></tr><tr><td>nslookup <a href="http://www.baidu.com">www.baidu.com</a></td><td>查询DNS记录，查看域名解析是否正常</td></tr><tr><td>ps -ef</td><td>查看所有进程</td></tr><tr><td>ps -ef \</td><td>grep codesheep</td><td>过滤出你需要的进程</td></tr><tr><td>kill -s name</td><td>kill指定名称的进程</td></tr><tr><td>kill -s pid</td><td>kill指定pid的进程</td></tr><tr><td>top</td><td>实时显示进程状态</td></tr><tr><td>vmstat 1 20</td><td>每1秒采⼀次系统状态，采20次</td></tr><tr><td>iostat</td><td>iostat</td></tr><tr><td>sar -u 1 10</td><td>查询cpu使⽤情况（1秒⼀次，共10次）</td></tr><tr><td>sar -d 1 10</td><td>查询磁盘性能</td></tr></tbody></table></div><h1 id="常⻅系统服务命令"><a href="#常⻅系统服务命令" class="headerlink" title="常⻅系统服务命令"></a>常⻅系统服务命令</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>chkconfig —list</td><td>列出系统服务</td></tr><tr><td>service &lt;服务名&gt; status</td><td>查看某个服务</td></tr><tr><td>service &lt;服务名&gt; start</td><td>启动某个服务</td></tr><tr><td>service &lt;服务名&gt; stop</td><td>终⽌某个服务</td></tr><tr><td>service &lt;服务名&gt; restart</td><td>重启某个服务</td></tr><tr><td>systemctl status &lt;服务名&gt;</td><td>查看某个服务</td></tr><tr><td>systemctl start &lt;服务名&gt;</td><td>启动某个服务</td></tr><tr><td>systemctl stop &lt;服务名&gt;</td><td>终⽌某个服务</td></tr><tr><td>systemctl restart &lt;服务名&gt;</td><td>重启某个服务</td></tr><tr><td>systemctl enable &lt;服务名&gt;</td><td>关闭⾃启动</td></tr><tr><td>systemctl disable &lt;服务名&gt;</td><td>关闭⾃启动</td></tr></tbody></table></div><h1 id="⽂件和⽬录操作"><a href="#⽂件和⽬录操作" class="headerlink" title="⽂件和⽬录操作"></a>⽂件和⽬录操作</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>cd &lt;⽬录名&gt;</td><td>进⼊某个⽬录</td></tr><tr><td>cd ..</td><td>回上级⽬录</td></tr><tr><td>cd ../..</td><td>回上两级⽬录</td></tr><tr><td>cd</td><td>进个⼈主⽬录</td></tr><tr><td>cd -</td><td>回上⼀步所在⽬录</td></tr><tr><td>pwd</td><td>显示当前路径</td></tr><tr><td>ls</td><td>查看⽂件⽬录列表</td></tr><tr><td>ls -F</td><td>查看⽬录中内容（显示是⽂件还是⽬录）</td></tr><tr><td>ls -l</td><td>查看⽂件和⽬录的详情列表</td></tr><tr><td>ls -a</td><td>查看隐藏⽂件</td></tr><tr><td>ls -lh</td><td>查看⽂件和⽬录的详情列表（增强⽂件⼤⼩易读性）</td></tr><tr><td>ls -lSr</td><td>查看⽂件和⽬录列表（以⽂件⼤⼩升序查看）</td></tr><tr><td>tree</td><td>查看⽂件和⽬录的树形结构</td></tr><tr><td>mkdir &lt;⽬录名&gt;</td><td>创建⽬录</td></tr><tr><td>mkdir dir1 dir2</td><td>同时创建两个⽬录</td></tr><tr><td>mkdir -p /tmp/dir1/dir2</td><td>创建⽬录树</td></tr><tr><td>rm -f file1</td><td>删除’file1’⽂件</td></tr><tr><td>rmdir dir1</td><td>删除’dir1’⽬录</td></tr><tr><td>rm -rf dir1</td><td>删除’dir1’⽬录和其内容</td></tr><tr><td>rm -rf dir1 dir2</td><td>同时删除两个⽬录及其内容</td></tr><tr><td>mv old_dir new_dir</td><td>重命名/移动⽬录</td></tr><tr><td>cp file1 file2</td><td>复制⽂件</td></tr><tr><td>cp dir/* .</td><td>复制某⽬录下的所有⽂件⾄当前⽬录</td></tr><tr><td>cp -a dir1 dir2</td><td>复制⽬录</td></tr><tr><td>cp -a /tmp/dir1 .</td><td>复制⼀个⽬录⾄当前⽬录</td></tr><tr><td>ln -s file1 link1</td><td>创建指向⽂件/⽬录的软链接</td></tr><tr><td>ln file1 lnk1</td><td>创建指向⽂件/⽬录的物理链接</td></tr><tr><td>find / -name file1</td><td>从跟⽬录开始搜索⽂件/⽬录</td></tr><tr><td>find / -user user1</td><td>搜索⽤户user1的⽂件/⽬录</td></tr><tr><td>find /dir -name *.bin</td><td>在⽬录/dir中搜带有.bin后缀的⽂件</td></tr><tr><td>locate &lt;关键词&gt;</td><td>快速定位⽂件</td></tr><tr><td>locate *.mp4</td><td>寻找.mp4结尾的⽂件</td></tr><tr><td>whereis &lt;关键词&gt;</td><td>显示某⼆进制⽂件/可执⾏⽂件的路径</td></tr><tr><td>which &lt;关键词&gt;</td><td>查找系统⽬录下某的⼆进制⽂件</td></tr><tr><td>chmod ugo+rwx dir1</td><td>设置⽬录所有者(u)、群组(g)及其他⼈(o)的读（r）写(w)执⾏(x)权限</td></tr><tr><td>chmod go-rwx dir1</td><td>移除群组(g)与其他⼈(o)对⽬录的读写执⾏权限</td></tr><tr><td>chown user1 file1</td><td>改变⽂件的所有者属性</td></tr><tr><td>chown -R user1 dir1</td><td>改变⽬录的所有者属性</td></tr><tr><td>chgrp group1 file1</td><td>改变⽂件群组</td></tr><tr><td>chown user1:group1 file1</td><td>改变⽂件的所有⼈和群组</td></tr></tbody></table></div><h1 id="⽂件查看和处理"><a href="#⽂件查看和处理" class="headerlink" title="⽂件查看和处理"></a>⽂件查看和处理</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>cat file1</td><td>查看⽂件内容</td></tr><tr><td>cat -n file1</td><td>查看内容并标示⾏数</td></tr><tr><td>tac file1</td><td>从最后⼀⾏开始反看⽂件内容</td></tr><tr><td>more file1</td><td>more file1</td></tr><tr><td>less file1</td><td>类似more命令，但允许反向操作</td></tr><tr><td>head -2 file1</td><td>查看⽂件前两⾏</td></tr><tr><td>tail -2 file1</td><td>查看⽂件后两⾏</td></tr><tr><td>tail -f /log/msg</td><td>实时查看添加到⽂件中的内容</td></tr><tr><td>grep codesheep hello.txt</td><td>在⽂件hello.txt中查找关键词codesheep</td></tr><tr><td>grep ^sheep hello.txt</td><td>在⽂件hello.txt中查找以sheep开头的内容</td></tr><tr><td>grep [0-9] hello.txt</td><td>选择hello.txt⽂件中所有包含数字的⾏</td></tr><tr><td>sed ‘s/s1/s2/g’ hello.txt</td><td>将hello.txt⽂件中的s1替换成s2</td></tr><tr><td>sed ‘/^$/d’ hello.txt</td><td>从hello.txt⽂件中删除所有空⽩⾏</td></tr><tr><td>sed ‘/ *#/d; /^$/d’ hello.txt</td><td>从hello.txt⽂件中删除所有注释和空⽩⾏</td></tr><tr><td>sed -e ‘1d’ hello.txt</td><td>从⽂件hello.txt 中排除第⼀⾏</td></tr><tr><td>sed -n ‘/s1/p’ hello.txt</td><td>查看只包含关键词”s1”的⾏</td></tr><tr><td>sed -e ‘s/ *$//‘ hello.txt</td><td>删除每⼀⾏最后的空⽩字符</td></tr><tr><td>sed -e ‘s/s1//g’ hello.txt</td><td>从⽂档中只删除词汇s1并保留剩余全部</td></tr><tr><td>sed -n ‘1,5p;5q’ hello.txt</td><td>查看从第⼀⾏到第5⾏内容</td></tr><tr><td>sed -n ‘5p;5q’ hello.txt</td><td>查看第5⾏</td></tr><tr><td>paste file1 file2</td><td>合并两个⽂件或两栏的内容</td></tr><tr><td>paste -d ‘+’ file1 file2</td><td>合并两个⽂件或两栏的内容，中间⽤”+”区分</td></tr><tr><td>sort file1 file2</td><td>排序两个⽂件的内容</td></tr><tr><td>comm -1 file1 file2</td><td>⽐较两个⽂件的内容(去除’file1’所含内容)</td></tr><tr><td>comm -2 file1 file2</td><td>⽐较两个⽂件的内容(去除’file2’所含内容</td></tr><tr><td>comm -3 file1 file2</td><td>⽐较两个⽂件的内容(去除两⽂件共有部分)</td></tr></tbody></table></div><h1 id="打包和解压"><a href="#打包和解压" class="headerlink" title="打包和解压"></a>打包和解压</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>zip xxx.zip file</td><td>压缩⾄zip包</td></tr><tr><td>zip -r xxx.zip file1 file2 dir1</td><td>将多个⽂件+⽬录压成zip包</td></tr><tr><td>unzip xxx.zip</td><td>解压zip包</td></tr><tr><td>tar -cvf xxx.tar file</td><td>创建⾮压缩tar包</td></tr><tr><td>tar -cvf xxx.tar file1 file2 dir1</td><td>将多个⽂件+⽬录打tar包</td></tr><tr><td>tar -tf xxx.tar</td><td>查看tar包的内容</td></tr><tr><td>tar -xvf xxx.tar</td><td>解压tar包</td></tr><tr><td>tar -xvf xxx.tar -C /dir</td><td>将tar包解压⾄指定⽬录</td></tr><tr><td>tar -cvfj xxx.tar.bz2 dir</td><td>创建bz2压缩包</td></tr><tr><td>tar -jxvf xxx.tar.bz2</td><td>解压bz2压缩包</td></tr><tr><td>tar -cvfz xxx.tar.gz dir</td><td>创建gzip压缩包</td></tr><tr><td>tar -zxvf xxx.tar.gz</td><td>解压gzip压缩包</td></tr><tr><td>bunzip2 xxx.bz2</td><td>解压bz2压缩包</td></tr><tr><td>bzip2 filename</td><td>压缩⽂件</td></tr><tr><td>gunzip xxx.gz</td><td>解压gzip压缩包</td></tr><tr><td>gzip filename</td><td>压缩⽂件</td></tr><tr><td>gzip -9 filename</td><td>最⼤程度压缩</td></tr></tbody></table></div><h1 id="RPM包管理命令"><a href="#RPM包管理命令" class="headerlink" title="RPM包管理命令"></a>RPM包管理命令</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>rpm -qa</td><td>查看已安装的rpm包</td></tr><tr><td>rpm -q pkg_name</td><td>查询某个rpm包</td></tr><tr><td>rpm -q —whatprovides xxx</td><td>显示xxx功能是由哪个包提供的</td></tr><tr><td>rpm -q —whatrequires xxx</td><td>显示xxx功能被哪个程序包依赖的</td></tr><tr><td>rpm -q —changelog xxx</td><td>显示xxx包的更改记录</td></tr><tr><td>rpm -qi pkg_name</td><td>查看⼀个包的详细信息</td></tr><tr><td>rpm -qd pkg_name</td><td>查询⼀个包所提供的⽂档</td></tr><tr><td>rpm -qc pkg_name</td><td>查看已安装rpm包提供的配置⽂件</td></tr><tr><td>rpm -ql pkg_name</td><td>查看⼀个包安装了哪些⽂件</td></tr><tr><td>rpm -qf filename</td><td>查看某个⽂件属于哪个包</td></tr><tr><td>rpm -qR pkg_name</td><td>查询包的依赖关系</td></tr><tr><td>rpm -ivh xxx.rpm</td><td>安装rpm包</td></tr><tr><td>rpm -ivh —test xxx.rpm</td><td>测试安装rpm包</td></tr><tr><td>rpm -ivh —nodeps xxx.rpm</td><td>安装rpm包时忽略依赖关系</td></tr><tr><td>rpm -e xxx</td><td>卸载程序包</td></tr><tr><td>rpm -Fvh pkg_name</td><td>升级确定已安装的rpm包</td></tr><tr><td>rpm -Uvh pkg_name</td><td>升级rpm包(若未安装则会安装)</td></tr><tr><td>rpm -V pkg_name</td><td>RPM包详细信息校验</td></tr></tbody></table></div><h1 id="YUM包管理命令"><a href="#YUM包管理命令" class="headerlink" title="YUM包管理命令"></a>YUM包管理命令</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>yum repolist enabled</td><td>显示可⽤的源仓库</td></tr><tr><td>yum search pkg_name</td><td>搜索软件包</td></tr><tr><td>yum install pkg_name</td><td>下载并安装软件包</td></tr><tr><td>yum install —downloadonly pkg_name</td><td>只 下 载 不 安 装</td></tr><tr><td>yum list</td><td>显示所有程序包</td></tr><tr><td>yum list installed</td><td>查看当前系统已安装包</td></tr><tr><td>yum list updates</td><td>查看可以更新的包列表</td></tr><tr><td>yum check-update</td><td>查看可升级的软件包</td></tr><tr><td>yum update</td><td>更新所有软件包</td></tr><tr><td>yum update pkg_name</td><td>升级指定软件包</td></tr><tr><td>yum deplist pkg_name</td><td>列出软件包依赖关系</td></tr><tr><td>yum remove pkg_name</td><td>删除软件包</td></tr><tr><td>yum clean all</td><td>清除缓存</td></tr><tr><td>yum clean packages</td><td>清除缓存的软件包</td></tr><tr><td>yum clean headers</td><td>清除缓存的header</td></tr></tbody></table></div><h1 id="DPKG包管理命令"><a href="#DPKG包管理命令" class="headerlink" title="DPKG包管理命令"></a>DPKG包管理命令</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>dpkg -c xxx.deb</td><td>列出deb包的内容</td></tr><tr><td>dpkg -i xxx.deb</td><td>安装/更新deb包</td></tr><tr><td>dpkg -r pkg_name</td><td>移除deb包</td></tr><tr><td>dpkg -P pkg_name</td><td>移除deb包(不保留配置)</td></tr><tr><td>dpkg -l</td><td>查看系统中已安装deb包</td></tr><tr><td>dpkg -l pkg_name</td><td>显示包的⼤致信息</td></tr><tr><td>dpkg -L pkg_name</td><td>查看deb包安装的⽂件</td></tr><tr><td>dpkg -s pkg_name</td><td>查看包的详细信息</td></tr><tr><td>dpkg –unpack xxx.deb</td><td>解开deb包的内容</td></tr></tbody></table></div><h1 id="APT软件⼯具"><a href="#APT软件⼯具" class="headerlink" title="APT软件⼯具"></a>APT软件⼯具</h1><div class="table-container"><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>apt-cache search pkg_name</td><td>搜索程序包</td></tr><tr><td>apt-cache show pkg_name</td><td>获取包的概览信息</td></tr><tr><td>apt-get install pkg_name</td><td>安装/升级软件包</td></tr><tr><td>apt-get purge pkg_name</td><td>卸载软件（包括配置）</td></tr><tr><td>apt-get remove pkg_name</td><td>卸载软件（不包括配置）</td></tr><tr><td>apt-get update</td><td>更新包索引信息</td></tr><tr><td>apt-get upgrade</td><td>更新已安装软件包</td></tr><tr><td>apt-get clean</td><td>清理缓存</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Liunx相关命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sparklogistics回归之用户分类</title>
      <link href="/2021/06/22/Sparklogistics%E5%9B%9E%E5%BD%92%E4%B9%8B%E7%94%A8%E6%88%B7%E5%88%86%E7%B1%BB/"/>
      <url>/2021/06/22/Sparklogistics%E5%9B%9E%E5%BD%92%E4%B9%8B%E7%94%A8%E6%88%B7%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scala初&amp;&amp;传奇之路</title>
      <link href="/2021/06/17/Scala%E5%88%9D-%E4%BC%A0%E5%A5%87%E4%B9%8B%E8%B7%AF/"/>
      <url>/2021/06/17/Scala%E5%88%9D-%E4%BC%A0%E5%A5%87%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="Scala-简介"><a href="#Scala-简介" class="headerlink" title="Scala 简介"></a>Scala 简介</h1><blockquote><p>Scala是Scalable Language的简写，是一门多范式的编程语言，由联邦理工学院洛桑（EPFL）的Martin Odersky于2001年基于Funnel的工作开始设计</p><blockquote><p>设计初衷是要集成面向对象编程和函数式编程的各种特性。</p><blockquote><p>因此Scala是一种纯面向对象的语言，每个值都是对象。同时Scala也是一种函数式语言，其函数也能当成值来使用。由于 Scala整合了面向对象语言和函数式编程的特性，Scala相对于Java、C#、C++等其他语言更加简洁。<br/><br>Scala源代码被编译成Java字节码<br>所以它可以运行于JVM之上，并可以调用现有的Java类库。Scala一开始就打算基于Java的生态系统发展自身，而这令Scala受益匪浅。</p></blockquote></blockquote></blockquote><h2 id="Scala-特性"><a href="#Scala-特性" class="headerlink" title="Scala 特性"></a>Scala 特性</h2><blockquote><p>1、面向对象<br>2、函数式编程<br>3、静态类型<br>4、Scala是可被扩展的 (提供了一个独特的语言机制来实现)</p><p>4.1、隐式类： 允许给已有的类型添加扩展方法</p><blockquote><p>隐式类是在scala 2.10中引入的，隐式类指的是用implicit关键字修饰的类。在对应的作用域内，带有这个关键字的类的主构造函数可用于隐式转换。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Helpers</span> </span>&#123;</span><br><span class="line">  <span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">IntWithTimes</span>(<span class="params">x: <span class="type">Int</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">times</span></span>[<span class="type">A</span>](f: =&gt; <span class="type">A</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">loop</span></span>(current: <span class="type">Int</span>): <span class="type">Unit</span> =</span><br><span class="line">        <span class="keyword">if</span>(current &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          f</span><br><span class="line">          loop(current - <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      loop(x)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>定义了一个隐式类IntWithTimes， 它有一个接收Int类型的构造函数，和一个times方法。那么当我们将这个类引入到我们自己的作用域时，Int类型就拥有了新的times方法  引入便可以使用<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> <span class="type">Helpers</span>._</span><br><span class="line"><span class="keyword">import</span> <span class="type">Helpers</span>._</span><br></pre></td></tr></table></figure><br>隐式类有以下限制条件</p><p>1、只能在别的trait/类/对象内部定义<br>2、构造函数只能携带一个非隐式参数<br>3、在同一作用域内，不能有任何方法、成员或对象与隐式类同名,注意：这意味着隐式类不能是case class</p></blockquote><p>4.2、字符串插值： 可以让用户使用自定义的插值器进行扩展 &lt;/br&gt; SCala提供了三种创新插值的方法：s,f,raw</p><blockquote><p>字符串插值就是将变量引用直接插入处理过的字面字符中。 这是在scala2.10.0版本引入的。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> name=<span class="string">&quot;James&quot;</span></span><br><span class="line">println(<span class="string">s&quot;Hello,<span class="subst">$name</span>&quot;</span>)<span class="comment">//Hello,James</span></span><br></pre></td></tr></table></figure><br>s插值器<br>s”Hello,$name” 是待处理字符串字面，编译器会对它做额外的工作。待处理字符串字面通过“号前的字符来标示</p></blockquote><p>f插值器<br>在任何字符串字面前加上 f，就可以生成简单的格式化串，功能相似于其他语言中的 printf 函数。当使用 f 插值器的时候，所有的变量引用都应当后跟一个printf-style格式的字符串<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> height=<span class="number">1.9</span>d</span><br><span class="line"><span class="keyword">val</span> name=<span class="string">&quot;James&quot;</span></span><br><span class="line">println(<span class="string">f&quot;<span class="subst">$name</span>%s is <span class="subst">$height</span>%2.2f meters tall&quot;</span>)<span class="comment">//James is 1.90 meters tall f 插值器是类型安全的。如果试图向只支持 int 的格式化串传入一个double 值，编译器则会报错。例如：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> height:<span class="type">Double</span>=<span class="number">1.9</span>d</span><br><span class="line"></span><br><span class="line">scala&gt;<span class="string">f&quot;<span class="subst">$height</span>%4d&quot;</span></span><br><span class="line">&lt;console&gt;:<span class="number">9</span>: error: <span class="class"><span class="keyword">type</span> <span class="title">mismatch</span></span>;</span><br><span class="line"> found : <span class="type">Double</span></span><br><span class="line"> required: <span class="type">Int</span></span><br><span class="line">           <span class="string">f&quot;<span class="subst">$height</span>%4d&quot;</span></span><br><span class="line">              ^ f 插值器利用了java中的字符串数据格式。这种以%开头的格式在 [<span class="type">Formatter</span> javadoc] 中有相关概述。如果在具体变量后没有%，则格式化程序默认使用 %s（串型）格式。</span><br></pre></td></tr></table></figure><br>raw 插值器<br>除了对字面值中的字符不做编码外，raw 插值器与 s 插值器在功能上是相同的<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scala&gt;<span class="string">s&quot;a\nb&quot;</span></span><br><span class="line">res0:<span class="type">String</span>=</span><br><span class="line">a</span><br><span class="line">b 这里，s 插值器用回车代替了\n。而raw插值器却不会如此处理。</span><br><span class="line"></span><br><span class="line">scala&gt;<span class="string">raw&quot;a\nb&quot;</span></span><br><span class="line">res1:<span class="type">String</span>=a\nb 当不想输入\n被转换为回车的时候，raw 插值器是非常实用的。</span><br></pre></td></tr></table></figure><br>自定义插值器<br>在Scala中，所有处理过的字符串字面值都进行了简单编码转换。任何时候编译器遇到一个如下形式的字符串字面值：id”string content” 它都会被转换成一个StringContext实例的call(id)方法。这个方法在隐式范围内仍可用。只需要简单得 建立一个隐类，给StringContext实例增加一个新方法，便可以定义我们自己的字符串插值器。如<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonHelper</span>(<span class="params">val sc:<span class="type">StringContext</span></span>) <span class="keyword">extends</span> <span class="title">AnyVal</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">json</span></span>(args:<span class="type">Any</span>*):<span class="type">JSONObject</span>=sys.error(<span class="string">&quot;TODO-IMPLEMENT&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">giveMeSomeJson</span></span>(x:<span class="type">JSONObject</span>):<span class="type">Unit</span>=...</span><br><span class="line"></span><br><span class="line">giveMeSomeJson(<span class="string">json&quot;&#123;name:<span class="subst">$name</span>,id:<span class="subst">$id</span>&#125;&quot;</span>) </span><br></pre></td></tr></table></figure></p><blockquote><p>在这个例子中，我们试图通过字符串插值生成一个JSON文本语法。隐类 JsonHelper 作用域内使用该语法，且这个JSON方法需要一个完整的实现。只不过，字符串字面值格式化的结果不是一个字符串，而是一个JSON对象。 注：JSON方法可以访问字符串的原生片段而每个表达式都是一个值。</p></blockquote></blockquote><p>当编译器遇到”{name:name,id:name,id:id”}”，它将会被重写成如下表达式：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">StringContext</span>(<span class="string">&quot;&#123;name:&quot;</span>,<span class="string">&quot;,id:&quot;</span>,<span class="string">&quot;&#125;&quot;</span>).json(name,id)</span><br></pre></td></tr></table></figure></p><p>隐类则被重写成如下形式:<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">JsonHelper</span>(<span class="keyword">new</span> <span class="type">StringContext</span>(<span class="string">&quot;&#123;name:&quot;</span>,<span class="string">&quot;,id:&quot;</span>,<span class="string">&quot;&#125;&quot;</span>)).json(name,id)</span><br></pre></td></tr></table></figure></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p>可扩展的scala <a href="https://www.cnblogs.com/flydean/p/12680354.html">https://www.cnblogs.com/flydean/p/12680354.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Spark </category>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark初_架构原理</title>
      <link href="/2021/06/16/Spark%E5%88%9D-%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86/"/>
      <url>/2021/06/16/Spark%E5%88%9D-%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Spark之来龙去脉"><a href="#Spark之来龙去脉" class="headerlink" title="Spark之来龙去脉"></a>Spark之来龙去脉</h1><blockquote><p>1、是一种快速、分布式、可扩展、容错率的 &lt;&gt;计算框架<br/><br>2、基于内存计算大数据分布式框架、是替代hadoop mapreduce的替代方案，替代迭代算法设计和交互式查询，支持内存存储和高效的容错恢复，Spark拥有MapReduce具有的所有优点，但不同于MapReduce，Spark的中间操作可以保存到内存中，减少读写HDFS的次数，有效提高性能</p></blockquote><h2 id="Spark的发展历程"><a href="#Spark的发展历程" class="headerlink" title="Spark的发展历程"></a>Spark的发展历程</h2><blockquote><p>2009年，Spark诞生于伯克利大学AMPLab，最初属于伯克利大学的研究性项目,实验室的研究人员之前是从事基于Hadoop mapreduce工作的，他们发现 MapReduce对于迭代和交互式计算任务效率不高，因此他们研究的Spark主要为交互式查询和迭代算法设计，支持内存存储和高效的容错恢复。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/Spark历程.png"></p></blockquote><h2 id="Spark-特点"><a href="#Spark-特点" class="headerlink" title="Spark 特点"></a>Spark 特点</h2><blockquote><p>快速</p><blockquote><p>一般情况下，对于迭代次数多的应用程序，Sapark在内存中运行速度是hadoop的100多倍，在磁盘运行速度是hadoop Mapreduce 运行速度的10多倍。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/运行速度对比.png"></p></blockquote><p>易用</p><blockquote><p>Spark支持使用Scala、Python、Java及R语言快速编写应用。同时Spark提供超过80个高级运算符，使得编写并行应用程序变得容易并且可以在Scala、Python或R的交互模式下使用Spark。</p></blockquote><p>通用</p><blockquote><p> Spark可以与SQL、Streaming及复杂的分析良好结合。Spark还有一系列的高级工具，包括Spark SQL、MLlib（机器学习库）、GraphX（图计算）和Spark Streaming，并且支持在一个应用中同时使用这些组件。</p></blockquote><p>随处执行</p><blockquote><p>用户可以使用Spark的独立集群模式运行Spark，也可以在EC2（亚马逊弹性计算云）、Hadoop YARN或者Apache Mesos上运行Spark。并且可以从HDFS、Cassandra、HBase、Hive、Tachyon和任何分布式文件系统读取数据</p></blockquote><p>代码简介</p><blockquote><p>Spark支持使用Scala、Python等语言编写。Scala或者Python的代码相对Java来说都比较简洁，因此Spark使用Scala或者Python编写应用程序要比使用MapReduce编写应用程序简单方便。</p></blockquote></blockquote><h2 id="SPark-生态圈"><a href="#SPark-生态圈" class="headerlink" title="SPark 生态圈"></a>SPark 生态圈</h2><blockquote><p>Spark的生态圈也称为BDAS（伯克利数据分析栈），是伯克利AMPLab实验室打造的，力图在算法（Algoritrhms）、机器（Machines）、人（People）之间通过大规模集成来展现大数据应用的一个平台。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/spark生态圈.png"></p></blockquote><h2 id="Spark-的重要组件"><a href="#Spark-的重要组件" class="headerlink" title="Spark 的重要组件"></a>Spark 的重要组件</h2><blockquote><p>1、Spark Sql<br>2、Spark Streaming  (流式存储)<br>3、MLlib<br>4、Graphx</p></blockquote><h2 id="Spark-1-0-amp-amp-2-0"><a href="#Spark-1-0-amp-amp-2-0" class="headerlink" title="Spark 1.0 &amp;&amp; 2.0"></a>Spark 1.0 &amp;&amp; 2.0</h2><blockquote><ol><li>Spark2 Apache Spark作为编译器:增加新的引擎Tungsten执行引擎，比Spark1快10倍</li><li>ml做了很大的改进，支持协同过滤</li><li>spark2 org.apache.spark.sql加了SparkSession把Spark的SQLcontext和hiveContext整合dataFrame去掉了，统一采用dataset</li><li>做流的方式，例如设置10秒钟一批，5秒钟处理</li><li>R语言API加入了很多机器学习的算法</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark Streaming</title>
      <link href="/2021/05/31/Spark-Streaming/"/>
      <url>/2021/05/31/Spark-Streaming/</url>
      
        <content type="html"><![CDATA[<h2 id="Spark-Streaming（流）概述"><a href="#Spark-Streaming（流）概述" class="headerlink" title="Spark Streaming（流）概述"></a>Spark Streaming（流）概述</h2><blockquote><p>数据分类</p><h2 id="离线数据和实时数据（相对实时）"><a href="#离线数据和实时数据（相对实时）" class="headerlink" title=" 离线数据和实时数据（相对实时）"></a> 离线数据和实时数据（相对实时）</h2><p>Spark Streaming 用于流式处理</p></blockquote><h2 id="DStream-简介"><a href="#DStream-简介" class="headerlink" title="DStream 简介"></a>DStream 简介</h2><p>&gt;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;echarts基础图形之雷达图&#39;</title>
      <link href="/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E9%9B%B7%E8%BE%BE%E5%9B%BE/"/>
      <url>/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E9%9B%B7%E8%BE%BE%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;echarts基础图形之散点图&#39;</title>
      <link href="/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E6%95%A3%E7%82%B9%E5%9B%BE/"/>
      <url>/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E6%95%A3%E7%82%B9%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;echarts基础图形之pie图&#39;</title>
      <link href="/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8Bpie%E5%9B%BE/"/>
      <url>/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8Bpie%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="饼图代码"><a href="#饼图代码" class="headerlink" title="饼图代码"></a>饼图代码</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">     title:&#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;某站点用户访问来源&#x27;</span>,</span><br><span class="line">        <span class="attr">subtext</span>: <span class="string">&#x27;纯属虚构&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>:<span class="string">&#x27;center&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>:&#123;</span><br><span class="line">        <span class="attr">trigger</span>:<span class="string">&#x27;item&#x27;</span>, <span class="comment">//触发类型 默认数据触发见下图 可选为：item | axis</span></span><br><span class="line">        <span class="attr">formatter</span>:<span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span> <span class="comment">//a(系类名称)， b（数据项名称）， c（数值），d(饼图：百分比 |雷达图：指标名称)</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>:&#123;</span><br><span class="line">        <span class="attr">orient</span>:<span class="string">&#x27;vertical&#x27;</span>, <span class="comment">//布局方式 默认为水平布局，可选为：horizontal | vertical</span></span><br><span class="line">        <span class="attr">x</span>:<span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:[<span class="string">&#x27;直接访问&#x27;</span>,<span class="string">&#x27;邮件营销&#x27;</span>,<span class="string">&#x27;联盟广告&#x27;</span>,<span class="string">&#x27;视屏广告&#x27;</span>,<span class="string">&#x27;社会赞助&#x27;</span>,<span class="string">&#x27;搜索引擎&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">toolbox</span>:&#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">feature</span>:&#123;</span><br><span class="line">            <span class="attr">mark</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">dataView</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">readOnly</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">restore</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">savaAsImage</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">calculable</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">series</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;访问来源&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>:<span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="comment">//半径，支持绝对值（px）和百分比计算比 min(width,height) /2*75，传输组实现环形图[内半径，外半径]</span></span><br><span class="line">            <span class="attr">radius</span>:<span class="string">&#x27;50%&#x27;</span>,</span><br><span class="line">            <span class="attr">center</span>:[<span class="string">&#x27;50%&#x27;</span>,<span class="string">&#x27;60%&#x27;</span>], <span class="comment">//圆心坐标、支持绝对值（px)和百分比，百分比计算 min(windth,height)* 50%</span></span><br><span class="line">            <span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                <span class="attr">normal</span>:&#123;</span><br><span class="line">                    <span class="attr">label</span>:&#123;</span><br><span class="line">                        <span class="attr">show</span>:<span class="literal">true</span>,</span><br><span class="line">                        <span class="attr">formatter</span>:<span class="string">&#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">335</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;直接访问&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">310</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;邮件访问&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">234</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;联盟广告&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">135</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;视屏广告&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">1521</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;社会赞助&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">1535</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;搜索引擎&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">myChart.setOption(option);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Echarts可视化 </category>
          
          <category> 饼图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 饼图代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts饼图基础图形</title>
      <link href="/2020/10/08/echarts%E9%A5%BC%E5%9B%BE%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2/"/>
      <url>/2020/10/08/echarts%E9%A5%BC%E5%9B%BE%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ul><li>代码如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">backgroundColor</span>: <span class="string">&#x27;#2c343c&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Customized Pie&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">top</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#ccc&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">visualMap</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">min</span>: <span class="number">80</span>,</span><br><span class="line">        <span class="attr">max</span>: <span class="number">600</span>,</span><br><span class="line">        <span class="attr">inRange</span>: &#123;</span><br><span class="line">            <span class="attr">colorLightness</span>: [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;访问来源&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: <span class="string">&#x27;55%&#x27;</span>,</span><br><span class="line">            <span class="attr">center</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;50%&#x27;</span>],</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">&#x27;邮件营销&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">274</span>, <span class="attr">name</span>: <span class="string">&#x27;联盟广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">235</span>, <span class="attr">name</span>: <span class="string">&#x27;视频广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">400</span>, <span class="attr">name</span>: <span class="string">&#x27;搜索引擎&#x27;</span>&#125;</span><br><span class="line">            ].sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123; <span class="keyword">return</span> a.value - b.value; &#125;),</span><br><span class="line">            <span class="attr">roseType</span>: <span class="string">&#x27;radius&#x27;</span>,</span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255, 0.3)&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">labelLine</span>: &#123;</span><br><span class="line">                <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255, 0.3)&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">smooth</span>: <span class="number">0.2</span>,</span><br><span class="line">                <span class="attr">length</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="attr">length2</span>: <span class="number">20</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#c23531&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 0, 0, 0.5)&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="attr">animationType</span>: <span class="string">&#x27;scale&#x27;</span>,</span><br><span class="line">            <span class="attr">animationEasing</span>: <span class="string">&#x27;elasticOut&#x27;</span>,</span><br><span class="line">            <span class="attr">animationDelay</span>: <span class="function"><span class="keyword">function</span> (<span class="params">idx</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Math</span>.random() * <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h3><p>利用疫数据制作两表出来<br>要求如下<br>1.饼图<br>2.折线图<br>    2.1折线图<br>暂时不要求美化</p>]]></content>
      
      
      <categories>
          
          <category> Echarts可视化 </category>
          
          <category> 饼图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 饼图基本格式以及个句代码解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts折线图糅合柱状图</title>
      <link href="/2020/10/06/Echarts%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%B3%85%E5%90%88%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
      <url>/2020/10/06/Echarts%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%B3%85%E5%90%88%E6%9F%B1%E7%8A%B6%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="基础折线图大概全部代码"><a href="#基础折线图大概全部代码" class="headerlink" title="基础折线图大概全部代码"></a>基础折线图大概全部代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">title</span>:&#123;</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;长韵&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>:<span class="string">&#x27;http://www.changan.bio/&#x27;</span>,</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;self&#x27;</span>,</span><br><span class="line">        <span class="attr">textStyle</span>:&#123;</span><br><span class="line">          <span class="attr">color</span>:<span class="string">&quot;#49b1f5&quot;</span>            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">subtext</span>:<span class="string">&#x27;通往一个属于自己的小博客&#x27;</span>,</span><br><span class="line">        <span class="attr">subtextStyle</span>:&#123;</span><br><span class="line">            <span class="attr">color</span>:<span class="string">&quot;#23b1f5&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">areaStyle</span>: &#123;&#125;,</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="折线图柔和柱状图"><a href="#折线图柔和柱状图" class="headerlink" title="折线图柔和柱状图"></a>折线图柔和柱状图</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">title</span>:&#123;</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;长韵&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>:<span class="string">&#x27;http://www.changan.bio/&#x27;</span>,</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;self&#x27;</span>,</span><br><span class="line">        <span class="attr">textStyle</span>:&#123;</span><br><span class="line">          <span class="attr">color</span>:<span class="string">&quot;#49b1f5&quot;</span>            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">subtext</span>:<span class="string">&#x27;通往一个属于自己的小博客&#x27;</span>,</span><br><span class="line">        <span class="attr">subtextStyle</span>:&#123;</span><br><span class="line">            <span class="attr">color</span>:<span class="string">&quot;#23b1f5&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>:&#123;</span><br><span class="line">        <span class="attr">data</span>:[<span class="string">&#x27;邮件营销&#x27;</span>, <span class="string">&#x27;联盟广告&#x27;</span>, <span class="string">&#x27;视频广告&#x27;</span>, <span class="string">&#x27;直接访问&#x27;</span>, <span class="string">&#x27;搜索引擎&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">areaStyle</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">data</span>:[<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&#x27;bar&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="个句代码进行解释"><a href="#个句代码进行解释" class="headerlink" title="个句代码进行解释"></a>个句代码进行解释</h3><p>title 标题<br>areaStyle 是否填充 </p><h2 id=""><a href="#" class="headerlink" title="#"></a>#</h2><p>To be trusted is a greater compliment than to be loved.<br>被人信任，是比被人喜爱还要更大的赞许。</p><h2 id="会进行合并成为五种基本图形"><a href="#会进行合并成为五种基本图形" class="headerlink" title="会进行合并成为五种基本图形"></a>会进行合并成为五种基本图形</h2>]]></content>
      
      
      <categories>
          
          <category> Echarts可视化 </category>
          
          <category> 折线图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折线图基本格式以及个句代码解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;Echarts柱状图基础</title>
      <link href="/2020/10/05/Echarts%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/10/05/Echarts%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="基础柱状图"><a href="#基础柱状图" class="headerlink" title="基础柱状图"></a>基础柱状图</h2><p>结构构成<br>    -在绘图前我们需要为 ECharts 准备一个具备高宽的 DOM 容器<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>    -要将echarts实例化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;main&#x27;</span>));  <span class="comment">//基于echarts.init根据盒子进行实例化 获取当前事件id为main的盒子</span></span><br></pre></td></tr></table></figure><h3 id="整个柱状图代码"><a href="#整个柱状图代码" class="headerlink" title="整个柱状图代码"></a>整个柱状图代码</h3><figure class="highlight java"><figcaption><span>Server Pages</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    backgroundColor: <span class="string">&#x27;#12cf96&#x27;</span>,</span><br><span class="line">    xAxis: &#123; </span><br><span class="line">        type: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        data: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: &#123;</span><br><span class="line">        type: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        data: [<span class="number">120</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">110</span>, <span class="number">130</span>],</span><br><span class="line">        type: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">        showBackground: <span class="keyword">true</span>,</span><br><span class="line">        backgroundStyle: &#123;</span><br><span class="line">            color: <span class="string">&#x27;rgba(220, 220, 220, 0.8)&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="个名词解释"><a href="#个名词解释" class="headerlink" title="个名词解释"></a>个名词解释</h3><h4 id="xAxis-相当于一个直角坐标系的x轴"><a href="#xAxis-相当于一个直角坐标系的x轴" class="headerlink" title="xAxis  相当于一个直角坐标系的x轴"></a>xAxis  相当于一个直角坐标系的x轴</h4><blockquote><p>&nbsp;&nbsp; -type   声明类型<br>&nbsp;&nbsp; -category 也就是要声明的类型<br>&nbsp;&nbsp; -data  就是x轴的数值</p></blockquote><h4 id="yAxis-相反也是就是相当于直角坐标系的y轴"><a href="#yAxis-相反也是就是相当于直角坐标系的y轴" class="headerlink" title="yAxis  相反也是就是相当于直角坐标系的y轴"></a>yAxis  相反也是就是相当于直角坐标系的y轴</h4><blockquote><p>&nbsp;&nbsp;&nbsp;-value 声明这个值<br>&nbsp;&nbsp;-series<br>&nbsp;&nbsp;&nbsp;—data 就是y轴的数据 当然数据后都会以英文逗号分隔<br>&nbsp;&nbsp;&nbsp;—type:”bar” 声明这个是柱状图<br>&nbsp;&nbsp;&nbsp;— showBackground: true 补全数据不全的地方 可以理解为没有数据为了好观看而白色标识 只有一个参数<br>-backgroundStyle: {<br>            color: ‘rgba(220, 220, 220, 0.8)’<br>            }<br>&nbsp;&nbsp;&nbsp; 调节空白显示的颜色 这种方式用的rbg三色调<br>&nbsp;&nbsp;&nbsp;  -backgroundColor 以前js或css就有了的 这不多讲</p></blockquote><!-- | 项目        | 价格    |  数量   || --------    | -----: | :----:  || 计算机      | \$1600  |   5    || 手机        |   \$12  |   12   || 管线        |    \$1  |   234  | --><h2 id="柱状图的晋级"><a href="#柱状图的晋级" class="headerlink" title="柱状图的晋级"></a>柱状图的晋级</h2><p>To be a princess, you have to believe that you are a princess.<br>要想成为公主，你必须相信自己就是公主。</p>]]></content>
      
      
      <categories>
          
          <category> Echarts可视化 </category>
          
          <category> 柱状图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 柱状图基本格式以及个句代码解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyecharts的语法格式及意思解释</title>
      <link href="/2020/09/23/Pyecharts%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F%E5%8F%8A%E6%84%8F%E6%80%9D%E8%A7%A3%E9%87%8A/"/>
      <url>/2020/09/23/Pyecharts%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F%E5%8F%8A%E6%84%8F%E6%80%9D%E8%A7%A3%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Pyecharts的大概意思"><a href="#Pyecharts的大概意思" class="headerlink" title="Pyecharts的大概意思"></a>Pyecharts的大概意思</h1><blockquote><p>chart_name=图表类型（）初始化具体的类型的图表<br> chart_name.add_xaxis()添加横坐标名称<br> chart_name.add_yaxis()添加纵坐标数据<br> chart_name.render()生成.html</p></blockquote><h2 id="导入包的解释"><a href="#导入包的解释" class="headerlink" title="导入包的解释"></a>导入包的解释</h2><blockquote><p>from pyecharts.faker import Faker 添加随机数据<br>from pyecharts.charts import Bar 导入需要的包<br>from pyecharts import as opts 找到某个需要的东西，as 为别名<br>from pyecharts.globals import ThemeType 这个模块可以修改主题</p></blockquote><h2 id="柱状图的实例化"><a href="#柱状图的实例化" class="headerlink" title="柱状图的实例化"></a>柱状图的实例化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType  </span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(theme=ThemeType.PURPLE_PASSION))  //对Bar进行实例化 添加init_opts=opts.InitOpts(theme=ThemeType.。。。添加主题名称） 进行实例化的时候进行主题的初始化 </span><br><span class="line">&gt; bar.set_global_opts(title_opts=opts.TitleOpts(title=<span class="string">&quot;Bar~基本&quot;</span>,subtitle=<span class="string">&quot;我是副标题&quot;</span>))  //title_opts主标题  subtitle副题--&gt;那个会在其他文档中说到，这不详说</span><br><span class="line">bar.add_xaxis(Faker.choose())  //Faker.choose指的是文字</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品&quot;</span>,Faker.values() //Faker.values指的是数据</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><blockquote><p>注意的：type可以查看数据类型 xaxis中里面添加的数据必须是python的list/列表类型。如果是numpy数组需要转换成list</p></blockquote><h3 id="柱状图实例化的高度"><a href="#柱状图实例化的高度" class="headerlink" title="柱状图实例化的高度"></a>柱状图实例化的高度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(</span><br><span class="line">    theme=ThemeType.MACARONS, //修改高度，宽度</span><br><span class="line">    width=<span class="string">&quot;1920px&quot;</span>,</span><br><span class="line">    height=<span class="string">&quot;1080px&quot;</span></span><br><span class="line"></span><br><span class="line">))</span><br><span class="line"><span class="comment"># 修改主标题</span></span><br><span class="line">bar.set_global_opts(</span><br><span class="line">    title_opts=opts.TitleOpts(</span><br><span class="line">        title=<span class="string">&quot;Bar~基本&quot;</span>,</span><br><span class="line">        subtitle=<span class="string">&quot;我是副标题&quot;</span>)，</span><br><span class="line">                xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=<span class="number">30</span>))  //<span class="number">30</span> 旋转的角度 y轴的同等</span><br><span class="line">        )</span><br><span class="line">bar.add_xaxis(Faker.choose())</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品A&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品B&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)  // 他们是处于叠加态（处于叠加）的 如果不设置stack那么它会成一行接一行，不会形成叠加 stack填写的类容一样会被认为是同一叠加</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><blockquote><p>注：叠加比较好看到时间占比或者说是某种占比度更大</p></blockquote><!-- # --> 平均值、最值<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(</span><br><span class="line">    theme=ThemeType.MACARONS,</span><br><span class="line">    width=<span class="string">&quot;1920px&quot;</span>,</span><br><span class="line">    height=<span class="string">&quot;720px&quot;</span></span><br><span class="line"></span><br><span class="line">))</span><br><span class="line"><span class="comment"># 修改主标题</span></span><br><span class="line">bar.set_global_opts(</span><br><span class="line">    title_opts=opts.TitleOpts(</span><br><span class="line">        title=<span class="string">&quot;Bar~基本&quot;</span>,</span><br><span class="line">        subtitle=<span class="string">&quot;我是副标题&quot;</span>),</span><br><span class="line">        xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=<span class="number">30</span>))</span><br><span class="line">),</span><br><span class="line">bar.add_xaxis(Faker.choose())</span><br><span class="line"><span class="comment"># bar.add_xaxis(Faker.choose())</span></span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品A&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品B&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.set_series_opts(</span><br><span class="line">    label_opts=opts.LabelOpts(is_show=<span class="literal">False</span>),</span><br><span class="line">    markpoint_opts=opts.MarkPointOpts( //表示出极值</span><br><span class="line">        data=[</span><br><span class="line">            //最值</span><br><span class="line">            opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>,name=<span class="string">&quot;最大值&quot;</span>),</span><br><span class="line">            opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>,name=<span class="string">&quot;最小值&quot;</span>),</span><br><span class="line"></span><br><span class="line">        ]</span><br><span class="line">    ),</span><br><span class="line">    markline_opts=opts.MarkLineOpts(   //表示平均，画线</span><br><span class="line">        data=[</span><br><span class="line">            //平均</span><br><span class="line">            opts.MarkLineItem(type_=<span class="string">&quot;average&quot;</span>,name=<span class="string">&quot;平均值&quot;</span>),</span><br><span class="line">        ]</span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line">bar.reversal_axis( ) //交换x轴y轴</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><h2 id="今日图形到此结束-9-28"><a href="#今日图形到此结束-9-28" class="headerlink" title="今日图形到此结束 9-28"></a>今日图形到此结束 9-28</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>每日一首古诗词-过苏禄东王墓</title>
      <link href="/2020/08/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E8%BF%87%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93/"/>
      <url>/2020/08/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E8%BF%87%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93/</url>
      
        <content type="html"><![CDATA[<h2 id="每日一首古诗词-过苏禄东王墓"><a href="#每日一首古诗词-过苏禄东王墓" class="headerlink" title="每日一首古诗词-过苏禄东王墓"></a>每日一首古诗词-过苏禄东王墓</h2><h2 id="清代-顾炎武"><a href="#清代-顾炎武" class="headerlink" title="清代-顾炎武"></a>清代-顾炎武</h2><blockquote><p>丰碑遥见炳奎题，尚忆先朝宠日殚。<br>世有国人供洒扫，每勤词客驻轮蹄。<br>九河水壮龙狐出，十二城荒向鹤栖。<br>下马一为郯子问，中原云鸟正凄迷。</p><h2 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h2><ol><li>哪天兴致所来-在来填写<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2>苏禄国东王墓：明永乐十五年（1417年），苏禄国（今菲律宾）东王巴都葛叭哈喇、西王巴都葛叭苏里和峒王巴都葛叭喇卜率领家眷一行340多人访问中国，受到明永乐皇帝（明成祖朱棣）的热情接待，在北逗留27天。在取道运河回国途经德州时东王不幸遭疾，病故德州。明成祖朱棣派礼部郎中陈世启带祭文赶运至德州为东王举行了隆重葬礼。王妃及两个儿子留居德州守墓，后改为温、安二姓入籍中国。苏禄国东王墓（坐落在山东省德州市城区北部的北营村）成为我国两个中其中一座外国王陵（另一座是位于南京的浡泥国王墓），也是中国唯一的驻有外国王室后裔守陵村落的异邦王陵。，在历史上具有独特的地位和意义。<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2>顾炎武（1613.7.15—1682.2.15），汉族，明朝南直隶苏州府昆山（今江苏省昆山市）千灯镇人，本名绛，乳名藩汉，别名继坤、圭年，字忠清、宁人，亦自署蒋山佣；南都败后，因为仰慕文天祥学生王炎午的为人，改名炎武。因故居旁有亭林湖，学者尊为亭林先生。明末清初的杰出的思想家、经学家、史地学家和音韵学家，与黄宗羲、王夫之并称为明末清初“三大儒”。<br>他一生辗转，行万里路，读万卷书，创立了一种新的治学方法，成为清初继往开来的一代宗师，被誉为清学“开山始祖”。顾炎武学问渊博，于国家典制、郡邑掌故、天文仪象、河漕、兵农及经史百家、音韵训诂之学，都有研究。晚年治经重考证，开清代朴学风气。其学以博学于文，行己有耻为主，合学与行、治学与经世为一。诗多伤时感事之作。<br>其主要作品有《日知录》、《天下郡国利病书》、《肇域志》、《音学五书》、《韵补正》、《古音表》、《诗本音》、《唐韵正》、《音论》、《金石文字记》、《亭林诗文集》等。<h2 id="平仄"><a href="#平仄" class="headerlink" title="平仄"></a>平仄</h2>丰碑遥见炳奎题，尚忆先朝宠日殚。<br>平平仄仄仄平平，仄仄平平仄仄平。<br>世有国人供洒扫，每勤词客驻轮蹄。<br>仄仄平平平仄仄，平平仄仄仄平平。<br>九河水壮龙狐出，十二城荒向鹤栖。<br>平平仄仄平平仄，仄仄平平仄仄平。<br>下马一为郯子问，中原云鸟正凄迷<br>仄仄平平平仄仄，平平仄仄仄平平</li></ol></blockquote><h2 id="出处，参考"><a href="#出处，参考" class="headerlink" title="出处，参考"></a>出处，参考</h2><p>古诗词网：<a href="http://www.gushicimingju.com/gushi/shi/185705.html">http://www.gushicimingju.com/gushi/shi/185705.html</a><br>百度文科：<a href="https://baike.baidu.com/item/%E8%8B%8F%E7%A6%84%E7%8E%8B%E5%A2%93/793310?fromtitle=%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93&amp;fromid=3023948&amp;fr=aladdin">https://baike.baidu.com/item/%E8%8B%8F%E7%A6%84%E7%8E%8B%E5%A2%93/793310?fromtitle=%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93&amp;fromid=3023948&amp;fr=aladdin</a></p>]]></content>
      
      
      <categories>
          
          <category> 文学作品 </category>
          
          <category> 古诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一首古诗词-过苏禄东王墓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日一首古诗词-岳鄂王墓</title>
      <link href="/2020/08/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E5%B2%B3%E9%84%82%E7%8E%8B%E5%A2%93/"/>
      <url>/2020/08/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E5%B2%B3%E9%84%82%E7%8E%8B%E5%A2%93/</url>
      
        <content type="html"><![CDATA[<h2 id="每日一首古诗词-岳鄂王墓"><a href="#每日一首古诗词-岳鄂王墓" class="headerlink" title="每日一首古诗词-岳鄂王墓"></a>每日一首古诗词-岳鄂王墓</h2><h2 id="元朝-赵孟俯"><a href="#元朝-赵孟俯" class="headerlink" title="元朝 赵孟俯"></a>元朝 赵孟俯</h2><blockquote><p>鄂王墓上草离离，秋日荒凉石兽危。<br>南渡君臣轻社稷，中原父老望旌旗。<br>英雄已死嗟何及，天下中分遂不支。<br>莫向西湖歌此曲，水光山色不胜悲。</p><h2 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h2><p>岳飞墓上荒草离离，一片荒凉，只有秋草、石兽而已。<br>南渡君臣轻视社稷，可中原父老还在盼望着王师的旌旗。<br>英雄被害，后悔晚矣，天下灭亡已成定局。<br>不要向西湖吟唱此诗，面对这样的景致无从吟起。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>岳鄂王墓:即岳飞墓,现杭州西湖边栖霞岭下.岳飞于绍兴十一年（1142年）被权奸秦桧等阴谋杀害。宋宁宗嘉泰四年（1204年），追封为鄂王。<br>离离:草茂盛的样子<br>危:高耸屹立的样子<br>石兽:古时石头雕刻动物的立于墓前<br>南渡君臣：指以宋高宗赵构为代表的统治集团。北宋亡后，高宗渡过长江，迁于南方，建都临安（今杭州），史称南渡<br>社稷: 江山国家.社,土地神.稷,谷神<br>望旌旗：意为盼望南宋大军到来。旌旗，代指军队。<br>嗟何及：后悔叹息已来不及。<br>天下中分遂不支：意为从此国家被分割为南北两半，而南宋的半壁江山也不能支持，终于灭亡。</p></blockquote><h2 id="创作背景"><a href="#创作背景" class="headerlink" title="创作背景"></a>创作背景</h2><p>元至元二十三年（1286年）行台侍御史程钜夫“奉诏搜访遗逸于江南”，赵孟頫当仁不让、毫不推辞，到了京城立即受到元世祖的接见。此后官运亨通，做到了翰林学士承旨、荣禄大夫，官居从一品。当时指责赵孟頫的人不少，但今人当更宽容地看待。这是首好诗，不能因人废言。</p><h2 id="赏析"><a href="#赏析" class="headerlink" title="赏析"></a>赏析</h2><p> 这是一支悲愤的悼歌。岳飞的惨死是中国历史上的一大悲剧。岳飞虽然冤死，但他的英名却永远留在历代人民的心中。宋宁宗嘉泰四年（1204年），追封岳飞为鄂王，旷世冤案得以昭雪，离岳飞被害已62年。岳墓建在风景秀丽的西湖岸边，岳飞虽封王建墓，但由于连年战乱，陵园荒芜，景象凄凉。这首诗以反映这样的现实入笔。</p><p>　　首联以离离墓草渲染岳墓秋日的荒凉，冷硬屹立的石兽，更增添了几分悲思。接下来用南北君民作对比，谴责南宋当局苟安享乐、不思北进，同情中原父老忍受煎熬，遥望南师。颈联哀叹有望承担中兴重任的英雄岳飞悲惨死去，使天下南北中分以至南宋最终被蒙古人灭亡。作者在尾联悲痛地吟道：“莫向西湖歌此曲，水光山色不胜悲。”满含湖光依旧，河山易主的深沉的感慨。</p><p>　　作者以赵宋后裔的身份为冤死于赵宋王朝的岳飞，由衷地唱出这支哀痛伤惋的悼歌，分外感人。<br>后面两句,蕴含了诗人无尽的家国之思、亡国之恨。</p><h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>赵孟頫（1254—1322），字子昂，号松雪，松雪道人，又号水精宫道人、鸥波，中年曾作孟俯，汉族，吴兴（今浙江湖州）人。元代著名画家，楷书四大家（欧阳询、颜真卿、柳公权、赵孟頫）之一。赵孟頫博学多才，能诗善文，懂经济，工书法，精绘艺，擅金石，通律吕，解鉴赏。特别是书法和绘画成就最高，开创元代新画风，被称为“元人冠冕”。他也善篆、隶、真、行、草书，尤以楷、行书著称于世。</p><h2 id="平仄"><a href="#平仄" class="headerlink" title="平仄"></a>平仄</h2><p>鄂王坟上草离离，秋日荒凉石兽危。<font color="FFF000">起</font><br>平平仄仄仄平平，仄仄平平仄仄平。<br>南渡君臣轻社稷，中原父老望旌旗。<font color="FF0000">对仗</font> <font color="FFF000">承</font><br>仄仄平平平仄仄，平平仄仄仄平平。<br>英雄已死嗟何及，天下中分遂不支。<font color="FF0000">对仗</font> <font color="FFF000">转</font><br>平平仄仄平平仄，仄仄平平仄仄平。<br>莫向西湖歌此曲，水光山色不胜悲。<font color="FFF000">合</font><br>仄仄平平平仄仄，平平仄仄仄平平。</p>]]></content>
      
      
      <categories>
          
          <category> 文学作品 </category>
          
          <category> 古诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日一首古诗词-岳鄂王墓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive安装和配置</title>
      <link href="/2020/08/28/Hive%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/08/28/Hive%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="解决hive只能开一个的问题"><a href="#解决hive只能开一个的问题" class="headerlink" title="解决hive只能开一个的问题"></a>解决hive只能开一个的问题</h2><ol><li>hive只能开一个客户端 把元数据放在MySQL中<br> 1.2  因为Metastore默认存储在自带目录的derby数据库中的，推荐使用MySQL储存Metastoree</li></ol><h2 id="安装MySQL过程中的错误"><a href="#安装MySQL过程中的错误" class="headerlink" title="安装MySQL过程中的错误"></a>安装MySQL过程中的错误</h2><blockquote><p>linux 关于rpm和find部分命令使用方式</p><pre><code>- rpm -qa |grep mysql 查询系统中有没有这个安装包- find -name &quot;*-db&quot; 查询满足条件的后缀- rpm -qa |grep -i mysql 查看于包相关的</code></pre></blockquote><h3 id="特殊的解压方式"><a href="#特殊的解压方式" class="headerlink" title="特殊的解压方式"></a>特殊的解压方式</h3><blockquote><p>unzip  mysql-libs.zip 解压zip后缀的的文件<br>rpm -ivh MySQL-client-5.6.24-1.el6.x86_64.rpm 则是安装包或者rpm后缀<br>tar -zxvf 则可以解压平常或者常见的安装包</p></blockquote><h3 id="删除一个单独的包"><a href="#删除一个单独的包" class="headerlink" title="删除一个单独的包"></a>删除一个单独的包</h3><blockquote><pre><code>rpm -e MySQL-client-5.6.24-1.el6.x86_64.rpm  卸载MySQL-client-5.6.24-1.el6.x86_64.rpm 这个包- yum remove mariadb-libs-5.5.60-1.el7_5.x86_64 删除冲突的包- rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64 强制删除</code></pre></blockquote><h2 id="Hive元数据"><a href="#Hive元数据" class="headerlink" title="Hive元数据"></a>Hive元数据</h2>]]></content>
      
      
      <categories>
          
          <category> 程序、语言、框架 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive安装和配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive相关概念</title>
      <link href="/2020/08/28/Hive%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/08/28/Hive%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="大数据主要解决3个问题"><a href="#大数据主要解决3个问题" class="headerlink" title="大数据主要解决3个问题"></a>大数据主要解决3个问题</h2><ul><li>传输    存储      计算(Hive)</li></ul><h1 id=""><a href="#" class="headerlink" title="#"></a>#</h1><ol><li>Hive：海量日志结构化工具 基于Hadoop的一个数据仓库，可以将结构化的数据文件映射为一张表，并提供类MySQL的查询，<font color=#FF0000 >本s质上是将HQL转换成MapReduce</font> <font color=#FF0000 >计算一定是分布式的</font></li><li>Hive的分析底层的默认实现的MapRedecu</li><li>Hive有优点<pre><code>     3.1 提供快速开发的的能力     3.2 减少开发人员学习成本     3.3 在于处理大数据，对于小数据没有优势，应为Hive的延迟比较高     3.4 Hive支持用户自定义函数，可以根据自己需求来实现</code></pre></li><li>Hive缺点<pre><code>     4.1 Hive的HQL的表达能力有限</code></pre></li></ol><blockquote><pre><code>           4.1.1 迭代式算法无法表达           4.1.2 数据挖掘方面不擅长        4.2 Hive的效率较低           4.2.1 Hive自动生成的Mapreduce作业，不够智能化          4.2.2 Hive调优较为麻烦粒度较粗</code></pre></blockquote><ol><li><p>Hive架构原理</p> <!--http://106.54.84.55:8080/changyun/1.png --><p><img src="http://106.54.84.55:8080/changyun/1.png" alt="Hive"></p><p> 5.1 元数据  Metastore</p><pre><code> 元数据包括：表明、表所属数据库（默认default）、表的拥有者、分区字段、表的类型 数据目录&lt;font color=#FF0000 &gt;默认储存自带的derby数据库中，推荐使用MySQL储存Metastore&lt;/font&gt;</code></pre></li><li><p>Hive运行机制</p> <!--http://106.54.84.55:8080/changyun/2.png --><p><img src="http://106.54.84.55:8080/changyun/2.png" alt="Hive"></p></li><li><p>Hive和数据库的对比</p></li></ol><blockquote><p>数据的存储位置不同 由于hive是建立在hadoop上面的 所有数据都是存储在HDFS中，而数据库则可以将数据保存在块设备或者本地文件系统中</p><blockquote><p>   数据的更新： <font color=#FF0000 >由于hives是针对数据仓库设立的，而数据仓库的内容主要是读多写少，因此，Hive中是不会建议修改数据的，所有数据都是在加载好的时候确定的</font>，而数据库需要经常修改</p><blockquote><p>索引： Hive在加载数据是不会进行任何操作，甚至不会对数据进行扫描，所以就别就不会存在key,Hive要访问数中符合特定条件会<font color=#FF0000>需要暴力扫描整个数据<font>,而数据库对一个或几个列建立key提高数据的访问，数据库可以有很高的效率、较低的延迟，由于数据的访问延迟高，决定Hive不适合在线查询</p><blockquote><p>执行： Hive中大多数查询通过Hadoop提供的Mapreduce来实现，而数据库通常有自己的执行引擎<br>可扩展性： 由于Hive时建立在Hadoop上面的，所以Hive和Hadoop的可扩展性的一致的<br>    数据规模： 由于hive是建立在集群上并可以利用Mapreduce进行计算，因此可以支持很大的规模的数据，对应的，数据库所支持就相对较小</p></blockquote></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序、语言、框架 </category>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive相关概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Poetry</title>
      <link href="/2020/08/26/Poetry/"/>
      <url>/2020/08/26/Poetry/</url>
      
        <content type="html"><![CDATA[<h2 id="每天一首古诗词-渡荆门送别"><a href="#每天一首古诗词-渡荆门送别" class="headerlink" title="每天一首古诗词-渡荆门送别"></a>每天一首古诗词-渡荆门送别</h2><h2 id="唐-李太白"><a href="#唐-李太白" class="headerlink" title="唐-李太白"></a>唐-李太白</h2><blockquote><p>渡远荆门外，来从楚国游。<br>山随平野尽，江入大荒流。<br>月下飞天境，云生结海楼。<br>仍怜故乡水，万里送行舟。</p></blockquote><h2 id="【译文】"><a href="#【译文】" class="headerlink" title="【译文】"></a>【译文】</h2><blockquote><p>乘船远行，路过荆门一带，来到楚国故地。<br>青山渐渐消失，平野一望无边。长江滔滔奔涌，流入广袤荒原。<br>月映江面，犹如明天飞镜；云彩升起，变幻无穷，结成了海市蜃楼。<br>故乡之水恋恋不舍，不远万里送我行舟。</p><h2 id="【注释】"><a href="#【注释】" class="headerlink" title="【注释】"></a>【注释】</h2><p>荆门：山名，位于今湖北省宜都县西北长江南岸，与北岸虎牙三对峙，地势险要，自古即有楚蜀咽喉之称。<br>远：远自。<br>楚国：楚地，指湖北一带，春秋时期属楚国。<br>平野：平坦广阔的原野。<br>江：长江。大荒：广阔无际的田野。<br>月下飞天镜：明月映入江水，如同飞下的天镜。下：移下。<br>海楼：海市蜃楼，这里形容江上云霞的美丽景象。<br>仍：依然。怜：怜爱。一本作“连”。故乡水：指从四川流来的长江水。因诗人从小生活在四川，把四川称作故乡。<br>万里：喻行程之远。</p><h2 id="【赏析】"><a href="#【赏析】" class="headerlink" title="【赏析】"></a>【赏析】</h2><p>这首诗是李白出蜀时所作。李白这次出蜀，由水路乘船远行，经巴渝，出三峡，直向荆门山之外驶去，目的是到湖北、湖南一带楚国故地游览。“渡远荆门外，来从楚国游”，指的就是这一壮游。这时候的青年诗人，兴致勃勃，坐在船上沿途纵情观赏巫山两岸高耸云霄的峻岭，一路看来，眼前景色逐渐变化，船过荆门一带，已是平原旷野，视域顿然开阔，别是一番景色：</p></blockquote><p>“山随平野尽，江入大荒流。”</p><p>“山随平野尽”，形象地描绘了船出三峡、渡过荆门山后长江两岸的特有景色：山逐渐消失了，眼前是一望无际的低平的原野。著一“随”字，化静为动，将群山与平野的位置逐渐变换、推移，真切地表现出来。这句好比用电影镜头摄下的一组活动画面，给人以流动感与空间感，将静止的山岭摹状出活动的趋向来。</p><p>“江入大荒流”，写出江水奔腾直泻的气势，从荆门往远处望去，仿佛流入荒漠辽远的原野，显得天空寥廓，境界高远。后句著一“入”字，写出了气势的博大，充分表达了诗人的万丈豪情，充满了喜悦和昂扬的激情，力透纸背，用语贴切。景中蕴藏着诗人喜悦开朗的心情和青春的蓬勃朝气。</p><p>颔联这两句不仅由于写进“平野”、“大荒”这些辽阔原野的意象，而气势开阔；而且还由于动态的描写而十分生动。大江固然是流动的，而山脉却本来是凝固的，“随、尽”的动态感觉，完全是得自舟行的实际体验。在陡峭奇险，山峦叠嶂的三峡地带穿行多日后，突见壮阔之景，豁然开朗的心情可想而知。它用高度凝炼的语言。极其概括地写出了诗人整个行程的地理变化。</p><p>写完山势与流水，诗人又以移步换景手法，从不同角度描绘长江的近景与远景：</p><p>“月下飞天镜，云生结海楼。”</p><p>长江流过荆门以下，河道迂曲，流速减缓。晚上，江面平静时，俯视月亮在水中的倒影，好象天上飞来一面明镜似的；日间，仰望天空，云彩兴起，变幻无穷，结成了海市蜃楼般的奇景。这正是从荆门一带广阔平原的高空中和平静的江面上所观赏到的奇妙美景。如在崇山峻岭的三峡中，自非亭午夜分，不见曦月，夏水襄陵，江面水流湍急汹涌，那就很难有机会看到“月下飞天镜”的水中影像；在隐天蔽日的三峡空间，也无从望见“云生结海楼”的奇景。这一联以水中月明如圆镜反衬江水的平静，以天上云彩构成海市蜃楼衬托江岸的辽阔，天空的高远，艺术效果十分强烈。颔颈两联，把生活在蜀中的人，初次出峡，见到广大平原时的新鲜感受极其真切地写了出来。</p><p>颈联两句反衬江水平静，展现江岸辽阔，天空高远，充满了浪漫主义色彩。</p><p>李白在欣赏荆门一带风光的时候，面对那流经故乡的滔滔江水，不禁起了思乡之情：</p><p>“仍怜故乡水，万里送行舟。”</p><p>诗人顺着长江远渡荆门，江水流过的蜀地也就是曾经养育过他的故乡，初次离别，他怎能不无限留恋，依依难舍呢？但诗人不说自己思念故乡，而说故乡之水恋恋不舍地一路送我远行，怀着深情厚意，万里送行舟，从对面写来，越发显出自己思乡深情。诗以浓重的怀念惜别之情结尾，言有尽而情无穷。诗题中的“送别”应是告别故乡而不是送别朋友，诗中并无送别朋友的离情别绪。清沈德潜认为“诗中无送别意，题中二字可删”（《唐诗别裁》），这并不是没有道理的。</p><p>这首诗首尾行结，浑然一体，意境高远，风格雄健。“山随平野尽，江入大荒流”，写得逼真如画，有如一幅长江出峡渡荆门长轴山水图，成为脍炙人口的佳句。如果说优秀的山水画“咫尺应须论万里”，那么，这首形象壮美瑰玮的五律也可以说能以小见大，以一当十，容量丰富，包涵长江中游数万里山势与水流的景色，具有高度集中的艺术概括力。</p><h2 id="【作者简介】"><a href="#【作者简介】" class="headerlink" title="【作者简介】"></a>【作者简介】</h2><blockquote><p>李白（701-762），字太白，号青莲居士，唐朝浪漫主义诗人，被后人誉为’诗仙’出生于西域碎叶城，四岁再随父迁至剑南道绵州，有《李太白集》流传于世，762年病逝，享年61岁，其墓在今安徽当涂，四川江油、湖北安陆有纪念馆。</p></blockquote><p>参考：<br>古诗文网<a href="https://www.taixiangla.com/gushi/23860.html">https://www.taixiangla.com/gushi/23860.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 文学作品 </category>
          
          <category> 古诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每天一首古诗词-渡荆门送别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗钟</title>
      <link href="/2020/08/23/%E8%AF%97%E9%92%9F/"/>
      <url>/2020/08/23/%E8%AF%97%E9%92%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="嵌字诗钟与整体思维"><a href="#嵌字诗钟与整体思维" class="headerlink" title="嵌字诗钟与整体思维"></a>嵌字诗钟与整体思维</h3><p>吴思本</p><p>嵌字诗钟既来源于律诗的对偶诗联，又不同于律联。不同处就在于作者们必须围绕这两个嵌字来构思和组织诗句，而这两个嵌字都是现拈或事先给定的，其事类乃至词性往往相距较远。若单纯只从每个嵌字本身来写诗钟，则上下联间的句意就会出现很大的断裂，势必使读者无法产生联想，因而也难以获得一个较完整和深刻的印象和感受。但是，正如唐代皎然所言：”诗语二句相须，如鸟有翅”（《诗式》）；浑然一体，血脉相连，历来是我国诗学的一个重要审美原则。这也体现了中华民族独特的整体思维特征，它完全不同于当代西方的分析思潮。所以，在写作嵌字诗钟时，防止和避免上下联间的句意断裂是很有必要的。以下讨论都取例于《雪鸿初集》。 </p><p>一、句意断裂的出现 </p><p>太行父子移山憨<br>巫峡君臣说梦奇（《山•梦》六唱）</p><p>嵌字为”山”和”梦”，比类较远，此上下联的前四个字，分别用了两个工对，属人物名及地名，还用了两个典故。但此处工对的实施并未能避免由嵌字所引起的上下联句意间的断裂，因为愚公父子的移”山”和襄王、宋玉的说”梦”，毕意是两码事，两者没有直接联系，也难以使读者产生更多的联想和回味。类似的例子还有：</p><p>牢骚屈子编天问<br>游戏扬雄解客嘲（《天•客》六唱）；</p><p>解佩几疑仙女幻<br>击当合让五人豪（《仙•五》五唱）；</p><p>元霜捣药蓝桥暮<br>白露横江赤壁秋（《药•江》四唱）。 </p><p>二、联句浑成的获得 </p><p>铜琶铁板江东曲<br>流水高山海上琴（《东•上》六唱），</p><p>此处用了句中自对，但就上下联而言，是属宽对；还用了两个故事，主人翁分别是东坡和伯牙。由于两句都是在描述音乐，从而使上下联浑然天成，不即不离。再如：</p><p>悬岩觅路凌空上<br>窄港连舟取次行（《空•次》六唱），<br>是围绕行旅来构思上下联。</p><p>最难风雨怀人夜<br>无奈关山见月时（《人•月》六唱）<br>虽然”风雨”与”关山”是属邻对，但上联之”夜”，正是下联的”见月时”，是用时间来作沟通。</p><p>世多钱虏铜遗臭<br>我有梅花雪孕香（《铜•雪》五唱），<br>此联除”香”和”臭”以外，几乎全为宽对，但上下联在辞意上有强烈对比，反而产生良好效果。 </p><p>应该说，《雪鸿初集》中的大多数（80％以上）嵌字诗钟都注意了上下句间的文思关联，做到互相呼应、映衬和补充，从而防止了由嵌字本身可能引起的上下联间的句意断裂。其主要技巧是，让上下联写同一主题（如：写景、怀人、言志和行旅……），或同一时空，乃至反衬等等。 </p><p>三、反对、旁对之妙用 </p><p>《文心雕龙》曰：”反对为优，正对为劣”，”反对者，理殊趣合也；正对者，事异义同者也”。刘熙载也说：”绝句体每首只有四句，容量很少，难以尽情抒写，这就需要有一种’妙用’，要取径深曲，盖意不可尽以不尽尽之，正面不写写反面，本面不写写对面、旁面，须如睹影知竿乃妙。”（《艺概》），以上论述亦适用于诗钟。</p><p>在《雪鸿初集》中，反对的例子如：上下联一往一返：</p><p>移篷拟向明湖泛<br>策杖曾从日观归（《明•日》五唱）；</p><p>一晴一雨：<br>明月楼台秋似水<br>落花庭院雨如烟（《秋•雨》五唱）；</p><p>一有一无；<br>疑无路入危峰隔<br>别有天开曲径通（《路•天》三唱）；</p><p>一水一陆，或一高一下：<br>霜凌老树头皆秃<br>月上横塘水更明（《头•水》五唱），等等。 </p><p>旁对的例子如：上下联一见一闻：<br>菊残篱下金无色<br>竹折阶前雪有声（《金•雪》五唱）；</p><p>夹岸泉声穿石出<br>隔江云影挟山来（《石•山》六唱）；</p><p>一天一地：<br>潮生远岸平无际<br>云互寒天影不流（《平•影》五唱）；</p><p>一人一我：<br>我亦爱莲尘不染<br>人能如菊淡何妨（《尘•淡》五唱），等等。 </p><p>以上这些反对和旁对的例子，都是通过语境和视角的转换和对比，来取得上下联浑然一体、珠圆玉润的效果，而达到活泼隽永、含蓄天成的境界。 </p><p>四、工对、宽对的权衡 </p><p>据对《雪鸿初集》六卷的初步统计，在全卷197联中，全用工对的有69联，占35％，仅为三分之一强。”诗人之所以不处处都用工对，自有其修辞上的理由。近体诗受平仄的拘束已经不小，如果在对仗上也处处求工，那么，思想就没有回旋的余地了。再者，求工太过，就往往弄到同义相对”（王力：《汉语诗律学》），反而容易造成合掌。因此，对仗工整并不意味处处必须工对，只要”境与意会”（东坡语），即使是邻对或宽对，也能使诗联臻于上乘，《雪鸿初集》中的一些例子就是明证。 </p><p>就如明代朱承爵所言：”作诗之妙，全在意境融彻，出音声之外，乃得真味”（《存余堂诗话》）。作诗自以立意为先，特别是对于嵌字诗钟，更要注意创作时的整体思维，避免上下联间的句意断裂。</p><h3 id="诗钟直观式嵌字格图谱-完整版"><a href="#诗钟直观式嵌字格图谱-完整版" class="headerlink" title="诗钟直观式嵌字格图谱(完整版)"></a>诗钟直观式嵌字格图谱(完整版)</h3><p>为便于嵌字诗钟的学习，我根据张西厢《闲话诗钟》中列举出的嵌字诗钟格式，整理出了一个比较直观的图式，因为自觉方便使用，尤其是年龄大的钟友们用起来会更为简捷、方便，因此将它放到了在国粹网上与大家分享。从挂在网上一年来的效果来看，钟友们比较认可它，也有很多老师提出了此图谱尚有欠缺, 如一些格式和别名没有收录等。故对本图谱作了进一步的补充。</p><p>另外，学习诗钟若仅止于格式，便会流于末学。希望钟友们经常翻看一下钟坛上疏竹先生置顶的《诗钟理论文献索引》中有关诗钟的资料，这些都是前辈们留下的精华，多读会有诸多的脾益。</p><p>钟格分为八大类：合咏，笼纱，晦明，分咏，分咏连环，专咏，专咏连环，嵌字。</p><p>嵌字格又称嵌珠格, 有正格与别格之分：</p><p>嵌2字正格7种：鹤顶，燕颔，鸢肩，蜂腰，鹤膝，凫胫，雁足。</p><p>嵌2字别格7种：魁斗，蝉联，比翼，流水，云泥，太极，辘轳。</p><p>嵌3字别格3种：汤网，勾股，鼎峙。</p><p>嵌4字别格2种：双钩，睡珠。</p><p>嵌6字别格1种：竹节。</p><p>碎锦类8种：碎锦，鸿爪，四皓，五杂俎，六逸，七贤，八龙，九老。</p><p>还有些不常见的钟格：</p><p>韵律类1种：拗体。</p><p>集句类3种：集句，集锦，居易。</p><p>改句类2种：续句，改句（包括折腰格）。</p><p>杂体类5种：四言，五言，八言，骈体，散文（包括流水碎和押尾格）。</p><p>其它类3种：虚词，方言，钟谜。</p><p>以下主要是叙述诗钟嵌字格式，其他格式不加赘述。</p><p>一、嵌2字正格：</p><p>1、一唱 凤顶格<br>又称冠顶格、鹤顶格、虎头格等。</p><p>嵌□□□□□□<br>嵌□□□□□□</p><p>2、二唱燕颔格又称凫颈格。</p><p>□嵌□□□□□<br>□嵌□□□□□</p><p>3、三唱鸢肩格又称鸳肩格。</p><p>□□嵌□□□□<br>□□嵌□□□□</p><p>4、四唱蜂腰格 </p><p>□□□嵌□□□<br>□□□嵌□□□</p><p>5、五唱鹤膝格</p><p>□□□□嵌□□<br>□□□□嵌□□</p><p>6、六唱凫胫格又称鹭胫格。</p><p>□□□□□嵌□<br>□□□□□嵌□</p><p>7、七唱雁足格又称鱼尾格、坐脚格。</p><p>□□□□□□嵌<br>□□□□□□嵌</p><p>二、嵌2字别格</p><p>1、魁斗格又称玉盒格。</p><p>嵌□□□□□□<br>□□□□□□嵌</p><p>2、蝉联格又称蝉连格、连理格。</p><p>□□□□□□嵌<br>嵌□□□□□□</p><p>3、辘轳格</p><p>可根据下面的格式类推。</p><p>□□嵌□□□□<br>□嵌□□□□□</p><p>嵌□□□□□□<br>□嵌□□□□□</p><p>4、比翼格2个题字分嵌于上下比相对的位置上，一至七唱。</p><p>嵌嵌嵌嵌嵌嵌嵌<br>嵌嵌嵌嵌嵌嵌嵌</p><p>5、云泥格即鹭拳格</p><p>张西厢原谱为题字分嵌上下比中，位置不可相对。</p><p>□嵌□□□□□<br>□□□嵌□□□</p><p>时有国粹网疏竹先生于2006年2月12日发表《为诗钟“云泥格”正名》一文，将云泥格订正如下：</p><p>云泥格又名鹭拳格：拈平仄二字为题字，嵌于诗钟出句第二字及对句第六字，或出句第六字及对句第二字。</p><p>6、太极格回文+2个比翼格嵌字。</p><p>□□□嵌□□□<br>□□□嵌□□□</p><p>7、流水格</p><p>嵌字同比翼格，但要求联语上下句意须相贯，似流水不断（即如流水对）。</p><p>□□□嵌□□□<br>□□□嵌□□□</p><p>三、嵌3字别格</p><p>1、汤网格以三字分嵌两句，题中两字作对，限位嵌于上下比首尾。余一字不连，亦嵌余下的首尾处。</p><p>嵌□□□□□□<br>嵌□□□□□嵌</p><p>嵌□□□□□嵌<br>嵌□□□□□□</p><p>□□□□□□嵌<br>嵌□□□□□嵌</p><p>嵌□□□□□嵌<br>□□□□□□嵌</p><p>2、勾股格以三字分嵌两句，题中两字可对，不限位。余一字不连，随意可嵌。</p><p>□□□嵌□□□<br>□□□嵌□嵌□</p><p>□嵌□□□嵌□<br>□嵌□□□□□</p><p>□□□□□嵌□<br>□嵌□□□嵌□</p><p>□□□□嵌□□<br>□嵌□□嵌□□</p><p>3、鼎峙格又称品字格。题字分嵌于上下比中，如鼎足。</p><p>□□□嵌□□□<br>嵌□□□□□嵌</p><p>嵌□□□□□嵌<br>□□□嵌□□□</p><p>四、嵌4字别格</p><p>1、双钩格又称香囊格。<br>四字钟题，题字分嵌上下比于首尾。</p><p>嵌□□□□□嵌<br>嵌□□□□□嵌</p><p>2、睡珠格</p><p>四字钟题，两字相联分嵌于上下句，不拘位置，唯求字次平行相对即可。</p><p>□□□嵌嵌□□<br>□□□嵌嵌□□</p><p>嵌嵌□□□□□<br>嵌嵌□□□□□</p><p>五、嵌6字别格</p><p>竹节格六个题字，分别嵌入上下句的二、四、六的位置上。但六个字中，须三字是平声字，三字是仄声字方可。</p><p>□嵌□嵌□嵌□<br>□嵌□嵌□嵌□</p><p>六、碎锦类</p><p>1、碎锦格又称流水碎、碎流格、七碎格、散嵌格。</p><p>将四字题字或四字以上的题字，分嵌于任意一句或上下句的任意位置上，不能相并。对嵌四字的碎锦格，历来还是有“不连不对”的严格规定。</p><p>□嵌□□嵌□□<br>嵌□□嵌□□□</p><p>余下以此类推。</p><p>2、鸿爪格</p><p>三字碎锦格，题字不得相连。</p><p>□嵌□□嵌□□<br>□□嵌□□□□</p><p>余下以此类推。</p><p>3、四皓格</p><p>四字碎锦格，题字不得相连。</p><p>□嵌□□嵌□□<br>□□嵌□嵌□□</p><p>余下以此类推。</p><p>4、五杂俎格</p><p>有时人也称之“五俎”</p><p>碎锦格之一。五字钟题，题字随意分嵌，不得相连。</p><p>□嵌□□嵌□嵌<br>□□□嵌□嵌□</p><p>5、六逸格</p><p>碎锦格之一。六字钟题，题字随意分嵌，可连2个字。</p><p>嵌嵌□□嵌□嵌<br>□□嵌□□嵌□</p><p>6、七贤格</p><p>碎锦格之一。七字钟题，题字随意分嵌，可连2个字。</p><p>嵌嵌□嵌□嵌□<br>□□嵌□嵌□嵌</p><p>7、八龙格</p><p>碎锦格之一。八字钟题，题字随意分嵌，可连3个字，可对。</p><p>嵌嵌嵌□嵌□嵌<br>□嵌□嵌□嵌□</p><p>8、九老格</p><p>碎锦格之一。九字钟题，题字随意分嵌，可连4个字，可对。</p><p>嵌嵌嵌嵌□□嵌<br>嵌□嵌嵌□嵌□</p><p>七、综合类</p><p>这一类是我依照多格相叠又包含嵌字的原则划出的，共4类，6种格式。</p><p>1、晦明格</p><p>随意嵌一题字于一比中，另一题字为咏。</p><p>□□□□□嵌□<br>□□□□□□□</p><p>□□□□□□□<br>□□嵌□□□□</p><p>注：此格本为诗钟单独的一类，因为有一字明嵌故作为特例列出。</p><p>2、专咏格又称单吟格（即合咏+嵌字）。限咏一个主题，禁犯题字。嵌2字，所嵌2字即为题字。</p><p>□□□嵌□□□<br>□□□嵌□□□</p><p>3、连环唱 </p><p>（1）上楼格 2字题。题字限做一套，由一唱至七唱。</p><p>嵌嵌嵌嵌嵌嵌嵌<br>嵌嵌嵌嵌嵌嵌嵌</p><p>（2）下楼格 2字题。题字限做一套，由七唱至一唱。</p><p>嵌嵌嵌嵌嵌嵌嵌<br>嵌嵌嵌嵌嵌嵌嵌</p><p>4、连环格</p><p>（1）合咏连环格</p><p>又称单吟连环格、专咏连环格、专吟连环格、单咏连环格。</p><p>一命题作一联诗钟，禁犯题字。同时限定嵌字的字数和唱位，或不限唱位。</p><p>□嵌□嵌□□□<br>□嵌□嵌□□□</p><p>（2）分咏连环格 </p><p>与分咏格相同，上下句各吟各的主题，但限定嵌字的唱位和字数。也可以根据嵌字的字数，同时限定嵌字格，与合咏连环格相似。如以下方式以此类推。 </p><p>□□□嵌□□□<br>□□□嵌□□□<br>□嵌□□□□□<br>□□□□□嵌□<br>□□□嵌□□□<br>嵌□□□□□嵌<br>嵌□□□□□嵌<br>嵌□□□□□嵌</p><p>说明：</p><p>1、本文诗钟格式增补基本上是参照李竹深《辞赋余韵话诗钟》中列出的格式。敬礼一下前辈。<br>2、本文中诗钟的分类引用了网上扫叶成堆之《外篇之&lt;你也可以对对联&gt; 诗钟》的分类格式，特此说明，并向撰写该文的老师表示谢意！<br>3、在网上还搜集到了一些其他的资料，也为最后定稿提供了佐证，在这里一并谢过。</p><h3 id="诗钟"><a href="#诗钟" class="headerlink" title="诗钟"></a>诗钟</h3><p>一、诗钟的概念<br>诗钟是中国古代文人的一种限时吟诗文字游戏，大约出现在嘉庆、道光年间的福建八闽地区。诗钟限一炷香功夫吟成一联或多联，香尽鸣钟，所以叫做“诗钟”。诗钟吟成，再作为核心联句各补缀成一首律诗，游戏结束。诗钟多半限定内容（诗题）、文字和种格，比如诗钟分咏，限“来、去”，即上联必须有“来”，对下联的“去”字。诗钟比一般对联要求格律更工整，内容更含蓄，甚至类似谜语才好<br>如果限“来、去，七联”，则必须吟成七字对联七幅，“来、去”分别位于句中的七个不同位置。更有甚者，先固定每句的第一个字，比如“来”和“去”，再限“来、去，七联”，比如《枫影榃诗词》中有（不是严格意义上的诗钟）：<br>[1]来而不往非常礼，去若能归是醉仙<br>　　来来往往千帆竞，去去回回百鸟旋<br>　　来世来生都不管，去愁去病复何求<br>　　来即速来三万贯，去须长去一千年<br>　　来财怎及来名好？去势常随去世行<br>　　来年只恐成来世，去病谁知要去愁<br>　　来世不知何处去？去年难得此间来<br>去年今夜关山月，来日洞房花烛人<br>　　去去烟波失樯橹，来来语势夺君臣<br>　　去国去家三十载，来名来利一场空<br>　　去愁须去心窝火，来信捎来人附言<br>　　去官揖别去时友，来客掸弹来处尘<br>　　去职居然无去路，来人端的有来头<br>　　去奔人家穷处去，来寻官府败时<br>有心立说垂青史，无计营生愧老妻<br>　　世有牢笼谁就范？天无绝路我行医<br>　　三餐有泪下稀粥，六月无钱买短衣<br>　　三人行有我施主，万卷书无肯得鸡<br>　　神游天国有仙鹤，身在江湖无湿衣<br>　　雨打茅蓬皆有眼，鱼游涸辙殆无诗<br>　　旷世奇才何处有？长篇小说大师无<br>无复万家新气象，有如千载古城楼<br>　　不无遗憾英雄死，犹有虚名中外浮<br>　　遍地无情焚物欲，漫天有雾障瞳眸<br>　　野外寻无栖息鸟，朝中踞有办公猴<br>　　人间莫道无民主，鼻上还疑有自由<br>　　官家脸面最无耻，铁石心肠必有求<br>　　点开百度一搜有，除却双规半句无<br>《闲话诗钟》<br>作者：张西厢<br>钟义<br>昔人敲钟，规律极严，拈题时，缀钱于缕，焚香寸许，承以铜盘，香焚缕断，钱落盘鸣，以为构思之限，故名“诗钟”，即刻烛击钵之遗意也。钟虽小品，惊天地，泣鬼神，征夫怨妇之思，怀乡忧国之感，均可流露于寥寥十四字中，变化无穷，奥妙莫测，固属雕虫小技，亦洋洋乎大观，或谓此中兴味，胜诗十倍，经验之语<br>钟意<br>诗钟固重对仗，尤重立意，无意义之诗钟，谓之“哑钟”，敲之不响，唱之无味。盖以白粉墙对黑漆板之类，决难引人入胜，粤派之弱点，即在于此。故正宗之诗钟，须有诗之声调风格，置之于诗中，则为名诗，置之于钟中，则为名钟。或谓诗钟，须有起承转合之势，未免言之过甚，盖诗钟为七律诗之一联，古人名联，或对描事物，或直舒怀抱，绝少于一联中，备有起承或转合之势也。<br>钟派<br>清初闽人，已有此制，名日“改诗”，即改律句绝句之七言诗而为两句也，此种改诗，或有称之为单羊角对百衲琴，雕玉双钩者，要皆不如诗钟名称之普遍。诗钟向有闽派、粤派之分，两派之争至今未息，闽派重空灵尚意义，粤派重典实尚对仗，平心而论，两派各有所长，能化粤派之典实，而兼闽派之空灵，斯为上乘，忆粤人蔡乃煌为钟坛宿将，且以敲钟得官，然每阅及粤派钟卷，即投之于簏中。故粤、闽两派之分，亦非限于人地也。近人林熊祥先生，对于诗钟之意见主张宽大其门径，使成为一种较绝句更为锤炼之诗，而侪于一般诗歌之列，善于此道者，多抱同感，若能别树一帜，使此铁钟而成为原子钟，不可谓非艺术界之一大改进也。<br>钟社<br>独起敲钟，兴味索然，故欲敲钟，必先集社，钟社之设，并无若何组织，亦无任何作用，不过文人墨士，藉以发舒怀抱，联络感情而已。近数年来，台、港两地，钟社之多，竟达四十余处，可谓盛矣。岂欲敲醒国魂欤，激扬民气欤，余拭目以俟之。<br>钟眼<br>钟眼须稳，务求不能移易，例如联与连，不得相混，用连床则可，用联床则不可，床与榻，不得相借，用东床则可，用东榻则不可。钟眼，更以有来历为佳，例如“千雪”一唱“千眼西方般若佛；雪肤南内太真妃。”千眼出自佛典千眼千手观世音，雪肤出自长恨歌“雪肤花貌参差是”。钟眼如不相称，则对仗更须求其工稳，上例“千”与“雪”绝不相称，而以“眼”、“肤”承对，可称能手。<br>钟题<br>普通拈题，常用抽字及翻书等法，以昭公允，分咏事物者，于书中翻出两事物，嵌字格则于书中任翻数字，作为钟题，绝少由每人自出题目也。分咏、合咏不可犯题面字，例如分咏“元宵”、“蝶”。则钟句须避用“元宵蝶”三字。分咏合咏事物，并忌以代替字明点题意，例如“象、扇”分咏。若用大兽、交趾兽、挥羽、羽毛、一羽、裁纨等字，不啻将题字明明点出，决难得到佳句，且易失去题意。例如“争钦挥羽运奇谋”、“指挥一羽定三分”明明是咏卧龙而非咏扇也。钟题可任意加以某种限制，以增兴趣，如合咏“竹”限用一“毛”字，则钟联中，须有“毛”字。反之，亦可禁用“虚节风月?竿箨君妃栽”十字，则钟联中须避用此十字也。此外，尚有更严格之限制者，即钟题虚字而限实用，例如“而了”二唱，则须实用“吉了”、“以而”；“若于”二唱，则须实用“兰若”、“杜于”；“若然”二唱，则须实用“巨然”、“贺若”等等，方为合格，文人墨客，兴到之余，好用其极也。分咏、合咏，以切正本题不能移咏别人别物者为原则，严格言之，咏狗者不能移到犬，咏冠者不能移到帽。<br>钟典<br>古人名句，多用常语而不用典，如“露从今夜白；月是故乡明。”语虽浅近，意则深长，诗钟亦何独不然，不得已而用典，既忌过僻，而点题亦极严格，咏“履”不能引用“鞋”典，咏“眼”不能引用“目”典，以原典有履字眼字者为合格，如“象、扇”分咏，引用焚身典，多有以牙代齿者，殊为不妥，盖原典是齿而非牙也。钟贵典丽堂皇，引用僻典固不宜，即稗官野史之章回小说，亦须避用为宜。<br>钟句<br>诗钟常因限于题字及题字之位置，而造句煞费苦心。总之，以字字不落空，字字不能移易为佳制。例如“两空”六唱“不住猿声啼两岸；但闻人语响空山。”字字出自唐诗，字字不能移易，可称闽派中之佳制。基此理由，若能分集古人诗句，或古人诗意，且对仗工整，而切合题意者，较之自造，尤胜一筹。造句之技术，尤贵奇峰突出，例如“红豆啄残鹦鹉粒；碧梧栖老凤凰枝。”若易以“鹦鹉啄残红豆粒；凤凰栖老碧梧枝。”则较平实无奇矣，当年杜老，亦何曾不推敲及此乎。钟句避用叠字，盖仅仅十四字之小品，一字千金，不宜浪费半字，若以钟眼而叠字，则更不可，如“元旦”四唱，倘用元元、旦旦之叠字，则为三唱乎，抑为四唱乎。分咏事物之造句，常因两事物之相距过远，而难于落笔者，于此时须先觅对字，再就对字而构思，例如分咏“汉光武、燕”。先觅赤帻、紫襟等之对字，分咏“牧童、蛇”先觅骑牛、吞象等之对字，则自易落笔矣，惟追求对像，须下工夫，务使有鸳鸯交颈、鸾凤和鸣之妙，不可有彩凤随鸦、鲜花插粪之嫌。<br>钟对<br>诗钟固重立意，并重对仗，有半字之差者，即非上乘。以虚对虚、实对实、地名对地名、姓名对姓名、颜色对颜色、朝代对朝代为工整。若字面亦能相对，如放翁对茂叔，司马对卧龙更佳。诗钟虽为诗之一联，然切忌流水对法，而对仗亦不宜假借，例如<br>身无彩凤双飞翼；心有灵犀一点通。<br>春蚕到死丝方尽；蜡炬成灰泪始干。<br>在诗则为名句，在钟则嫌其以“翼”对“通”。以“春蚕”对“蜡炬”，不能合格。惟如前例，以“人语”对“猿声”，两字连用，借对一字者，则无不可。而双用常语，如“天地”对“古今”，“春秋”对“江汉”，则更无不可。<br>诗钟常有以字面相对而假借者，例如“重九”五唱，“昂藏愿拜重瞳象；谄媚宁容九尾狐。”“象”与“狐”，字面相对而实不对，虽极巧妙，亦以少用为上。盖“九尾狐”为一固定名词，而“重瞳象”则否，难免对仗不称之嫌。此外，以一物对两物者，谓之“三脚钟”，例如“风云”对“秋月”，“雨露”对“春烟”，风云、雨露，各为二物，而秋月、春烟，各为一物，在律诗中尚嫌不称，何况诗钟。<br>出比、对比，须凑合天然，铢两悉称，若一比堂皇，一比纤巧，一比如天，一比如井，彼此失衡，谓之“跛脚钟”，作者最易犯此通病，故往往一比自然，一比则生硬，一比如香象渡河，一比则如黠鼠偷油，一比吓煞夫人，一比则跪在?下。初抱“句不惊人死不休”之奢望，卒之反有“满城风雨近重阳”之叹，若能先从平易处着笔，则可减少此种困难也。出比用典，则对比亦须用典，而典故时代，不宜相距过远，如以三代典故属对三代典故固佳，即属对秦汉典故亦可，若两时代相距过远，或引用典故之内容，彼此失衡，均为小疵。盖以吴道子之钟馗与潘雅声之美人，并悬于书室中，终觉不称也。<br>钟律<br>诗律要细，钟亦何独不然，古人律诗，求其最合诗钟之条件者，惟少陵耳。如<br>　　旌旗日暖龙蛇动；宫殿风微燕雀高。<br>　　笋根稚子无人见；沙上凫雏傍母眠。<br>　　江上小堂巢翡翠；苑边高冢卧麒麟。<br>　　老妻画纸为棋局；稚子敲针作钓钩。<br>　　江间波浪兼天涌；塞上风云接地阴。<br>　　波飘菇米沉云黑；露冷莲房坠粉红。<br>　　羞将短发还吹帽；笑倩旁人为正冠。<br>　　蓝水远从千涧落；玉山高并两峰寒。<br>　　岸容待腊将舒柳；山意冲寒欲放梅。<br>　　刺绣五纹添弱线；吹葭六管动飞灰。<br>　　五更鼓角声悲壮；三峡星河影动摇。<br>　　花径不曾缘客扫；蓬门今始为君开。<br>　　盘餐市远无兼味；樽酒家贫只旧醅。<br>　　海内风尘诸弟隔；天涯涕泪一身遥。<br>　　北极朝廷终不改；西山寇盗莫相侵。<br>诸联，若置之于钟中，称之为“钟圣”，谁曰不宜。而“旌旗日暖龙蛇动；宫殿风微燕雀高”一联之浑雄庄晒，尤可作为首选之标准也。<br>钟声<br>香港钟声多，而台湾更多，真有“姑苏城外寒山寺；夜半钟声到客船。”之感，顾名思义，诗钟之声调，须和谐而响亮，始足发人深省，因之平仄不可失调，第一字可不论，第三第五字则必论，出比第三字可不论，对比第三平字则必论，例如“珠帘暮卷西山雨；画栋朝飞南浦云。”、“巫峡啼猿数行泪；衡阳归雁几封书”在诗固称名句，在钟则嫌数字拗韵，而“南”字失调也。至若对比第三字，应平而用仄，在古人七律诗中，尚不多见，况于钟乎<br>钟评<br>评选诗钟，为一难事，见仁见智，各有不同，惟古人名句，传诵至今，犹众囗同声，盖文艺自有其客观之优点，绝非成见或感情所能左右也。尝读唐司空图所列《诗品》二十四种，见地极高，可作诗钟评选之标准，即雄浑第一、冲淡第二、沉着第三、高古第四、纤?第五、典雅第六、洗练第七、劲健第八、绮丽第九、自然第十、含蓄第十一、豪放第十二、精神第十三、缜密第十四、疏野第十五、清奇第十六、委曲第十七、实境第十八、悲慨第十九、形容第二十、超诣第二十一、飘逸第二十二、旷达第二十三、流动第二十四。捐除成见。破除情面。执此尺以量之。可无遗恨矣。<br>钟格<br>概说<br>诗钟格式，可分：合咏格、分咏格、笼纱格、嵌字格四类。而嵌字格又分：凤顶、燕颔、鸢肩、蜂腰、鹤膝、凫胫、雁足、魁斗、蝉联、辘轳、比翼、汤网、云泥、鼎峙、晦明、碎锦、双钩、四皓、五姐、六逸、七贤、八龙、九老等格，分述于左。<br>合咏格<br>即将题意表现于钟联中，以不犯题字为原则。亦有例外者，并得随意加以某种限制，例如。<br>花落知多少：合咏，不犯题字<br>绣坏料添红一片<br>锦茵应减绿三分<br>凄凉墙外飘难数<br>狼藉阶前扫几回<br>分咏格<br>简介<br>即分咏事物也，以不犯题字为合格，例如<br>岳飞、虎：分咏<br>画尔不成翻类犬</p><p>诗钟分咏意境<br>字之曰举并称鹏<br>笔、邮票：分咏<br>万国花封元首相<br>五云草判黑头公<br>笼纱格<br>即将题字暗藏于钟联中，隐约如见，呼之欲出，例如<br>左易：笼纱格<br>牙因知味承恩幸<br>思未能言擅赋才<br>嵌字格<br>格体简介<br>1、凤顶格 即将两题字分嵌于每句之第一字，所谓“一唱”也，例如<br>人鸟：一唱<br>人凭赤血羸犹健<br>鸟到青云倦亦飞<br>2、燕颔格 即将两题字分?于每句之第二字，所谓二唱也，例如<br>醉吟：二唱<br>臣醉酒能倾一石<br>客吟诗已载三车<br>3、鸢肩格 即将两题字分嵌于每句之第三字。所谓三唱也。例如<br>红豆：三唱<br>灯光豆灺劳人草<br>楼影红飞思妇花<br>4、蜂腰格即将两题字分嵌于每句之第四字。所谓四唱也，例如<br>元旦：四唱<br>千军待旦传刁斗<br>万国朝元拜冕旒<br>5、鹤膝格 即将两题字分嵌于每句之第五字。所谓五唱也。例如<br>重、九：五唱<br>要为卷土重来计<br>谁赞勤王九合功<br>6、凫胫格 即将两题字分嵌于每句之第六字。所谓六唱也。例如<br>意、飞：六唱<br>斜阳六伐鸦飞乱<br>明月孤山鹤意痴<br>7、雁足格 即将两题字分嵌于每句之第七字。所谓七唱也。例如<br>鹤梅：七唱<br>隐现云端千岁鹤<br>横斜竹外一枝梅<br>8、魁斗格 即将两题字任意分嵌于第一字及第十四字。例如<br>黄花：魁斗格<br>花门积雪千山白<br>大漠飞沙一月黄<br>9、蝉联格 即将两题字分嵌于第七字及第八宇。例如<br>蝉唱：蝉联格<br>花落后庭商女唱<br>蝉鸣西陆楚囚吟<br>10、辘轳格即将两题字分嵌于第一字及第九字。或第三字及第九字，以此类推。例如<br>莲露：辘轳格<br>乍垂莲瓣移香步<br>微露瓠犀发妙香<br>11、比翼格 即将两题字任意对嵌于钟联中。等于一唱至七唱。例如<br>散书：比翼格}<br>杜房并驾中书省<br>金宋相持大散关<br>12、汤网格即将三个题字。任意分嵌于两句之首末。而成网开一面之局。例如<br>天、安、云：汤网格<br>天末楼台横北固<br>云中城阙望西安<br>13、云泥格 即将题字分嵌于两句中。但不得相对。例如<br>云泥：云泥格<br>青云直上鹏程路<br>华屋偏多燕垒泥<br>14、晦明格 即一句明点题字，一句暗写题字。例如<br>红豆：晦明格<br>双肿如豆讥文士<br>一口含樱画美人<br>15、鼎峙格 将三个题字分嵌于第1字第7字第11字。或分嵌于第4字第8字第14字。成鼎峙之格。例如<br>天中节：鼎峙格<br>穷阴杀节霜铺地<br>中夜清寒月满天<br>16、碎锦格亦称鸿爪格。即将题字（二字或以上）分嵌于钟联中不得相连。例如<br>张陈：碎锦格<br>满几陈编三寸烛<br>半肩行李一张琴<br>17、双钩格即将四个题字对嵌于钟联首尾之中。例如<br>南北高丽：双钩格<br>丽水逆流环陇北<br>高邮名县着淮南<br>18、四皓格 碎锦格之一种。题字不得相连。例如<br>海角钟声<br>海城画角严兵卫<br>山阁诗钟集友声<br>19、五杂俎碎锦格之一种。题字不得相连。例如<br>清泉石上流<br>溪边瘦石多清籁<br>岩上飞泉少浊流<br>20、六逸格 碎锦格之一种。惟题字可以相连。例如<br>杏花春雨江南：得连二字。<br>雨后寻春桃叶渡<br>江南沽酒杏花村<br>21、七贤格 碎锦格之一种。题字可以相连。例如<br>发无可白方为老：得连二字。<br>无眠可到东方白<br>有发都为老境苍<br>22、八龙格 碎锦格之一种。题字可以相连。例如<br>月明华屋画桥碧阴：得连三字。<br>小桥画舫摇明月<br>华屋芳林度碧阴<br>23、九老格 碎锦格之一种。题字可以相连。例如<br>寒鸦万点流水绕孤村：得连四字。<br>水流孤塞千声雁<br>村绕寒林万点鸦</p>]]></content>
      
      
      <categories>
          
          <category> 文学作品 </category>
          
          <category> 诗钟-课外补读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌、思维、样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript复习</title>
      <link href="/2020/08/16/JavaScript%E5%A4%8D%E4%B9%A0/"/>
      <url>/2020/08/16/JavaScript%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h1><h2 id="数组遍历的两种方法"><a href="#数组遍历的两种方法" class="headerlink" title="数组遍历的两种方法"></a>数组遍历的两种方法</h2><h3 id="for循环遍历"><a href="#for循环遍历" class="headerlink" title="for循环遍历"></a>for循环遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">145</span>,<span class="string">&#x27;孙空&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;悟空&#x27;</span>,<span class="number">1585</span>,<span class="string">&#x27;杨戬&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;白龙马&#x27;</span>,<span class="number">45</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;arr.length; i++)&#123;</span><br><span class="line">            alert(<span class="string">&quot;常见于各种数组的遍历&quot;</span>)</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><h3 id="forEach专门用于遍历"><a href="#forEach专门用于遍历" class="headerlink" title="forEach专门用于遍历"></a>forEach专门用于遍历</h3><p>  其一种 foEach()需要函数作为参数<br>                浏览器会自动遍历元素，并且以形参的形式传递<br>                回调函数产生三个函数</p><ol><li>第一个参数：当前正在遍历的元素</li><li>第二个元素：当前元素正在遍历的索引</li><li>第三个元素：正在遍历的数组<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">145</span>,<span class="string">&#x27;孙空&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;悟空&#x27;</span>,<span class="number">1585</span>,<span class="string">&#x27;杨戬&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;白龙马&#x27;</span>,<span class="number">45</span>];</span><br><span class="line">        arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;heelo&quot;</span>)</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h3 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h3>可以用来从数组中抽取指定的参数<br>该方法不会改变元素数组,而是将截取的元素封装到一个新的数组<br>参数:<br>1.截取刚开始的位置索引,包含开始索引<br>2.截取结束位置索引,不包括结束索引<br>第二个参数可以不写,这样的话第一参数以后都会被截取<br>索引可以为负<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">145</span>,<span class="string">&#x27;孙空&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;悟空&#x27;</span>,<span class="number">1585</span>,<span class="string">&#x27;杨戬&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;白龙马&#x27;</span>,<span class="number">45</span>];</span><br><span class="line"><span class="keyword">var</span> result =arr.slice(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line">result = arr.sloce(<span class="number">1</span>,-<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h3>可以用于删除数组,会指定元素删除<br>会影响到原数组,删除的元素会作为返回值返回<br>参数:<br>1.表示开始索引位置<br>2.表示删除数量<br>3.可以传递新的元素,这些元素将自动插入到开始索引<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">145</span>,<span class="string">&#x27;孙空&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;悟空&#x27;</span>,<span class="number">1585</span>,<span class="string">&#x27;杨戬&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;白龙马&#x27;</span>,<span class="number">45</span>];</span><br><span class="line"><span class="keyword">var</span> result = arr.splice(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;牛魔王&#x27;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><h3 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h3>可以链接多个数组,并将多个数组返回<br>该方法不会对原数组产生影响 有返回值<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">145</span>,<span class="string">&#x27;孙空&#x27;</span>,<span class="number">155</span>];</span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">&#x27;悟空&#x27;</span>,<span class="number">1585</span>,<span class="string">&#x27;杨戬&#x27;</span>,<span class="number">155</span>,<span class="string">&#x27;白龙马&#x27;</span>,<span class="number">45</span>];</span><br><span class="line"><span class="keyword">var</span> result =arr.concat(arr1)</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><h3 id="joio"><a href="#joio" class="headerlink" title="joio()"></a>joio()</h3>该方法将数组转换成字符串<br>不会影响原数组 有返回值<br>可以指定一个字符串作为参数,当作连接符,不指定则默认’,’</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result = arr.join();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> result);</span><br></pre></td></tr></table></figure><h3 id="reyerse"><a href="#reyerse" class="headerlink" title="reyerse"></a>reyerse</h3><pre><code>该方法用来反转数组该方法影响原数组 arr.reverse();</code></pre><h3 id="sort"><a href="#sort" class="headerlink" title="sort()"></a>sort()</h3><pre><code>用来排序影响原数组</code></pre><p>  默认Unicode进行排序 对于数字排序时,可能会得到错误结果<br>  指定排序规则<br>        -定义两个形参 a b<br>         如果返回值大于0则元素会交换位置<br>         如果返回值小于0则元素位置不变<br>         如果返回值一个0,则认为两个元素相等,也不交换<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">77</span>,<span class="number">11</span>];</span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//前面大</span></span><br><span class="line">      <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">          <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a&lt;b)&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125; );</span><br><span class="line"><span class="built_in">console</span>.log(arr);  </span><br></pre></td></tr></table></figure></p><h3 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h3><p>  在调用函数时，浏览器每次都会传递两个隐含参数<br>1.函数的上下文对象call和apply<br>2.封装的实参对象arguments<br>    -arguments是一个类数组对象，它也可以通过索引来操作数据，可以 获取长度<br>    -在调用函数，我们所传的实参都会在arguments中 可以不定义实参可以使用形参<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="built_in">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.callee); 这个属性对应一个函数对象，当前调用的</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="string">&quot;hello&quot;</span>,<span class="number">45</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></p><h2 id="Date对象"><a href="#Date对象" class="headerlink" title="Date对象"></a>Date对象</h2><p>如果创建使用构造函数创建的则是当前代码执行的时间<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a =<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br></pre></td></tr></table></figure><br>指定创建一个时间对象，则需要在构造函数中传递一个时间字符作为参数<br>  格式<br>    月份/日/年 时：分：秒<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d2=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;12/03/2020 11:10:21&#x27;</span>);</span><br></pre></td></tr></table></figure><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data=d2.getDaet();返回当前号数</span><br><span class="line"><span class="keyword">var</span> date1=d2.getday();返回当前日期</span><br><span class="line"><span class="keyword">var</span> date2=d2.getMonth();返回当前月份 </span><br><span class="line"><span class="keyword">var</span> daet3=d2.getFulyear();返回当前年份</span><br><span class="line"><span class="keyword">var</span> time=d2.getTime();返回当前时间戳 格林威志标准时间<span class="number">1970</span>/<span class="number">1</span>/<span class="number">0</span> <span class="number">0</span>：<span class="number">0</span>：<span class="number">0</span> 毫秒数</span><br><span class="line">  -alert(time/<span class="number">1000</span>/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>/<span class="number">365</span>)</span><br><span class="line">    -获取当前（代码执行）的时间戳 time = <span class="built_in">Date</span>.now();</span><br></pre></td></tr></table></figure></p><h2 id="Math：-W3school"><a href="#Math：-W3school" class="headerlink" title="Math： W3school"></a>Math： <a href="https://www.w3school.com.cn/jsref/jsref_obj_math.asp">W3school</a></h2><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p>String()<br>  -可以将基本类型字符串转换成String<br>Number()<br>  -可以将基本数据类型数字装换成Number<br>Boolean()<br>  -可以将基本数据类型布尔值转换成Boolean<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num =<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> str=<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> bool=<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></p><font color=#FF0000 >包装类基本上不自己使用浏览器会自动创建，用完则销毁</font>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql基本语法</title>
      <link href="/2020/08/16/Mysql%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/08/16/Mysql%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL语法"><a href="#MySQL语法" class="headerlink" title="MySQL语法"></a>MySQL语法</h2><blockquote><p> show databases; 查看数据库<br>    show tables; 查看表<br>    delete from user where host=’master’ 删除表user里面的host<br>    update user set host=’%’ where host=’localhost’; 添加并修改user表host<br>    select user,host,password from user; 查询表user字段user,host,password<br>    flush privileges；  立即刷新，也可以重新启动 </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js部分笔记</title>
      <link href="/2020/08/01/js%E9%83%A8%E5%88%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/08/01/js%E9%83%A8%E5%88%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="局部-全局"><a href="#局部-全局" class="headerlink" title="局部 全局"></a>局部 全局</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">var</span> a=<span class="number">123</span>;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">        alert(a);</span><br><span class="line">        a =<span class="number">456</span>;</span><br><span class="line">&#125;  </span><br><span class="line">fun(<span class="number">456</span>);</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><h3 id="THIS"><a href="#THIS" class="headerlink" title="THIS"></a>THIS</h3><ul><li>解析器在调用函数时每次都会像函数内存传递一个隐含的参数<ul><li>这个隐含的参数就是this this指向的是一个对象</li><li>这个对象我们称之为函数执行的上下对象<ul><li>根据函数的调用方式不同，this会指向不同的对象</li><li>以函数得形式调用时，this永远都是Windows</li><li>以方法的形式调用，this就是调用方法那个对象</li></ul></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;猴子&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line">vae obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;孙悟空&quot;</span>,</span><br><span class="line">    <span class="attr">sayName</span>:fun</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.sayName();</span><br></pre></td></tr></table></figure><p>大宋提刑官</p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><blockquote><p> 创建一个构造函数，专门用来创建Perso对象的<br>    构造函数就是一个普通的函数，创建方式和普通函数没有区别<br>    不同的是构造函数习惯首字母大写<br>    区别：</p><blockquote><p>普通函数是直接调用 构造函数要用new调用<br>    1.调用构造函数会创建对象<br> 2.将新建对象设置为函数中this，在构造函数中使用this来引用新建对象<br>3.逐行执行函数的代码<br> 4.将对象作为返回值</p></blockquote><p>   使用同一个构造函数创建的对象，我们称之为类<br>    我们将通过一个构造函数创建的对象我们称之为实例<br>    对象 instanceof 构造函数 是则true 错则false 检查是否为实例</p><p>this的情况</p><blockquote><p>当以函数的形式调用时，thid是widows<br>    当以方法的形式调用时，该调用方法this就是谁<br>    当以构造函数的形式调用时，this就是新创建的对象</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">person</span>(<span class="params">name,age,gender</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.naem = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    <span class="built_in">this</span>.syName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(thsi.naem);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">var</span> per =<span class="keyword">new</span> person(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">41</span> ,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"> <span class="built_in">console</span>.log(per);</span><br></pre></td></tr></table></figure><h2 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h2><blockquote><p>原型 prototype</p><blockquote><p>我们所创建的每一个函数，解析器都会像函数添加一个属性prototype<br>    这个属性对应着一个对象，这个对象就是我们所谓的原型对象<br>    如果函数作为普通函数调用没有任何作用 相反通过构造函数调用时,都会有个掩藏属性</p></blockquote><p>指向该对象的原型对象，我们可以通过<em>proto</em>来访问该属性<br>    原型对象就相当于公共区域，所有实例都会访问到这个原型对象中<br>    我们可以将对象中共有的内容，统一设置到原型中 当访问一个属性或方法会在自身对象中（子类）中寻找而后再去原型（父类型）再然后会去原型的原型中去寻找 （原型也是对象） 直到找到object的原型 如果没有找到则返回null<br>    可以使用hasOwnProperty()来检查对象自身中是否含有这个属性或者方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Myclass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Myclass.prototype.sayHello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;我是原型&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> mc =<span class="keyword">new</span> Myclass();</span><br><span class="line"><span class="comment">//console.log(mc.sayHello);</span></span><br><span class="line">mc.sayHello();</span><br><span class="line"><span class="built_in">console</span>.log(Myclass.prototype == mc.__proto__) <span class="comment">//验证判断是否相等 结果是true</span></span><br></pre></td></tr></table></figure><h2 id="垃圾回收-GC"><a href="#垃圾回收-GC" class="headerlink" title="垃圾回收 GC"></a>垃圾回收 GC</h2><blockquote></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
