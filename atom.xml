<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oysterの糖果屋</title>
  <icon>https://www.gravatar.com/avatar/f134cc5c44704ea724b8cc60781a4b82</icon>
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-01T03:51:42.714Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>oyster</name>
    <email>507566350@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/10/10/hello-world/"/>
    <id>http://yoursite.com/2021/10/10/hello-world/</id>
    <published>2021-10-10T11:07:43.093Z</published>
    <updated>2020-08-01T03:51:42.714Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数组中最大数对和的最小值</title>
    <link href="http://yoursite.com/2021/07/20/%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
    <id>http://yoursite.com/2021/07/20/%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</id>
    <published>2021-07-20T14:19:23.000Z</published>
    <updated>2021-09-03T08:55:06.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本分析-amp-证明"><a href="#基本分析-amp-证明" class="headerlink" title="基本分析 &amp; 证明"></a>基本分析 &amp; 证明</h2><blockquote><p>直觉上，我们会认为「尽量让“较小数”和“较大数”组成数对，可以有效避免出现“较大数成对”的现象」。<br>我们来证明一下该猜想是否成立。<br>假定 numsnums 本身有序，由于我们要将 numsnums 拆分成 n / 2n/2 个数对，根据猜想，我们得到的数对序列为：</p></blockquote><p>(nums[0], nums[n - 1]), (nums[1], nums[n - 2]), … , (nums[(n / 2) - 1], nums[n / 2])(nums[0],nums[n−1]),(nums[1],nums[n−2]),…,(nums[(n/2)−1],nums[n/2])</p><p><font color="brack">换句话说，构成答案的数对必然是较小数取自有序序列的左边，较大数取自有序序列的右边，且与数组中心对称。</font></p><p>假设最大数对是 (nums[i], nums[j])(nums[i],nums[j])，其中 i &lt; ji&lt;j，记两者之和为 ans = nums[i] + nums[j]ans=nums[i]+nums[j]。</p><p>反证法证明，不存在别的数对组合会比 (nums[i], nums[j])(nums[i],nums[j]) 更优：</p><p>假设存在数对 (nums[p], nums[q])(nums[p],nums[q]) 与 (nums[i], nums[j])(nums[i],nums[j]) 进行调整使答案更优。<br><img src="贪心算法分析.png"></p><blockquote><p>接下来分情况讨论：<br>调整为 (nums[i], nums[p])(nums[i],nums[p]) 和 (nums[q], nums[j])(nums[q],nums[j])：此时最大数对答案为 nums[q] + nums[j]nums[q]+nums[j]，<br>显然nums[q] + nums[j] &gt;= nums[i] + nums[j] = ansnums[q]+nums[j]&gt;=nums[i]+nums[j]=ans。我们要最小化最大数对和，因此该调整方案不会让答案更好；</br><br>调整为 (nums[i], nums[q])(nums[i],nums[q]) 和 (nums[p], nums[j])(nums[p],nums[j])：此时最大数对答案为 max(nums[i] + nums[q], nums[p] + nums[j]) = nums[p] + nums[j] &gt;= nums[i] + nums[j] = ansmax(nums[i]+nums[q],nums[p]+nums[j])=nums[p]+nums[j]&gt;=nums[i]+nums[j]=ans。我们要最小化最大数对和，因此该调整方案不会让答案更好；<br>上述分析可以归纳推理到每一个“非对称”的数对配对中。</p></blockquote><p><font color="red">至此我们得证，将原本对称的数对调整为不对称的数对，不会使得答案更优，即贪心解可取得最优解。</font></p><h2 id="程序代码"><a href="#程序代码" class="headerlink" title="程序代码"></a>程序代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPairSum</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//nums中的每个元素恰好在一个数组中且最大数的和的值最小.</span></span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n/<span class="number">2</span>;++i)&#123;</span><br><span class="line">            res =Math.max(res, nums[i]+ nums[n-<span class="number">1</span>-i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>时间复杂度为：O(n log n)，其中n是nums数组的长度，排序的时间长度O(n log n),遍历堆维护最大值的和所需时间为O(n)<br>空间复杂度为：O(log n ),即为排序栈空间开销</p><h2 id="使用的算法设计–论文出处"><a href="#使用的算法设计–论文出处" class="headerlink" title="使用的算法设计–论文出处"></a>使用的算法设计–论文出处</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>分析参考至：宫水三叶</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本分析-amp-证明&quot;&gt;&lt;a href=&quot;#基本分析-amp-证明&quot; class=&quot;headerlink&quot; title=&quot;基本分析 &amp;amp; 证明&quot;&gt;&lt;/a&gt;基本分析 &amp;amp; 证明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;直觉上，我们会认为「尽量让“较小数</summary>
      
    
    
    
    <category term="算法题" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="相信科学系列" scheme="http://yoursite.com/tags/%E7%9B%B8%E4%BF%A1%E7%A7%91%E5%AD%A6%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>java框架之-spring简介</title>
    <link href="http://yoursite.com/2021/07/10/java%E6%A1%86%E6%9E%B6%E4%B9%8B-spring%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2021/07/10/java%E6%A1%86%E6%9E%B6%E4%B9%8B-spring%E7%AE%80%E4%BB%8B/</id>
    <published>2021-07-10T02:56:14.000Z</published>
    <updated>2021-09-03T08:14:10.740Z</updated>
    
    <content type="html"><![CDATA[<p>spring 是一个开源框架<br>spring 是一个轻量级、非入侵式框架<br>控制反转（ioc）,面向切面编程（AOP)<br>支持对事务的处理，对框架德整合的支持<br>总结一句话：spring就是一个轻量级的控制反转（IOC）和面向切面编程（AOP）</p><table><thead><tr><th>name</th><th>id</th></tr></thead><tbody><tr><td>张三</td><td>21321</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;spring 是一个开源框架&lt;br&gt;spring 是一个轻量级、非入侵式框架&lt;br&gt;控制反转（ioc）,面向切面编程（AOP)&lt;br&gt;支持对事务的处理，对框架德整合的支持&lt;br&gt;总结一句话：spring就是一个轻量级的控制反转（IOC）和面向切面编程（AOP）&lt;/p&gt;
&lt;t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Http&amp;Https区别</title>
    <link href="http://yoursite.com/2021/07/09/Http-Https%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2021/07/09/Http-Https%E5%8C%BA%E5%88%AB/</id>
    <published>2021-07-09T07:21:22.000Z</published>
    <updated>2021-07-20T14:25:55.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h3 id="荷花娇欲语，愁杀荡舟人。–-李白"><a href="#荷花娇欲语，愁杀荡舟人。–-李白" class="headerlink" title="荷花娇欲语，愁杀荡舟人。– 李白"></a><font color="#c08eaf">荷花娇欲语，愁杀荡舟人。– 李白</font></h3><h2 id="Htpp"><a href="#Htpp" class="headerlink" title="Htpp"></a>Htpp</h2><blockquote><p>HyperText Transfer Protocol：超文本传输协议，是一种用于分布式、协作式和超媒体信息系统的应用层协议。简单的来说就是发布和接收html页面的方法，用于大多数页面中<br><font color="red">http默认工作在TCP协议80端口</font><br>http协议以明文的方式，<font color="red">不提供任何方式加密</font>，如果攻击者截取了服务器端和客户端则所有数据都会被暴露，因此http协议不适合传输一些敏感信息，比如身份证号、密码等、</p></blockquote><h2 id="Https"><a href="#Https" class="headerlink" title="Https"></a>Https</h2><blockquote><p>Hypertext Transfer Protocol Secure：超文本传输安全协议 是一种通过计算机网络进行安全通信的传输协议，Https经由Http进行通信，但利用<font color="red">SSH/TLS进行加密数据包</font>，HTTPS开发的主要目的，<font color="red">是提供网站服务器的安全，保护交互数据的安全性与完整信。</font><br>https默认工作在<font color="red">TCP协议443端口</font>工作流程如下：<br>1、TCP 三次同步握手<br>2、客户端验证服务器数字证书<br>3、DH 算法协商对称加密算法的密钥、hash 算法的密钥<br>4、SSL 安全加密隧道协商完成<br>5、网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的hash算法进行数据完整性保护，保证数据不被篡改。</p><blockquote><p>截至 2018 年 6 月，Alexa 排名前 100 万的网站中有 34.6% 使用 HTTPS 作为默认值，互联网 141387 个最受欢迎网站的 43.1% 具有安全实施的 HTTPS，以及 45% 的页面加载（透过Firefox纪录）使用HTTPS。2017 年3 月，中国注册域名总数的 0.11％使用 HTTPS。根据 Mozilla 统计，自 2017 年 1 月以来，超过一半的网站流量被加密。</p></blockquote></blockquote><h1 id="Http-amp-amp-Https的区别"><a href="#Http-amp-amp-Https的区别" class="headerlink" title="Http&amp;&amp; Https的区别"></a>Http&amp;&amp; Https的区别</h1><blockquote><p>1、HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。<br>2、使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。<br>3、HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。<br>4、http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。<br>5、HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</p></blockquote><h1 id="TCP-三次握手"><a href="#TCP-三次握手" class="headerlink" title="TCP 三次握手"></a>TCP 三次握手</h1><blockquote><p>在TCP/IP协议中，TCP协议通过三次握手建立一个可靠的连接<br><img href="TCP三次握手"><br>第一次握手：客户端尝试连接服务器，向服务器发送 syn 包（同步序列编号Synchronize Sequence Numbers），syn=j，客户端进入 SYN_SEND 状态等待服务器确认<br>第二次握手：服务器接收客户端syn包并确认（ack=j+1），同时向客户端发送一个 SYN包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态<br>第三次握手：第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手<br>简化：<br><img herf="简化"></p></blockquote><h1 id="HTTPS工作原理"><a href="#HTTPS工作原理" class="headerlink" title="HTTPS工作原理"></a>HTTPS工作原理</h1><img href="HTTPS工作原理"><blockquote><p>1、客户端发起 HTTPS 请求这个没什么好说的，就是用户在浏览器里输入一个 https 网址，然后连接到 server 的 443 端口。<br>2、服务端的配置  采用 HTTPS 协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请，区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面(startssl 就是个不错的选择，有 1 年的免费服务)。这套证书其实就是一对公钥和私钥，如果对公钥和私钥不太理解，可以想象成一把钥匙和一个锁头，只是全世界只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。</p></blockquote><blockquote><p>3、传送证书这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。</p></blockquote><blockquote><p>4、客户端解析证书这部分工作是有客户端的TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，提示证书存在问题。如果证书没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密，就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。</p></blockquote><blockquote><p>5、传送加密信息这部分传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。</p></blockquote><blockquote><p>6、服务端解密信息服务端用私钥解密后，得到了客户端传过来的随机值(私钥)，然后把内容通过该值进行对称加密，所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。</p></blockquote><blockquote><p>7、传输加密后的信息这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。</p></blockquote><blockquote><p>8、客户端解密信息客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容，整个过程第三方即使监听到了数据，也束手无策。</p></blockquote><p><a href="https://www.runoob.com/w3cnote/summary-of-network.html#_label0">参考于菜鸟教程_只是为了加强记忆</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h1&gt;&lt;h3 id=&quot;荷花娇欲语，愁杀荡舟人。–-李白&quot;&gt;&lt;a href=&quot;#荷花娇欲语，愁杀荡舟人。–-李白&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机网络基础" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="网络协议" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令手册</title>
    <link href="http://yoursite.com/2021/07/09/Linux%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8C/"/>
    <id>http://yoursite.com/2021/07/09/Linux%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8C/</id>
    <published>2021-07-09T07:21:22.000Z</published>
    <updated>2021-07-20T14:28:07.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关机-重启-注销"><a href="#关机-重启-注销" class="headerlink" title="关机/重启/注销"></a>关机/重启/注销</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>shutdown -h now</td><td>即刻关机</td></tr><tr><td>shutdown -h 10</td><td>10分钟后关机</td></tr><tr><td>shutdown -h 11:00</td><td>11：00关机</td></tr><tr><td>shutdown -h +10</td><td>预定时间关机（10分钟后）</td></tr><tr><td>shutdown -c</td><td>取消指定时间关机</td></tr><tr><td>shutdown -r now</td><td>重启</td></tr><tr><td>shutdown -r 10</td><td>10分钟之后重启</td></tr><tr><td>shutdown -r 11:00</td><td>定时重启</td></tr><tr><td>reboot</td><td>重启</td></tr><tr><td>init 6</td><td>重启</td></tr><tr><td>init 0</td><td>⽴刻关机</td></tr><tr><td>telinit 0</td><td>关机</td></tr><tr><td>poweroff</td><td>⽴刻关机</td></tr><tr><td>halt</td><td>关机</td></tr><tr><td>sync</td><td>buff数据同步到磁盘</td></tr><tr><td>logout</td><td>退出登录Shell</td></tr></tbody></table><h1 id="系统信息和性能查看"><a href="#系统信息和性能查看" class="headerlink" title="系统信息和性能查看"></a>系统信息和性能查看</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>uname -a</td><td>查看内核/OS/CPU信息</td></tr><tr><td>uname -r</td><td>查看内核版本</td></tr><tr><td>uname -m</td><td>查看处理器架构</td></tr><tr><td>arch</td><td>查看处理器架构</td></tr><tr><td>hostname</td><td>查看计算机名</td></tr><tr><td>who</td><td>显示当前登录系统的⽤户</td></tr><tr><td>who am i</td><td>显示登录时的⽤户名</td></tr><tr><td>whoami</td><td>显示当前⽤户名</td></tr><tr><td>cat /proc/version</td><td>查看linux版本信息</td></tr><tr><td>cat /proc/cpuinfo</td><td>查看CPU信息</td></tr><tr><td>cat /proc/interrupts</td><td>查看中断</td></tr><tr><td>cat /proc/loadavg</td><td>查看系统负载</td></tr><tr><td>uptime</td><td>查看系统运⾏时间、⽤户数、负载</td></tr><tr><td>env</td><td>查看系统的环境变量</td></tr><tr><td>lsusb -tv</td><td>查看系统USB设备信息</td></tr><tr><td>lspci -tv</td><td>查看系统PCI设备信息</td></tr><tr><td>lsmod</td><td>查看已加载的系统模块</td></tr><tr><td>grep MemTotal /proc/meminfo</td><td>查看内存总量</td></tr><tr><td>grep MemFree /proc/meminfo</td><td>查看空闲内存量</td></tr><tr><td>free -m</td><td>查看内存⽤量和交换区⽤量</td></tr><tr><td>date</td><td>显示系统⽇期时间</td></tr><tr><td>cal 2021</td><td>显示2021⽇历表</td></tr><tr><td>top</td><td>动态显示cpu/内存/进程等情况</td></tr><tr><td>vmstat 1 20</td><td>每1秒采⼀次系统状态，采20次</td></tr><tr><td>iostat</td><td>查看io读写/cpu使⽤情况</td></tr><tr><td>查看io读写/cpu使⽤情况</td><td>查询cpu使⽤情况（1秒⼀次，共10次）</td></tr><tr><td>sar -d 1 10</td><td>查询磁盘性能</td></tr></tbody></table><h1 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>fdisk -l</td><td>查看所有磁盘分区</td></tr><tr><td>swapon -s</td><td>查看所有交换分区</td></tr><tr><td>df -h</td><td>查看磁盘使⽤情况及挂载点</td></tr><tr><td>df -hl</td><td>同上</td></tr><tr><td>du -sh /dir</td><td>查看指定某个⽬录的⼤⼩</td></tr><tr><td>du -sk * | sort -rn</td><td>从⾼到低依次显示⽂件和⽬录⼤⼩</td></tr><tr><td>mount /dev/hda2 /mnt/hda2</td><td>挂载hda2盘</td></tr><tr><td>mount -t ntfs /dev/sdc1 /mnt/usbhd1</td><td>指定⽂件系统类型挂载（如ntfs）</td></tr><tr><td>mount -o loop xxx.iso /mnt/cdrom</td><td>挂 载 iso ⽂ 件</td></tr><tr><td>umount -v /dev/sda1</td><td>通过设备名卸载</td></tr><tr><td>umount -v /mnt/mymnt</td><td>通过挂载点卸载</td></tr><tr><td>fuser -km /mnt/hda1</td><td>强制卸载(慎⽤)</td></tr></tbody></table><h1 id="⽤户和⽤户组"><a href="#⽤户和⽤户组" class="headerlink" title="⽤户和⽤户组"></a>⽤户和⽤户组</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>useradd codesheep</td><td>创建⽤户</td></tr><tr><td>userdel -r codesheep</td><td>删除⽤户</td></tr><tr><td>usermod -g group_name user_name</td><td>修改⽤户的组</td></tr><tr><td>usermod -aG group_name user_name</td><td>将⽤户添加到组</td></tr><tr><td>usermod -s /bin/ksh -d /home/codepig –g dev codesheep</td><td>修改⽤户codesheep的登录Shell、主⽬录以及⽤户组</td></tr><tr><td>groups test</td><td>查看test⽤户所在的组</td></tr><tr><td>groupadd group_name</td><td>创建⽤户组</td></tr><tr><td>groupdel group_name</td><td>删除⽤户组</td></tr><tr><td>groupmod -n new_name old_name</td><td>重命名⽤户组</td></tr><tr><td>su - user_name</td><td>su - user_name</td></tr><tr><td>passwd</td><td>修改⼝令</td></tr><tr><td>passwd codesheep</td><td>修改某⽤户的⼝令</td></tr><tr><td>w</td><td>查看活动⽤户</td></tr><tr><td>id codesheep</td><td>查看指定⽤户codesheep信息</td></tr><tr><td>last</td><td>查看⽤户登录⽇志</td></tr><tr><td>crontab -l</td><td>查看当前⽤户的计划任务</td></tr><tr><td>cut -d: -f1 /etc/passwd</td><td>查看系统所有⽤户</td></tr><tr><td>cut -d: -f1 /etc/group</td><td>查看系统所有组</td></tr></tbody></table><h1 id="⽹络和进程管理"><a href="#⽹络和进程管理" class="headerlink" title="⽹络和进程管理"></a>⽹络和进程管理</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>ifconfig</td><td>查看⽹络接⼝属性</td></tr><tr><td>ifconfig eth0</td><td>查看某⽹卡的配置</td></tr><tr><td>route -n</td><td>查看路由表</td></tr><tr><td>netstat -lntp</td><td>查看所有监听端⼝</td></tr><tr><td>netstat -antp</td><td>查看已经建⽴的TCP连接</td></tr><tr><td>netstat -lutp</td><td>查看TCP/UDP的状态信息</td></tr><tr><td>ifup eth0</td><td>启⽤eth0⽹络设备</td></tr><tr><td>ifdown eth0</td><td>禁⽤eth0⽹络设备</td></tr><tr><td>iptables -L</td><td>查看iptables规则</td></tr><tr><td>ifconfig eth0 192.168.1.1 netmask 255.255.255.0</td><td>配置ip地址</td></tr><tr><td>dhclient eth0</td><td>以dhcp模式启⽤eth0</td></tr><tr><td>route add -net 0/0 gw Gateway_IP</td><td>配置默认⽹关</td></tr><tr><td>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1</td><td>配置静态路由到达⽹络’192.168.0.0/16’</td></tr><tr><td>route del 0/0 gw Gateway_IP</td><td>删除静态路由</td></tr><tr><td>hostname</td><td>查看主机名</td></tr><tr><td>host <a href="http://www.baidu.com/">www.baidu.com</a></td><td>解析主机名</td></tr><tr><td>nslookup <a href="http://www.baidu.com/">www.baidu.com</a></td><td>查询DNS记录，查看域名解析是否正常</td></tr><tr><td>ps -ef</td><td>查看所有进程</td></tr><tr><td>ps -ef | grep codesheep</td><td>过滤出你需要的进程</td></tr><tr><td>kill -s name</td><td>kill指定名称的进程</td></tr><tr><td>kill -s pid</td><td>kill指定pid的进程</td></tr><tr><td>top</td><td>实时显示进程状态</td></tr><tr><td>vmstat 1 20</td><td>每1秒采⼀次系统状态，采20次</td></tr><tr><td>iostat</td><td>iostat</td></tr><tr><td>sar -u 1 10</td><td>查询cpu使⽤情况（1秒⼀次，共10次）</td></tr><tr><td>sar -d 1 10</td><td>查询磁盘性能</td></tr></tbody></table><h1 id="常⻅系统服务命令"><a href="#常⻅系统服务命令" class="headerlink" title="常⻅系统服务命令"></a>常⻅系统服务命令</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>chkconfig –list</td><td>列出系统服务</td></tr><tr><td>service &lt;服务名&gt; status</td><td>查看某个服务</td></tr><tr><td>service &lt;服务名&gt; start</td><td>启动某个服务</td></tr><tr><td>service &lt;服务名&gt; stop</td><td>终⽌某个服务</td></tr><tr><td>service &lt;服务名&gt; restart</td><td>重启某个服务</td></tr><tr><td>systemctl status &lt;服务名&gt;</td><td>查看某个服务</td></tr><tr><td>systemctl start &lt;服务名&gt;</td><td>启动某个服务</td></tr><tr><td>systemctl stop &lt;服务名&gt;</td><td>终⽌某个服务</td></tr><tr><td>systemctl restart &lt;服务名&gt;</td><td>重启某个服务</td></tr><tr><td>systemctl enable &lt;服务名&gt;</td><td>关闭⾃启动</td></tr><tr><td>systemctl disable &lt;服务名&gt;</td><td>关闭⾃启动</td></tr></tbody></table><h1 id="⽂件和⽬录操作"><a href="#⽂件和⽬录操作" class="headerlink" title="⽂件和⽬录操作"></a>⽂件和⽬录操作</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>cd &lt;⽬录名&gt;</td><td>进⼊某个⽬录</td></tr><tr><td>cd ..</td><td>回上级⽬录</td></tr><tr><td>cd ../..</td><td>回上两级⽬录</td></tr><tr><td>cd</td><td>进个⼈主⽬录</td></tr><tr><td>cd -</td><td>回上⼀步所在⽬录</td></tr><tr><td>pwd</td><td>显示当前路径</td></tr><tr><td>ls</td><td>查看⽂件⽬录列表</td></tr><tr><td>ls -F</td><td>查看⽬录中内容（显示是⽂件还是⽬录）</td></tr><tr><td>ls -l</td><td>查看⽂件和⽬录的详情列表</td></tr><tr><td>ls -a</td><td>查看隐藏⽂件</td></tr><tr><td>ls -lh</td><td>查看⽂件和⽬录的详情列表（增强⽂件⼤⼩易读性）</td></tr><tr><td>ls -lSr</td><td>查看⽂件和⽬录列表（以⽂件⼤⼩升序查看）</td></tr><tr><td>tree</td><td>查看⽂件和⽬录的树形结构</td></tr><tr><td>mkdir &lt;⽬录名&gt;</td><td>创建⽬录</td></tr><tr><td>mkdir dir1 dir2</td><td>同时创建两个⽬录</td></tr><tr><td>mkdir -p /tmp/dir1/dir2</td><td>创建⽬录树</td></tr><tr><td>rm -f file1</td><td>删除’file1’⽂件</td></tr><tr><td>rmdir dir1</td><td>删除’dir1’⽬录</td></tr><tr><td>rm -rf dir1</td><td>删除’dir1’⽬录和其内容</td></tr><tr><td>rm -rf dir1 dir2</td><td>同时删除两个⽬录及其内容</td></tr><tr><td>mv old_dir new_dir</td><td>重命名/移动⽬录</td></tr><tr><td>cp file1 file2</td><td>复制⽂件</td></tr><tr><td>cp dir/* .</td><td>复制某⽬录下的所有⽂件⾄当前⽬录</td></tr><tr><td>cp -a dir1 dir2</td><td>复制⽬录</td></tr><tr><td>cp -a /tmp/dir1 .</td><td>复制⼀个⽬录⾄当前⽬录</td></tr><tr><td>ln -s file1 link1</td><td>创建指向⽂件/⽬录的软链接</td></tr><tr><td>ln file1 lnk1</td><td>创建指向⽂件/⽬录的物理链接</td></tr><tr><td>find / -name file1</td><td>从跟⽬录开始搜索⽂件/⽬录</td></tr><tr><td>find / -user user1</td><td>搜索⽤户user1的⽂件/⽬录</td></tr><tr><td>find /dir -name *.bin</td><td>在⽬录/dir中搜带有.bin后缀的⽂件</td></tr><tr><td>locate &lt;关键词&gt;</td><td>快速定位⽂件</td></tr><tr><td>locate *.mp4</td><td>寻找.mp4结尾的⽂件</td></tr><tr><td>whereis &lt;关键词&gt;</td><td>显示某⼆进制⽂件/可执⾏⽂件的路径</td></tr><tr><td>which &lt;关键词&gt;</td><td>查找系统⽬录下某的⼆进制⽂件</td></tr><tr><td>chmod ugo+rwx dir1</td><td>设置⽬录所有者(u)、群组(g)及其他⼈(o)的读（r）写(w)执⾏(x)权限</td></tr><tr><td>chmod go-rwx dir1</td><td>移除群组(g)与其他⼈(o)对⽬录的读写执⾏权限</td></tr><tr><td>chown user1 file1</td><td>改变⽂件的所有者属性</td></tr><tr><td>chown -R user1 dir1</td><td>改变⽬录的所有者属性</td></tr><tr><td>chgrp group1 file1</td><td>改变⽂件群组</td></tr><tr><td>chown user1:group1 file1</td><td>改变⽂件的所有⼈和群组</td></tr></tbody></table><h1 id="⽂件查看和处理"><a href="#⽂件查看和处理" class="headerlink" title="⽂件查看和处理"></a>⽂件查看和处理</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>cat file1</td><td>查看⽂件内容</td></tr><tr><td>cat -n file1</td><td>查看内容并标示⾏数</td></tr><tr><td>tac file1</td><td>从最后⼀⾏开始反看⽂件内容</td></tr><tr><td>more file1</td><td>more file1</td></tr><tr><td>less file1</td><td>类似more命令，但允许反向操作</td></tr><tr><td>head -2 file1</td><td>查看⽂件前两⾏</td></tr><tr><td>tail -2 file1</td><td>查看⽂件后两⾏</td></tr><tr><td>tail -f /log/msg</td><td>实时查看添加到⽂件中的内容</td></tr><tr><td>grep codesheep hello.txt</td><td>在⽂件hello.txt中查找关键词codesheep</td></tr><tr><td>grep ^sheep hello.txt</td><td>在⽂件hello.txt中查找以sheep开头的内容</td></tr><tr><td>grep [0-9] hello.txt</td><td>选择hello.txt⽂件中所有包含数字的⾏</td></tr><tr><td>sed ‘s/s1/s2/g’ hello.txt</td><td>将hello.txt⽂件中的s1替换成s2</td></tr><tr><td>sed ‘/^$/d’ hello.txt</td><td>从hello.txt⽂件中删除所有空⽩⾏</td></tr><tr><td>sed ‘/ *#/d; /^$/d’ hello.txt</td><td>从hello.txt⽂件中删除所有注释和空⽩⾏</td></tr><tr><td>sed -e ‘1d’ hello.txt</td><td>从⽂件hello.txt 中排除第⼀⾏</td></tr><tr><td>sed -n ‘/s1/p’ hello.txt</td><td>查看只包含关键词”s1”的⾏</td></tr><tr><td>sed -e ‘s/ *$//‘ hello.txt</td><td>删除每⼀⾏最后的空⽩字符</td></tr><tr><td>sed -e ‘s/s1//g’ hello.txt</td><td>从⽂档中只删除词汇s1并保留剩余全部</td></tr><tr><td>sed -n ‘1,5p;5q’ hello.txt</td><td>查看从第⼀⾏到第5⾏内容</td></tr><tr><td>sed -n ‘5p;5q’ hello.txt</td><td>查看第5⾏</td></tr><tr><td>paste file1 file2</td><td>合并两个⽂件或两栏的内容</td></tr><tr><td>paste -d ‘+’ file1 file2</td><td>合并两个⽂件或两栏的内容，中间⽤”+”区分</td></tr><tr><td>sort file1 file2</td><td>排序两个⽂件的内容</td></tr><tr><td>comm -1 file1 file2</td><td>⽐较两个⽂件的内容(去除’file1’所含内容)</td></tr><tr><td>comm -2 file1 file2</td><td>⽐较两个⽂件的内容(去除’file2’所含内容</td></tr><tr><td>comm -3 file1 file2</td><td>⽐较两个⽂件的内容(去除两⽂件共有部分)</td></tr></tbody></table><h1 id="打包和解压"><a href="#打包和解压" class="headerlink" title="打包和解压"></a>打包和解压</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>zip xxx.zip file</td><td>压缩⾄zip包</td></tr><tr><td>zip -r xxx.zip file1 file2 dir1</td><td>将多个⽂件+⽬录压成zip包</td></tr><tr><td>unzip xxx.zip</td><td>解压zip包</td></tr><tr><td>tar -cvf xxx.tar file</td><td>创建⾮压缩tar包</td></tr><tr><td>tar -cvf xxx.tar file1 file2 dir1</td><td>将多个⽂件+⽬录打tar包</td></tr><tr><td>tar -tf xxx.tar</td><td>查看tar包的内容</td></tr><tr><td>tar -xvf xxx.tar</td><td>解压tar包</td></tr><tr><td>tar -xvf xxx.tar -C /dir</td><td>将tar包解压⾄指定⽬录</td></tr><tr><td>tar -cvfj xxx.tar.bz2 dir</td><td>创建bz2压缩包</td></tr><tr><td>tar -jxvf xxx.tar.bz2</td><td>解压bz2压缩包</td></tr><tr><td>tar -cvfz xxx.tar.gz dir</td><td>创建gzip压缩包</td></tr><tr><td>tar -zxvf xxx.tar.gz</td><td>解压gzip压缩包</td></tr><tr><td>bunzip2 xxx.bz2</td><td>解压bz2压缩包</td></tr><tr><td>bzip2 filename</td><td>压缩⽂件</td></tr><tr><td>gunzip xxx.gz</td><td>解压gzip压缩包</td></tr><tr><td>gzip filename</td><td>压缩⽂件</td></tr><tr><td>gzip -9 filename</td><td>最⼤程度压缩</td></tr></tbody></table><h1 id="RPM包管理命令"><a href="#RPM包管理命令" class="headerlink" title="RPM包管理命令"></a>RPM包管理命令</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>rpm -qa</td><td>查看已安装的rpm包</td></tr><tr><td>rpm -q pkg_name</td><td>查询某个rpm包</td></tr><tr><td>rpm -q –whatprovides xxx</td><td>显示xxx功能是由哪个包提供的</td></tr><tr><td>rpm -q –whatrequires xxx</td><td>显示xxx功能被哪个程序包依赖的</td></tr><tr><td>rpm -q –changelog xxx</td><td>显示xxx包的更改记录</td></tr><tr><td>rpm -qi pkg_name</td><td>查看⼀个包的详细信息</td></tr><tr><td>rpm -qd pkg_name</td><td>查询⼀个包所提供的⽂档</td></tr><tr><td>rpm -qc pkg_name</td><td>查看已安装rpm包提供的配置⽂件</td></tr><tr><td>rpm -ql pkg_name</td><td>查看⼀个包安装了哪些⽂件</td></tr><tr><td>rpm -qf filename</td><td>查看某个⽂件属于哪个包</td></tr><tr><td>rpm -qR pkg_name</td><td>查询包的依赖关系</td></tr><tr><td>rpm -ivh xxx.rpm</td><td>安装rpm包</td></tr><tr><td>rpm -ivh –test xxx.rpm</td><td>测试安装rpm包</td></tr><tr><td>rpm -ivh –nodeps xxx.rpm</td><td>安装rpm包时忽略依赖关系</td></tr><tr><td>rpm -e xxx</td><td>卸载程序包</td></tr><tr><td>rpm -Fvh pkg_name</td><td>升级确定已安装的rpm包</td></tr><tr><td>rpm -Uvh pkg_name</td><td>升级rpm包(若未安装则会安装)</td></tr><tr><td>rpm -V pkg_name</td><td>RPM包详细信息校验</td></tr></tbody></table><h1 id="YUM包管理命令"><a href="#YUM包管理命令" class="headerlink" title="YUM包管理命令"></a>YUM包管理命令</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>yum repolist enabled</td><td>显示可⽤的源仓库</td></tr><tr><td>yum search pkg_name</td><td>搜索软件包</td></tr><tr><td>yum install pkg_name</td><td>下载并安装软件包</td></tr><tr><td>yum install –downloadonly pkg_name</td><td>只 下 载 不 安 装</td></tr><tr><td>yum list</td><td>显示所有程序包</td></tr><tr><td>yum list installed</td><td>查看当前系统已安装包</td></tr><tr><td>yum list updates</td><td>查看可以更新的包列表</td></tr><tr><td>yum check-update</td><td>查看可升级的软件包</td></tr><tr><td>yum update</td><td>更新所有软件包</td></tr><tr><td>yum update pkg_name</td><td>升级指定软件包</td></tr><tr><td>yum deplist pkg_name</td><td>列出软件包依赖关系</td></tr><tr><td>yum remove pkg_name</td><td>删除软件包</td></tr><tr><td>yum clean all</td><td>清除缓存</td></tr><tr><td>yum clean packages</td><td>清除缓存的软件包</td></tr><tr><td>yum clean headers</td><td>清除缓存的header</td></tr></tbody></table><h1 id="DPKG包管理命令"><a href="#DPKG包管理命令" class="headerlink" title="DPKG包管理命令"></a>DPKG包管理命令</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>dpkg -c xxx.deb</td><td>列出deb包的内容</td></tr><tr><td>dpkg -i xxx.deb</td><td>安装/更新deb包</td></tr><tr><td>dpkg -r pkg_name</td><td>移除deb包</td></tr><tr><td>dpkg -P pkg_name</td><td>移除deb包(不保留配置)</td></tr><tr><td>dpkg -l</td><td>查看系统中已安装deb包</td></tr><tr><td>dpkg -l pkg_name</td><td>显示包的⼤致信息</td></tr><tr><td>dpkg -L pkg_name</td><td>查看deb包安装的⽂件</td></tr><tr><td>dpkg -s pkg_name</td><td>查看包的详细信息</td></tr><tr><td>dpkg –unpack xxx.deb</td><td>解开deb包的内容</td></tr></tbody></table><h1 id="APT软件⼯具"><a href="#APT软件⼯具" class="headerlink" title="APT软件⼯具"></a>APT软件⼯具</h1><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>apt-cache search pkg_name</td><td>搜索程序包</td></tr><tr><td>apt-cache show pkg_name</td><td>获取包的概览信息</td></tr><tr><td>apt-get install pkg_name</td><td>安装/升级软件包</td></tr><tr><td>apt-get purge pkg_name</td><td>卸载软件（包括配置）</td></tr><tr><td>apt-get remove pkg_name</td><td>卸载软件（不包括配置）</td></tr><tr><td>apt-get update</td><td>更新包索引信息</td></tr><tr><td>apt-get upgrade</td><td>更新已安装软件包</td></tr><tr><td>apt-get clean</td><td>清理缓存</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关机-重启-注销&quot;&gt;&lt;a href=&quot;#关机-重启-注销&quot; class=&quot;headerlink&quot; title=&quot;关机/重启/注销&quot;&gt;&lt;/a&gt;关机/重启/注销&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;常用命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/</summary>
      
    
    
    
    <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
    <category term="Liunx相关命令" scheme="http://yoursite.com/tags/Liunx%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Sparklogistics回归之用户分类</title>
    <link href="http://yoursite.com/2021/06/22/Sparklogistics%E5%9B%9E%E5%BD%92%E4%B9%8B%E7%94%A8%E6%88%B7%E5%88%86%E7%B1%BB/"/>
    <id>http://yoursite.com/2021/06/22/Sparklogistics%E5%9B%9E%E5%BD%92%E4%B9%8B%E7%94%A8%E6%88%B7%E5%88%86%E7%B1%BB/</id>
    <published>2021-06-22T06:34:38.000Z</published>
    <updated>2021-06-22T06:34:38.391Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Scala初&amp;&amp;传奇之路</title>
    <link href="http://yoursite.com/2021/06/17/Scala%E5%88%9D-%E4%BC%A0%E5%A5%87%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2021/06/17/Scala%E5%88%9D-%E4%BC%A0%E5%A5%87%E4%B9%8B%E8%B7%AF/</id>
    <published>2021-06-17T06:28:14.000Z</published>
    <updated>2021-06-21T01:04:47.742Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Scala-简介"><a href="#Scala-简介" class="headerlink" title="Scala 简介"></a>Scala 简介</h1><blockquote><p>Scala是Scalable Language的简写，是一门多范式的编程语言，由联邦理工学院洛桑（EPFL）的Martin Odersky于2001年基于Funnel的工作开始设计</p><blockquote><p>设计初衷是要集成面向对象编程和函数式编程的各种特性。</p><blockquote><p>因此Scala是一种纯面向对象的语言，每个值都是对象。同时Scala也是一种函数式语言，其函数也能当成值来使用。由于 Scala整合了面向对象语言和函数式编程的特性，Scala相对于Java、C#、C++等其他语言更加简洁。<br/><br>Scala源代码被编译成Java字节码<br>所以它可以运行于JVM之上，并可以调用现有的Java类库。Scala一开始就打算基于Java的生态系统发展自身，而这令Scala受益匪浅。</p></blockquote></blockquote></blockquote><h2 id="Scala-特性"><a href="#Scala-特性" class="headerlink" title="Scala 特性"></a>Scala 特性</h2><blockquote><p>1、面向对象<br>2、函数式编程<br>3、静态类型<br>4、Scala是可被扩展的 (提供了一个独特的语言机制来实现)</p></blockquote><blockquote><p>4.1、隐式类： 允许给已有的类型添加扩展方法</p><blockquote><p>隐式类是在scala 2.10中引入的，隐式类指的是用implicit关键字修饰的类。在对应的作用域内，带有这个关键字的类的主构造函数可用于隐式转换。</p></blockquote></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Helpers</span> </span>&#123;</span><br><span class="line">  <span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">IntWithTimes</span>(<span class="params">x: <span class="type">Int</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">times</span></span>[<span class="type">A</span>](f: =&gt; <span class="type">A</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">loop</span></span>(current: <span class="type">Int</span>): <span class="type">Unit</span> =</span><br><span class="line">        <span class="keyword">if</span>(current &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          f</span><br><span class="line">          loop(current - <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      loop(x)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>定义了一个隐式类IntWithTimes， 它有一个接收Int类型的构造函数，和一个times方法。那么当我们将这个类引入到我们自己的作用域时，Int类型就拥有了新的times方法  引入便可以使用</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; <span class="keyword">import</span> <span class="type">Helpers</span>._</span><br><span class="line"><span class="keyword">import</span> <span class="type">Helpers</span>._</span><br></pre></td></tr></table></figure><blockquote><p>隐式类有以下限制条件</p></blockquote><blockquote><blockquote><p>1、只能在别的trait/类/对象内部定义<br>2、构造函数只能携带一个非隐式参数<br>3、在同一作用域内，不能有任何方法、成员或对象与隐式类同名,注意：这意味着隐式类不能是case class</p></blockquote></blockquote><blockquote><p>4.2、字符串插值： 可以让用户使用自定义的插值器进行扩展 </br> SCala提供了三种创新插值的方法：s,f,raw</p><blockquote><p>字符串插值就是将变量引用直接插入处理过的字面字符中。 这是在scala2.10.0版本引入的。</p></blockquote></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> name=<span class="string">&quot;James&quot;</span></span><br><span class="line">println(<span class="string">s&quot;Hello,<span class="subst">$name</span>&quot;</span>)<span class="comment">//Hello,James</span></span><br></pre></td></tr></table></figure><blockquote><p>s插值器<br>s”Hello,$name” 是待处理字符串字面，编译器会对它做额外的工作。待处理字符串字面通过“号前的字符来标示</p></blockquote><blockquote><p>f插值器<br>在任何字符串字面前加上 f，就可以生成简单的格式化串，功能相似于其他语言中的 printf 函数。当使用 f 插值器的时候，所有的变量引用都应当后跟一个printf-style格式的字符串</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> height=<span class="number">1.9</span>d</span><br><span class="line"><span class="keyword">val</span> name=<span class="string">&quot;James&quot;</span></span><br><span class="line">println(<span class="string">f&quot;<span class="subst">$name</span>%s is <span class="subst">$height</span>%2.2f meters tall&quot;</span>)<span class="comment">//James is 1.90 meters tall f 插值器是类型安全的。如果试图向只支持 int 的格式化串传入一个double 值，编译器则会报错。例如：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> height:<span class="type">Double</span>=<span class="number">1.9</span>d</span><br><span class="line"></span><br><span class="line">scala&gt;<span class="string">f&quot;<span class="subst">$height</span>%4d&quot;</span></span><br><span class="line">&lt;console&gt;:<span class="number">9</span>: error: <span class="class"><span class="keyword">type</span> <span class="title">mismatch</span></span>;</span><br><span class="line"> found : <span class="type">Double</span></span><br><span class="line"> required: <span class="type">Int</span></span><br><span class="line">           <span class="string">f&quot;<span class="subst">$height</span>%4d&quot;</span></span><br><span class="line">              ^ f 插值器利用了java中的字符串数据格式。这种以%开头的格式在 [<span class="type">Formatter</span> javadoc] 中有相关概述。如果在具体变量后没有%，则格式化程序默认使用 %s（串型）格式。</span><br></pre></td></tr></table></figure><blockquote><p>raw 插值器<br>除了对字面值中的字符不做编码外，raw 插值器与 s 插值器在功能上是相同的</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scala&gt;<span class="string">s&quot;a\nb&quot;</span></span><br><span class="line">res0:<span class="type">String</span>=</span><br><span class="line">a</span><br><span class="line">b 这里，s 插值器用回车代替了\n。而raw插值器却不会如此处理。</span><br><span class="line"></span><br><span class="line">scala&gt;<span class="string">raw&quot;a\nb&quot;</span></span><br><span class="line">res1:<span class="type">String</span>=a\nb 当不想输入\n被转换为回车的时候，raw 插值器是非常实用的。</span><br></pre></td></tr></table></figure><blockquote><p>自定义插值器<br>在Scala中，所有处理过的字符串字面值都进行了简单编码转换。任何时候编译器遇到一个如下形式的字符串字面值：id”string content” 它都会被转换成一个StringContext实例的call(id)方法。这个方法在隐式范围内仍可用。只需要简单得 建立一个隐类，给StringContext实例增加一个新方法，便可以定义我们自己的字符串插值器。如</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonHelper</span>(<span class="params">val sc:<span class="type">StringContext</span></span>) <span class="keyword">extends</span> <span class="title">AnyVal</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">json</span></span>(args:<span class="type">Any</span>*):<span class="type">JSONObject</span>=sys.error(<span class="string">&quot;TODO-IMPLEMENT&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">giveMeSomeJson</span></span>(x:<span class="type">JSONObject</span>):<span class="type">Unit</span>=...</span><br><span class="line"></span><br><span class="line">giveMeSomeJson(<span class="string">json&quot;&#123;name:<span class="subst">$name</span>,id:<span class="subst">$id</span>&#125;&quot;</span>) </span><br></pre></td></tr></table></figure><blockquote><blockquote><p>在这个例子中，我们试图通过字符串插值生成一个JSON文本语法。隐类 JsonHelper 作用域内使用该语法，且这个JSON方法需要一个完整的实现。只不过，字符串字面值格式化的结果不是一个字符串，而是一个JSON对象。 注：JSON方法可以访问字符串的原生片段而每个表达式都是一个值。</p></blockquote></blockquote><p>当编译器遇到”{name:name,id:name,id:id”}”，它将会被重写成如下表达式：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">StringContext</span>(<span class="string">&quot;&#123;name:&quot;</span>,<span class="string">&quot;,id:&quot;</span>,<span class="string">&quot;&#125;&quot;</span>).json(name,id)</span><br></pre></td></tr></table></figure><p>隐类则被重写成如下形式:</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">JsonHelper</span>(<span class="keyword">new</span> <span class="type">StringContext</span>(<span class="string">&quot;&#123;name:&quot;</span>,<span class="string">&quot;,id:&quot;</span>,<span class="string">&quot;&#125;&quot;</span>)).json(name,id)</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p>可扩展的scala <a href="https://www.cnblogs.com/flydean/p/12680354.html">https://www.cnblogs.com/flydean/p/12680354.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Scala-简介&quot;&gt;&lt;a href=&quot;#Scala-简介&quot; class=&quot;headerlink&quot; title=&quot;Scala 简介&quot;&gt;&lt;/a&gt;Scala 简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Scala是Scalable Language的简写，是一门多范式</summary>
      
    
    
    
    <category term="Spark" scheme="http://yoursite.com/categories/Spark/"/>
    
    <category term="Scala" scheme="http://yoursite.com/categories/Spark/Scala/"/>
    
    
    <category term="Spark" scheme="http://yoursite.com/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>Spark初_架构原理</title>
    <link href="http://yoursite.com/2021/06/16/Spark%E5%88%9D-%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2021/06/16/Spark%E5%88%9D-%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86/</id>
    <published>2021-06-16T11:39:20.000Z</published>
    <updated>2021-06-17T07:06:05.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spark之来龙去脉"><a href="#Spark之来龙去脉" class="headerlink" title="Spark之来龙去脉"></a>Spark之来龙去脉</h1><blockquote><p>1、是一种快速、分布式、可扩展、容错率的 &lt;&gt;计算框架<br/><br>2、基于内存计算大数据分布式框架、是替代hadoop mapreduce的替代方案，替代迭代算法设计和交互式查询，支持内存存储和高效的容错恢复，Spark拥有MapReduce具有的所有优点，但不同于MapReduce，Spark的中间操作可以保存到内存中，减少读写HDFS的次数，有效提高性能</p></blockquote><h2 id="Spark的发展历程"><a href="#Spark的发展历程" class="headerlink" title="Spark的发展历程"></a>Spark的发展历程</h2><blockquote><p>2009年，Spark诞生于伯克利大学AMPLab，最初属于伯克利大学的研究性项目,实验室的研究人员之前是从事基于Hadoop mapreduce工作的，他们发现 MapReduce对于迭代和交互式计算任务效率不高，因此他们研究的Spark主要为交互式查询和迭代算法设计，支持内存存储和高效的容错恢复。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/Spark历程.png"></p></blockquote><h2 id="Spark-特点"><a href="#Spark-特点" class="headerlink" title="Spark 特点"></a>Spark 特点</h2><blockquote><p>快速</p><blockquote><p>一般情况下，对于迭代次数多的应用程序，Sapark在内存中运行速度是hadoop的100多倍，在磁盘运行速度是hadoop Mapreduce 运行速度的10多倍。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/运行速度对比.png"></p></blockquote></blockquote><blockquote><p>易用</p><blockquote><p>Spark支持使用Scala、Python、Java及R语言快速编写应用。同时Spark提供超过80个高级运算符，使得编写并行应用程序变得容易并且可以在Scala、Python或R的交互模式下使用Spark。</p></blockquote></blockquote><blockquote><p>通用</p><blockquote><p> Spark可以与SQL、Streaming及复杂的分析良好结合。Spark还有一系列的高级工具，包括Spark SQL、MLlib（机器学习库）、GraphX（图计算）和Spark Streaming，并且支持在一个应用中同时使用这些组件。</p></blockquote></blockquote><blockquote><p>随处执行</p><blockquote><p>用户可以使用Spark的独立集群模式运行Spark，也可以在EC2（亚马逊弹性计算云）、Hadoop YARN或者Apache Mesos上运行Spark。并且可以从HDFS、Cassandra、HBase、Hive、Tachyon和任何分布式文件系统读取数据</p></blockquote></blockquote><blockquote><p>代码简介</p><blockquote><p>Spark支持使用Scala、Python等语言编写。Scala或者Python的代码相对Java来说都比较简洁，因此Spark使用Scala或者Python编写应用程序要比使用MapReduce编写应用程序简单方便。</p></blockquote></blockquote><h2 id="SPark-生态圈"><a href="#SPark-生态圈" class="headerlink" title="SPark 生态圈"></a>SPark 生态圈</h2><blockquote><p>Spark的生态圈也称为BDAS（伯克利数据分析栈），是伯克利AMPLab实验室打造的，力图在算法（Algoritrhms）、机器（Machines）、人（People）之间通过大规模集成来展现大数据应用的一个平台。<br><img src="http://qufl2gk64.hb-bkt.clouddn.com/spark生态圈.png"></p></blockquote><h2 id="Spark-的重要组件"><a href="#Spark-的重要组件" class="headerlink" title="Spark 的重要组件"></a>Spark 的重要组件</h2><blockquote><p>1、Spark Sql<br>2、Spark Streaming  (流式存储)<br>3、MLlib<br>4、Graphx</p></blockquote><h2 id="Spark-1-0-amp-amp-2-0"><a href="#Spark-1-0-amp-amp-2-0" class="headerlink" title="Spark 1.0 &amp;&amp; 2.0"></a>Spark 1.0 &amp;&amp; 2.0</h2><blockquote><ol><li>Spark2 Apache Spark作为编译器:增加新的引擎Tungsten执行引擎，比Spark1快10倍</li><li>ml做了很大的改进，支持协同过滤</li><li>spark2 org.apache.spark.sql加了SparkSession把Spark的SQLcontext和hiveContext整合dataFrame去掉了，统一采用dataset</li><li>做流的方式，例如设置10秒钟一批，5秒钟处理</li><li>R语言API加入了很多机器学习的算法</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spark之来龙去脉&quot;&gt;&lt;a href=&quot;#Spark之来龙去脉&quot; class=&quot;headerlink&quot; title=&quot;Spark之来龙去脉&quot;&gt;&lt;/a&gt;Spark之来龙去脉&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;1、是一种快速、分布式、可扩展、容错率的 &amp;lt;</summary>
      
    
    
    
    <category term="Spark" scheme="http://yoursite.com/categories/Spark/"/>
    
    
    <category term="Spark" scheme="http://yoursite.com/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>Spark Streaming</title>
    <link href="http://yoursite.com/2021/05/31/Spark-Streaming/"/>
    <id>http://yoursite.com/2021/05/31/Spark-Streaming/</id>
    <published>2021-05-31T00:28:06.000Z</published>
    <updated>2021-06-08T11:34:02.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spark-Streaming（流）概述"><a href="#Spark-Streaming（流）概述" class="headerlink" title="Spark Streaming（流）概述"></a>Spark Streaming（流）概述</h2><blockquote><p>数据分类<br> 离线数据和实时数据（相对实时）<br>–<br>Spark Streaming 用于流式处理</p></blockquote><h2 id="DStream-简介"><a href="#DStream-简介" class="headerlink" title="DStream 简介"></a>DStream 简介</h2><blockquote></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Spark-Streaming（流）概述&quot;&gt;&lt;a href=&quot;#Spark-Streaming（流）概述&quot; class=&quot;headerlink&quot; title=&quot;Spark Streaming（流）概述&quot;&gt;&lt;/a&gt;Spark Streaming（流）概述&lt;/h2&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>&#39;echarts基础图形之雷达图&#39;</title>
    <link href="http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E9%9B%B7%E8%BE%BE%E5%9B%BE/"/>
    <id>http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E9%9B%B7%E8%BE%BE%E5%9B%BE/</id>
    <published>2020-10-14T04:55:59.000Z</published>
    <updated>2020-10-14T04:55:59.279Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>&#39;echarts基础图形之散点图&#39;</title>
    <link href="http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E6%95%A3%E7%82%B9%E5%9B%BE/"/>
    <id>http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8B%E6%95%A3%E7%82%B9%E5%9B%BE/</id>
    <published>2020-10-14T04:55:51.000Z</published>
    <updated>2020-10-14T04:55:51.291Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>&#39;echarts基础图形之pie图&#39;</title>
    <link href="http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8Bpie%E5%9B%BE/"/>
    <id>http://yoursite.com/2020/10/14/echarts%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2%E4%B9%8Bpie%E5%9B%BE/</id>
    <published>2020-10-14T04:55:25.000Z</published>
    <updated>2020-10-14T04:58:54.856Z</updated>
    
    <content type="html"><![CDATA[<h2 id="饼图代码"><a href="#饼图代码" class="headerlink" title="饼图代码"></a>饼图代码</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">     title:&#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;某站点用户访问来源&#x27;</span>,</span><br><span class="line">        <span class="attr">subtext</span>: <span class="string">&#x27;纯属虚构&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>:<span class="string">&#x27;center&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tooltip</span>:&#123;</span><br><span class="line">        <span class="attr">trigger</span>:<span class="string">&#x27;item&#x27;</span>, <span class="comment">//触发类型 默认数据触发见下图 可选为：item | axis</span></span><br><span class="line">        <span class="attr">formatter</span>:<span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span> <span class="comment">//a(系类名称)， b（数据项名称）， c（数值），d(饼图：百分比 |雷达图：指标名称)</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>:&#123;</span><br><span class="line">        <span class="attr">orient</span>:<span class="string">&#x27;vertical&#x27;</span>, <span class="comment">//布局方式 默认为水平布局，可选为：horizontal | vertical</span></span><br><span class="line">        <span class="attr">x</span>:<span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:[<span class="string">&#x27;直接访问&#x27;</span>,<span class="string">&#x27;邮件营销&#x27;</span>,<span class="string">&#x27;联盟广告&#x27;</span>,<span class="string">&#x27;视屏广告&#x27;</span>,<span class="string">&#x27;社会赞助&#x27;</span>,<span class="string">&#x27;搜索引擎&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">toolbox</span>:&#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">feature</span>:&#123;</span><br><span class="line">            <span class="attr">mark</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">dataView</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">readOnly</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">restore</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">savaAsImage</span>:&#123;</span><br><span class="line">                <span class="attr">show</span>:<span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">calculable</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">series</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;访问来源&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>:<span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="comment">//半径，支持绝对值（px）和百分比计算比 min(width,height) /2*75，传输组实现环形图[内半径，外半径]</span></span><br><span class="line">            <span class="attr">radius</span>:<span class="string">&#x27;50%&#x27;</span>,</span><br><span class="line">            <span class="attr">center</span>:[<span class="string">&#x27;50%&#x27;</span>,<span class="string">&#x27;60%&#x27;</span>], <span class="comment">//圆心坐标、支持绝对值（px)和百分比，百分比计算 min(windth,height)* 50%</span></span><br><span class="line">            <span class="attr">itemStyle</span>:&#123;</span><br><span class="line">                <span class="attr">normal</span>:&#123;</span><br><span class="line">                    <span class="attr">label</span>:&#123;</span><br><span class="line">                        <span class="attr">show</span>:<span class="literal">true</span>,</span><br><span class="line">                        <span class="attr">formatter</span>:<span class="string">&#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">data</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">335</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;直接访问&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">310</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;邮件访问&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">234</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;联盟广告&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">135</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;视屏广告&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">1521</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;社会赞助&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>:<span class="number">1535</span>,</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;搜索引擎&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">myChart.setOption(option);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;饼图代码&quot;&gt;&lt;a href=&quot;#饼图代码&quot; class=&quot;headerlink&quot; title=&quot;饼图代码&quot;&gt;&lt;/a&gt;饼图代码&lt;/h2&gt; &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="Echarts可视化" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="饼图" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/%E9%A5%BC%E5%9B%BE/"/>
    
    
    <category term="饼图代码" scheme="http://yoursite.com/tags/%E9%A5%BC%E5%9B%BE%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>echarts饼图基础图形</title>
    <link href="http://yoursite.com/2020/10/08/echarts%E9%A5%BC%E5%9B%BE%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2/"/>
    <id>http://yoursite.com/2020/10/08/echarts%E9%A5%BC%E5%9B%BE%E5%9F%BA%E7%A1%80%E5%9B%BE%E5%BD%A2/</id>
    <published>2020-10-08T03:15:07.000Z</published>
    <updated>2020-10-08T07:17:31.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ul><li>代码如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">backgroundColor</span>: <span class="string">&#x27;#2c343c&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Customized Pie&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">top</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#ccc&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">visualMap</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">min</span>: <span class="number">80</span>,</span><br><span class="line">        <span class="attr">max</span>: <span class="number">600</span>,</span><br><span class="line">        <span class="attr">inRange</span>: &#123;</span><br><span class="line">            <span class="attr">colorLightness</span>: [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;访问来源&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: <span class="string">&#x27;55%&#x27;</span>,</span><br><span class="line">            <span class="attr">center</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;50%&#x27;</span>],</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">&#x27;邮件营销&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">274</span>, <span class="attr">name</span>: <span class="string">&#x27;联盟广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">235</span>, <span class="attr">name</span>: <span class="string">&#x27;视频广告&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">value</span>: <span class="number">400</span>, <span class="attr">name</span>: <span class="string">&#x27;搜索引擎&#x27;</span>&#125;</span><br><span class="line">            ].sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123; <span class="keyword">return</span> a.value - b.value; &#125;),</span><br><span class="line">            <span class="attr">roseType</span>: <span class="string">&#x27;radius&#x27;</span>,</span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255, 0.3)&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">labelLine</span>: &#123;</span><br><span class="line">                <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">                    <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255, 0.3)&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">smooth</span>: <span class="number">0.2</span>,</span><br><span class="line">                <span class="attr">length</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="attr">length2</span>: <span class="number">20</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#c23531&#x27;</span>,</span><br><span class="line">                <span class="attr">shadowBlur</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 0, 0, 0.5)&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="attr">animationType</span>: <span class="string">&#x27;scale&#x27;</span>,</span><br><span class="line">            <span class="attr">animationEasing</span>: <span class="string">&#x27;elasticOut&#x27;</span>,</span><br><span class="line">            <span class="attr">animationDelay</span>: <span class="function"><span class="keyword">function</span> (<span class="params">idx</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Math</span>.random() * <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h3><p>利用疫数据制作两表出来<br>要求如下<br>1.饼图<br>2.折线图<br>    2.1折线图<br>暂时不要求美化</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="Echarts可视化" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="饼图" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/%E9%A5%BC%E5%9B%BE/"/>
    
    
    <category term="饼图基本格式以及个句代码解析" scheme="http://yoursite.com/tags/%E9%A5%BC%E5%9B%BE%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F%E4%BB%A5%E5%8F%8A%E4%B8%AA%E5%8F%A5%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>echarts折线图糅合柱状图</title>
    <link href="http://yoursite.com/2020/10/06/Echarts%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%B3%85%E5%90%88%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    <id>http://yoursite.com/2020/10/06/Echarts%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%B3%85%E5%90%88%E6%9F%B1%E7%8A%B6%E5%9B%BE/</id>
    <published>2020-10-06T12:56:21.000Z</published>
    <updated>2020-10-14T04:53:33.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础折线图大概全部代码"><a href="#基础折线图大概全部代码" class="headerlink" title="基础折线图大概全部代码"></a>基础折线图大概全部代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">title</span>:&#123;</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;长韵&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>:<span class="string">&#x27;http://www.changan.bio/&#x27;</span>,</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;self&#x27;</span>,</span><br><span class="line">        <span class="attr">textStyle</span>:&#123;</span><br><span class="line">          <span class="attr">color</span>:<span class="string">&quot;#49b1f5&quot;</span>            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">subtext</span>:<span class="string">&#x27;通往一个属于自己的小博客&#x27;</span>,</span><br><span class="line">        <span class="attr">subtextStyle</span>:&#123;</span><br><span class="line">            <span class="attr">color</span>:<span class="string">&quot;#23b1f5&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">areaStyle</span>: &#123;&#125;,</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="折线图柔和柱状图"><a href="#折线图柔和柱状图" class="headerlink" title="折线图柔和柱状图"></a>折线图柔和柱状图</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">title</span>:&#123;</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;长韵&#x27;</span>,</span><br><span class="line">        <span class="attr">link</span>:<span class="string">&#x27;http://www.changan.bio/&#x27;</span>,</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;self&#x27;</span>,</span><br><span class="line">        <span class="attr">textStyle</span>:&#123;</span><br><span class="line">          <span class="attr">color</span>:<span class="string">&quot;#49b1f5&quot;</span>            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">subtext</span>:<span class="string">&#x27;通往一个属于自己的小博客&#x27;</span>,</span><br><span class="line">        <span class="attr">subtextStyle</span>:&#123;</span><br><span class="line">            <span class="attr">color</span>:<span class="string">&quot;#23b1f5&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>:&#123;</span><br><span class="line">        <span class="attr">data</span>:[<span class="string">&#x27;邮件营销&#x27;</span>, <span class="string">&#x27;联盟广告&#x27;</span>, <span class="string">&#x27;视频广告&#x27;</span>, <span class="string">&#x27;直接访问&#x27;</span>, <span class="string">&#x27;搜索引擎&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">areaStyle</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">data</span>:[<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&#x27;bar&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="个句代码进行解释"><a href="#个句代码进行解释" class="headerlink" title="个句代码进行解释"></a>个句代码进行解释</h3><p>title 标题<br>areaStyle 是否填充 </p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>To be trusted is a greater compliment than to be loved.<br>被人信任，是比被人喜爱还要更大的赞许。</p><h2 id="会进行合并成为五种基本图形"><a href="#会进行合并成为五种基本图形" class="headerlink" title="会进行合并成为五种基本图形"></a>会进行合并成为五种基本图形</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础折线图大概全部代码&quot;&gt;&lt;a href=&quot;#基础折线图大概全部代码&quot; class=&quot;headerlink&quot; title=&quot;基础折线图大概全部代码&quot;&gt;&lt;/a&gt;基础折线图大概全部代码&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;</summary>
      
    
    
    
    <category term="Echarts可视化" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="折线图" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/%E6%8A%98%E7%BA%BF%E5%9B%BE/"/>
    
    
    <category term="折线图基本格式以及个句代码解析" scheme="http://yoursite.com/tags/%E6%8A%98%E7%BA%BF%E5%9B%BE%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F%E4%BB%A5%E5%8F%8A%E4%B8%AA%E5%8F%A5%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>&#39;Echarts柱状图基础</title>
    <link href="http://yoursite.com/2020/10/05/Echarts%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/10/05/Echarts%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%9F%BA%E7%A1%80/</id>
    <published>2020-10-05T11:30:59.000Z</published>
    <updated>2020-10-05T13:10:29.013Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础柱状图"><a href="#基础柱状图" class="headerlink" title="基础柱状图"></a>基础柱状图</h2><p>结构构成<br>    -在绘图前我们需要为 ECharts 准备一个具备高宽的 DOM 容器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><pre><code>-要将echarts实例化</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;main&#x27;</span>));  <span class="comment">//基于echarts.init根据盒子进行实例化 获取当前事件id为main的盒子</span></span><br></pre></td></tr></table></figure><h3 id="整个柱状图代码"><a href="#整个柱状图代码" class="headerlink" title="整个柱状图代码"></a>整个柱状图代码</h3><figure class="highlight java"><figcaption><span>Server Pages</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    backgroundColor: <span class="string">&#x27;#12cf96&#x27;</span>,</span><br><span class="line">    xAxis: &#123; </span><br><span class="line">        type: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        data: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: &#123;</span><br><span class="line">        type: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        data: [<span class="number">120</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">110</span>, <span class="number">130</span>],</span><br><span class="line">        type: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">        showBackground: <span class="keyword">true</span>,</span><br><span class="line">        backgroundStyle: &#123;</span><br><span class="line">            color: <span class="string">&#x27;rgba(220, 220, 220, 0.8)&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="个名词解释"><a href="#个名词解释" class="headerlink" title="个名词解释"></a>个名词解释</h3><h4 id="xAxis-相当于一个直角坐标系的x轴"><a href="#xAxis-相当于一个直角坐标系的x轴" class="headerlink" title="xAxis  相当于一个直角坐标系的x轴"></a>xAxis  相当于一个直角坐标系的x轴</h4><blockquote><p>&nbsp;&nbsp; -type   声明类型<br>&nbsp;&nbsp; -category 也就是要声明的类型<br>&nbsp;&nbsp; -data  就是x轴的数值</p></blockquote><h4 id="yAxis-相反也是就是相当于直角坐标系的y轴"><a href="#yAxis-相反也是就是相当于直角坐标系的y轴" class="headerlink" title="yAxis  相反也是就是相当于直角坐标系的y轴"></a>yAxis  相反也是就是相当于直角坐标系的y轴</h4><blockquote><p>&nbsp;&nbsp;&nbsp;-value 声明这个值<br>&nbsp;&nbsp;-series<br>&nbsp;&nbsp;&nbsp;–data 就是y轴的数据 当然数据后都会以英文逗号分隔<br>&nbsp;&nbsp;&nbsp;–type:”bar” 声明这个是柱状图<br>&nbsp;&nbsp;&nbsp;– showBackground: true 补全数据不全的地方 可以理解为没有数据为了好观看而白色标识 只有一个参数<br>-backgroundStyle: {<br>            color: ‘rgba(220, 220, 220, 0.8)’<br>            }<br>&nbsp;&nbsp;&nbsp; 调节空白显示的颜色 这种方式用的rbg三色调<br>&nbsp;&nbsp;&nbsp;  -backgroundColor 以前js或css就有了的 这不多讲</p></blockquote><!-- | 项目        | 价格    |  数量   || --------    | -----: | :----:  || 计算机      | \$1600  |   5    || 手机        |   \$12  |   12   || 管线        |    \$1  |   234  | --><h2 id="柱状图的晋级"><a href="#柱状图的晋级" class="headerlink" title="柱状图的晋级"></a>柱状图的晋级</h2><p>To be a princess, you have to believe that you are a princess.<br>要想成为公主，你必须相信自己就是公主。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础柱状图&quot;&gt;&lt;a href=&quot;#基础柱状图&quot; class=&quot;headerlink&quot; title=&quot;基础柱状图&quot;&gt;&lt;/a&gt;基础柱状图&lt;/h2&gt;&lt;p&gt;结构构成&lt;br&gt;    -在绘图前我们需要为 ECharts 准备一个具备高宽的 DOM 容器&lt;/p&gt;
&lt;figur</summary>
      
    
    
    
    <category term="Echarts可视化" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="柱状图" scheme="http://yoursite.com/categories/Echarts%E5%8F%AF%E8%A7%86%E5%8C%96/%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    
    
    <category term="柱状图基本格式以及个句代码解析" scheme="http://yoursite.com/tags/%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F%E4%BB%A5%E5%8F%8A%E4%B8%AA%E5%8F%A5%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Pyecharts的语法格式及意思解释</title>
    <link href="http://yoursite.com/2020/09/23/Pyecharts%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F%E5%8F%8A%E6%84%8F%E6%80%9D%E8%A7%A3%E9%87%8A/"/>
    <id>http://yoursite.com/2020/09/23/Pyecharts%E7%9A%84%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F%E5%8F%8A%E6%84%8F%E6%80%9D%E8%A7%A3%E9%87%8A/</id>
    <published>2020-09-23T01:29:51.000Z</published>
    <updated>2020-09-23T09:44:43.806Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pyecharts的大概意思"><a href="#Pyecharts的大概意思" class="headerlink" title="Pyecharts的大概意思"></a>Pyecharts的大概意思</h1><blockquote><p>chart_name=图表类型（）初始化具体的类型的图表<br> chart_name.add_xaxis()添加横坐标名称<br> chart_name.add_yaxis()添加纵坐标数据<br> chart_name.render()生成.html</p></blockquote><h2 id="导入包的解释"><a href="#导入包的解释" class="headerlink" title="导入包的解释"></a>导入包的解释</h2><blockquote><p>from pyecharts.faker import Faker 添加随机数据<br>from pyecharts.charts import Bar 导入需要的包<br>from pyecharts import as opts 找到某个需要的东西，as 为别名<br>from pyecharts.globals import ThemeType 这个模块可以修改主题</p></blockquote><h2 id="柱状图的实例化"><a href="#柱状图的实例化" class="headerlink" title="柱状图的实例化"></a>柱状图的实例化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType  </span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(theme=ThemeType.PURPLE_PASSION))  //对Bar进行实例化 添加init_opts=opts.InitOpts(theme=ThemeType.。。。添加主题名称） 进行实例化的时候进行主题的初始化 </span><br><span class="line">&gt; bar.set_global_opts(title_opts=opts.TitleOpts(title=<span class="string">&quot;Bar~基本&quot;</span>,subtitle=<span class="string">&quot;我是副标题&quot;</span>))  //title_opts主标题  subtitle副题--&gt;那个会在其他文档中说到，这不详说</span><br><span class="line">bar.add_xaxis(Faker.choose())  //Faker.choose指的是文字</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品&quot;</span>,Faker.values() //Faker.values指的是数据</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><blockquote><p>注意的：type可以查看数据类型 xaxis中里面添加的数据必须是python的list/列表类型。如果是numpy数组需要转换成list</p></blockquote><h3 id="柱状图实例化的高度"><a href="#柱状图实例化的高度" class="headerlink" title="柱状图实例化的高度"></a>柱状图实例化的高度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(</span><br><span class="line">    theme=ThemeType.MACARONS, //修改高度，宽度</span><br><span class="line">    width=<span class="string">&quot;1920px&quot;</span>,</span><br><span class="line">    height=<span class="string">&quot;1080px&quot;</span></span><br><span class="line"></span><br><span class="line">))</span><br><span class="line"><span class="comment"># 修改主标题</span></span><br><span class="line">bar.set_global_opts(</span><br><span class="line">    title_opts=opts.TitleOpts(</span><br><span class="line">        title=<span class="string">&quot;Bar~基本&quot;</span>,</span><br><span class="line">        subtitle=<span class="string">&quot;我是副标题&quot;</span>)，</span><br><span class="line">                xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=<span class="number">30</span>))  //<span class="number">30</span> 旋转的角度 y轴的同等</span><br><span class="line">        )</span><br><span class="line">bar.add_xaxis(Faker.choose())</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品A&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品B&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)  // 他们是处于叠加态（处于叠加）的 如果不设置stack那么它会成一行接一行，不会形成叠加 stack填写的类容一样会被认为是同一叠加</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><blockquote><p>注：叠加比较好看到时间占比或者说是某种占比度更大</p></blockquote><!-- # --> 平均值、最值<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span>  Faker</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span>  options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> ThemeType</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span>  Bar</span><br><span class="line">bar = Bar(init_opts=opts.InitOpts(</span><br><span class="line">    theme=ThemeType.MACARONS,</span><br><span class="line">    width=<span class="string">&quot;1920px&quot;</span>,</span><br><span class="line">    height=<span class="string">&quot;720px&quot;</span></span><br><span class="line"></span><br><span class="line">))</span><br><span class="line"><span class="comment"># 修改主标题</span></span><br><span class="line">bar.set_global_opts(</span><br><span class="line">    title_opts=opts.TitleOpts(</span><br><span class="line">        title=<span class="string">&quot;Bar~基本&quot;</span>,</span><br><span class="line">        subtitle=<span class="string">&quot;我是副标题&quot;</span>),</span><br><span class="line">        xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=<span class="number">30</span>))</span><br><span class="line">),</span><br><span class="line">bar.add_xaxis(Faker.choose())</span><br><span class="line"><span class="comment"># bar.add_xaxis(Faker.choose())</span></span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品A&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.add_yaxis(<span class="string">&quot;商品B&quot;</span>,Faker.values(),stack=<span class="string">&quot;st&quot;</span>)</span><br><span class="line">bar.set_series_opts(</span><br><span class="line">    label_opts=opts.LabelOpts(is_show=<span class="literal">False</span>),</span><br><span class="line">    markpoint_opts=opts.MarkPointOpts( //表示出极值</span><br><span class="line">        data=[</span><br><span class="line">            //最值</span><br><span class="line">            opts.MarkPointItem(type_=<span class="string">&quot;max&quot;</span>,name=<span class="string">&quot;最大值&quot;</span>),</span><br><span class="line">            opts.MarkPointItem(type_=<span class="string">&quot;min&quot;</span>,name=<span class="string">&quot;最小值&quot;</span>),</span><br><span class="line"></span><br><span class="line">        ]</span><br><span class="line">    ),</span><br><span class="line">    markline_opts=opts.MarkLineOpts(   //表示平均，画线</span><br><span class="line">        data=[</span><br><span class="line">            //平均</span><br><span class="line">            opts.MarkLineItem(type_=<span class="string">&quot;average&quot;</span>,name=<span class="string">&quot;平均值&quot;</span>),</span><br><span class="line">        ]</span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line">bar.reversal_axis( ) //交换x轴y轴</span><br><span class="line">bar.render()</span><br></pre></td></tr></table></figure><h2 id="今日图形到此结束-9-28"><a href="#今日图形到此结束-9-28" class="headerlink" title="今日图形到此结束 9-28"></a>今日图形到此结束 9-28</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Pyecharts的大概意思&quot;&gt;&lt;a href=&quot;#Pyecharts的大概意思&quot; class=&quot;headerlink&quot; title=&quot;Pyecharts的大概意思&quot;&gt;&lt;/a&gt;Pyecharts的大概意思&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;chart_nam</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>每日一首古诗词-过苏禄东王墓</title>
    <link href="http://yoursite.com/2020/08/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E8%BF%87%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93/"/>
    <id>http://yoursite.com/2020/08/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E8%BF%87%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93/</id>
    <published>2020-08-31T13:32:05.000Z</published>
    <updated>2020-08-31T13:59:32.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="每日一首古诗词-过苏禄东王墓"><a href="#每日一首古诗词-过苏禄东王墓" class="headerlink" title="每日一首古诗词-过苏禄东王墓"></a>每日一首古诗词-过苏禄东王墓</h2><h2 id="清代-顾炎武"><a href="#清代-顾炎武" class="headerlink" title="清代-顾炎武"></a>清代-顾炎武</h2><blockquote><p>丰碑遥见炳奎题，尚忆先朝宠日殚。<br>世有国人供洒扫，每勤词客驻轮蹄。<br>九河水壮龙狐出，十二城荒向鹤栖。<br>下马一为郯子问，中原云鸟正凄迷。</p></blockquote><h2 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h2><ol><li>哪天兴致所来-在来填写<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><blockquote><p>苏禄国东王墓：明永乐十五年（1417年），苏禄国（今菲律宾）东王巴都葛叭哈喇、西王巴都葛叭苏里和峒王巴都葛叭喇卜率领家眷一行340多人访问中国，受到明永乐皇帝（明成祖朱棣）的热情接待，在北逗留27天。在取道运河回国途经德州时东王不幸遭疾，病故德州。明成祖朱棣派礼部郎中陈世启带祭文赶运至德州为东王举行了隆重葬礼。王妃及两个儿子留居德州守墓，后改为温、安二姓入籍中国。苏禄国东王墓（坐落在山东省德州市城区北部的北营村）成为我国两个中其中一座外国王陵（另一座是位于南京的浡泥国王墓），也是中国唯一的驻有外国王室后裔守陵村落的异邦王陵。，在历史上具有独特的地位和意义。</p></blockquote><h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><blockquote><p>顾炎武（1613.7.15—1682.2.15），汉族，明朝南直隶苏州府昆山（今江苏省昆山市）千灯镇人，本名绛，乳名藩汉，别名继坤、圭年，字忠清、宁人，亦自署蒋山佣；南都败后，因为仰慕文天祥学生王炎午的为人，改名炎武。因故居旁有亭林湖，学者尊为亭林先生。明末清初的杰出的思想家、经学家、史地学家和音韵学家，与黄宗羲、王夫之并称为明末清初“三大儒”。<br>他一生辗转，行万里路，读万卷书，创立了一种新的治学方法，成为清初继往开来的一代宗师，被誉为清学“开山始祖”。顾炎武学问渊博，于国家典制、郡邑掌故、天文仪象、河漕、兵农及经史百家、音韵训诂之学，都有研究。晚年治经重考证，开清代朴学风气。其学以博学于文，行己有耻为主，合学与行、治学与经世为一。诗多伤时感事之作。<br>其主要作品有《日知录》、《天下郡国利病书》、《肇域志》、《音学五书》、《韵补正》、《古音表》、《诗本音》、《唐韵正》、《音论》、《金石文字记》、《亭林诗文集》等。</p></blockquote><h2 id="平仄"><a href="#平仄" class="headerlink" title="平仄"></a>平仄</h2>丰碑遥见炳奎题，尚忆先朝宠日殚。<br>平平仄仄仄平平，仄仄平平仄仄平。<br>世有国人供洒扫，每勤词客驻轮蹄。<br>仄仄平平平仄仄，平平仄仄仄平平。<br>九河水壮龙狐出，十二城荒向鹤栖。<br>平平仄仄平平仄，仄仄平平仄仄平。<br>下马一为郯子问，中原云鸟正凄迷<br>仄仄平平平仄仄，平平仄仄仄平平</li></ol><h2 id="出处，参考"><a href="#出处，参考" class="headerlink" title="出处，参考"></a>出处，参考</h2><p>古诗词网：<a href="http://www.gushicimingju.com/gushi/shi/185705.html">http://www.gushicimingju.com/gushi/shi/185705.html</a><br>百度文科：<a href="https://baike.baidu.com/item/%E8%8B%8F%E7%A6%84%E7%8E%8B%E5%A2%93/793310?fromtitle=%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93&amp;fromid=3023948&amp;fr=aladdin">https://baike.baidu.com/item/%E8%8B%8F%E7%A6%84%E7%8E%8B%E5%A2%93/793310?fromtitle=%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93&amp;fromid=3023948&amp;fr=aladdin</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;每日一首古诗词-过苏禄东王墓&quot;&gt;&lt;a href=&quot;#每日一首古诗词-过苏禄东王墓&quot; class=&quot;headerlink&quot; title=&quot;每日一首古诗词-过苏禄东王墓&quot;&gt;&lt;/a&gt;每日一首古诗词-过苏禄东王墓&lt;/h2&gt;&lt;h2 id=&quot;清代-顾炎武&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="文学作品" scheme="http://yoursite.com/categories/%E6%96%87%E5%AD%A6%E4%BD%9C%E5%93%81/"/>
    
    <category term="古诗词" scheme="http://yoursite.com/categories/%E6%96%87%E5%AD%A6%E4%BD%9C%E5%93%81/%E5%8F%A4%E8%AF%97%E8%AF%8D/"/>
    
    
    <category term="每日一首古诗词-过苏禄东王墓" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E8%BF%87%E8%8B%8F%E7%A6%84%E4%B8%9C%E7%8E%8B%E5%A2%93/"/>
    
  </entry>
  
  <entry>
    <title>每日一首古诗词-岳鄂王墓</title>
    <link href="http://yoursite.com/2020/08/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E5%B2%B3%E9%84%82%E7%8E%8B%E5%A2%93/"/>
    <id>http://yoursite.com/2020/08/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E5%B2%B3%E9%84%82%E7%8E%8B%E5%A2%93/</id>
    <published>2020-08-30T13:46:42.000Z</published>
    <updated>2020-08-30T14:16:20.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="每日一首古诗词-岳鄂王墓"><a href="#每日一首古诗词-岳鄂王墓" class="headerlink" title="每日一首古诗词-岳鄂王墓"></a>每日一首古诗词-岳鄂王墓</h2><h2 id="元朝-赵孟俯"><a href="#元朝-赵孟俯" class="headerlink" title="元朝 赵孟俯"></a>元朝 赵孟俯</h2><blockquote><p>鄂王墓上草离离，秋日荒凉石兽危。<br>南渡君臣轻社稷，中原父老望旌旗。<br>英雄已死嗟何及，天下中分遂不支。<br>莫向西湖歌此曲，水光山色不胜悲。</p></blockquote><h2 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h2><p>岳飞墓上荒草离离，一片荒凉，只有秋草、石兽而已。<br>南渡君臣轻视社稷，可中原父老还在盼望着王师的旌旗。<br>英雄被害，后悔晚矣，天下灭亡已成定局。<br>不要向西湖吟唱此诗，面对这样的景致无从吟起。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>岳鄂王墓:即岳飞墓,现杭州西湖边栖霞岭下.岳飞于绍兴十一年（1142年）被权奸秦桧等阴谋杀害。宋宁宗嘉泰四年（1204年），追封为鄂王。<br>离离:草茂盛的样子<br>危:高耸屹立的样子<br>石兽:古时石头雕刻动物的立于墓前<br>南渡君臣：指以宋高宗赵构为代表的统治集团。北宋亡后，高宗渡过长江，迁于南方，建都临安（今杭州），史称南渡<br>社稷: 江山国家.社,土地神.稷,谷神<br>望旌旗：意为盼望南宋大军到来。旌旗，代指军队。<br>嗟何及：后悔叹息已来不及。<br>天下中分遂不支：意为从此国家被分割为南北两半，而南宋的半壁江山也不能支持，终于灭亡。</p><h2 id="创作背景"><a href="#创作背景" class="headerlink" title="创作背景"></a>创作背景</h2><p>元至元二十三年（1286年）行台侍御史程钜夫“奉诏搜访遗逸于江南”，赵孟頫当仁不让、毫不推辞，到了京城立即受到元世祖的接见。此后官运亨通，做到了翰林学士承旨、荣禄大夫，官居从一品。当时指责赵孟頫的人不少，但今人当更宽容地看待。这是首好诗，不能因人废言。</p><h2 id="赏析"><a href="#赏析" class="headerlink" title="赏析"></a>赏析</h2><p> 这是一支悲愤的悼歌。岳飞的惨死是中国历史上的一大悲剧。岳飞虽然冤死，但他的英名却永远留在历代人民的心中。宋宁宗嘉泰四年（1204年），追封岳飞为鄂王，旷世冤案得以昭雪，离岳飞被害已62年。岳墓建在风景秀丽的西湖岸边，岳飞虽封王建墓，但由于连年战乱，陵园荒芜，景象凄凉。这首诗以反映这样的现实入笔。</p><p>　　首联以离离墓草渲染岳墓秋日的荒凉，冷硬屹立的石兽，更增添了几分悲思。接下来用南北君民作对比，谴责南宋当局苟安享乐、不思北进，同情中原父老忍受煎熬，遥望南师。颈联哀叹有望承担中兴重任的英雄岳飞悲惨死去，使天下南北中分以至南宋最终被蒙古人灭亡。作者在尾联悲痛地吟道：“莫向西湖歌此曲，水光山色不胜悲。”满含湖光依旧，河山易主的深沉的感慨。</p><p>　　作者以赵宋后裔的身份为冤死于赵宋王朝的岳飞，由衷地唱出这支哀痛伤惋的悼歌，分外感人。<br>后面两句,蕴含了诗人无尽的家国之思、亡国之恨。</p><h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>赵孟頫（1254—1322），字子昂，号松雪，松雪道人，又号水精宫道人、鸥波，中年曾作孟俯，汉族，吴兴（今浙江湖州）人。元代著名画家，楷书四大家（欧阳询、颜真卿、柳公权、赵孟頫）之一。赵孟頫博学多才，能诗善文，懂经济，工书法，精绘艺，擅金石，通律吕，解鉴赏。特别是书法和绘画成就最高，开创元代新画风，被称为“元人冠冕”。他也善篆、隶、真、行、草书，尤以楷、行书著称于世。</p><h2 id="平仄"><a href="#平仄" class="headerlink" title="平仄"></a>平仄</h2><p>鄂王坟上草离离，秋日荒凉石兽危。<font color="FFF000">起</font><br>平平仄仄仄平平，仄仄平平仄仄平。<br>南渡君臣轻社稷，中原父老望旌旗。<font color="FF0000">对仗</font> <font color="FFF000">承</font><br>仄仄平平平仄仄，平平仄仄仄平平。<br>英雄已死嗟何及，天下中分遂不支。<font color="FF0000">对仗</font> <font color="FFF000">转</font><br>平平仄仄平平仄，仄仄平平仄仄平。<br>莫向西湖歌此曲，水光山色不胜悲。<font color="FFF000">合</font><br>仄仄平平平仄仄，平平仄仄仄平平。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;每日一首古诗词-岳鄂王墓&quot;&gt;&lt;a href=&quot;#每日一首古诗词-岳鄂王墓&quot; class=&quot;headerlink&quot; title=&quot;每日一首古诗词-岳鄂王墓&quot;&gt;&lt;/a&gt;每日一首古诗词-岳鄂王墓&lt;/h2&gt;&lt;h2 id=&quot;元朝-赵孟俯&quot;&gt;&lt;a href=&quot;#元朝-赵孟俯&quot;</summary>
      
    
    
    
    <category term="文学作品" scheme="http://yoursite.com/categories/%E6%96%87%E5%AD%A6%E4%BD%9C%E5%93%81/"/>
    
    <category term="古诗词" scheme="http://yoursite.com/categories/%E6%96%87%E5%AD%A6%E4%BD%9C%E5%93%81/%E5%8F%A4%E8%AF%97%E8%AF%8D/"/>
    
    
    <category term="每日一首古诗词-岳鄂王墓" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A6%96%E5%8F%A4%E8%AF%97%E8%AF%8D-%E5%B2%B3%E9%84%82%E7%8E%8B%E5%A2%93/"/>
    
  </entry>
  
  <entry>
    <title>Hive安装和配置</title>
    <link href="http://yoursite.com/2020/08/28/Hive%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/08/28/Hive%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2020-08-28T07:12:13.000Z</published>
    <updated>2020-09-09T10:20:02.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决hive只能开一个的问题"><a href="#解决hive只能开一个的问题" class="headerlink" title="解决hive只能开一个的问题"></a>解决hive只能开一个的问题</h2><ol><li>hive只能开一个客户端 把元数据放在MySQL中<br> 1.2  因为Metastore默认存储在自带目录的derby数据库中的，推荐使用MySQL储存Metastoree</li></ol><h2 id="安装MySQL过程中的错误"><a href="#安装MySQL过程中的错误" class="headerlink" title="安装MySQL过程中的错误"></a>安装MySQL过程中的错误</h2><blockquote><p>linux 关于rpm和find部分命令使用方式<br>    - rpm -qa |grep mysql 查询系统中有没有这个安装包<br>    - find -name “*-db” 查询满足条件的后缀<br>    - rpm -qa |grep -i mysql 查看于包相关的</p></blockquote><h3 id="特殊的解压方式"><a href="#特殊的解压方式" class="headerlink" title="特殊的解压方式"></a>特殊的解压方式</h3><blockquote><p>unzip  mysql-libs.zip 解压zip后缀的的文件<br>rpm -ivh MySQL-client-5.6.24-1.el6.x86_64.rpm 则是安装包或者rpm后缀<br>tar -zxvf 则可以解压平常或者常见的安装包</p></blockquote><h3 id="删除一个单独的包"><a href="#删除一个单独的包" class="headerlink" title="删除一个单独的包"></a>删除一个单独的包</h3><blockquote><pre><code>rpm -e MySQL-client-5.6.24-1.el6.x86_64.rpm  卸载MySQL-client-5.6.24-1.el6.x86_64.rpm 这个包- yum remove mariadb-libs-5.5.60-1.el7_5.x86_64 删除冲突的包- rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64 强制删除</code></pre></blockquote><h2 id="Hive元数据"><a href="#Hive元数据" class="headerlink" title="Hive元数据"></a>Hive元数据</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决hive只能开一个的问题&quot;&gt;&lt;a href=&quot;#解决hive只能开一个的问题&quot; class=&quot;headerlink&quot; title=&quot;解决hive只能开一个的问题&quot;&gt;&lt;/a&gt;解决hive只能开一个的问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;hive只能开一个客户端 把元数</summary>
      
    
    
    
    <category term="程序、语言、框架" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E3%80%81%E8%AF%AD%E8%A8%80%E3%80%81%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Hive" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E3%80%81%E8%AF%AD%E8%A8%80%E3%80%81%E6%A1%86%E6%9E%B6/Hive/"/>
    
    
    <category term="Hive安装和配置" scheme="http://yoursite.com/tags/Hive%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Hive相关概念</title>
    <link href="http://yoursite.com/2020/08/28/Hive%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2020/08/28/Hive%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</id>
    <published>2020-08-28T02:46:40.000Z</published>
    <updated>2020-08-28T07:16:17.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大数据主要解决3个问题"><a href="#大数据主要解决3个问题" class="headerlink" title="大数据主要解决3个问题"></a>大数据主要解决3个问题</h2><ul><li>传输    存储      计算(Hive)</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ol><li>Hive：海量日志结构化工具 基于Hadoop的一个数据仓库，可以将结构化的数据文件映射为一张表，并提供类MySQL的查询，<font color=#FF0000 >本s质上是将HQL转换成MapReduce</font> <font color=#FF0000 >计算一定是分布式的</font></li><li>Hive的分析底层的默认实现的MapRedecu</li><li>Hive有优点<pre><code>     3.1 提供快速开发的的能力     3.2 减少开发人员学习成本     3.3 在于处理大数据，对于小数据没有优势，应为Hive的延迟比较高     3.4 Hive支持用户自定义函数，可以根据自己需求来实现</code></pre></li><li>Hive缺点<pre><code>     4.1 Hive的HQL的表达能力有限</code></pre></li></ol><blockquote><pre><code>           4.1.1 迭代式算法无法表达           4.1.2 数据挖掘方面不擅长        4.2 Hive的效率较低           4.2.1 Hive自动生成的Mapreduce作业，不够智能化          4.2.2 Hive调优较为麻烦粒度较粗</code></pre></blockquote><ol start="5"><li><p>Hive架构原理</p> <!--http://106.54.84.55:8080/changyun/1.png --><p><img src="http://106.54.84.55:8080/changyun/1.png" alt="Hive"></p><p> 5.1 元数据  Metastore</p><pre><code> 元数据包括：表明、表所属数据库（默认default）、表的拥有者、分区字段、表的类型 数据目录&lt;font color=#FF0000 &gt;默认储存自带的derby数据库中，推荐使用MySQL储存Metastore&lt;/font&gt;</code></pre></li><li><p>Hive运行机制</p> <!--http://106.54.84.55:8080/changyun/2.png --><p><img src="http://106.54.84.55:8080/changyun/2.png" alt="Hive"></p></li><li><p>Hive和数据库的对比</p></li></ol><blockquote><p>数据的存储位置不同 由于hive是建立在hadoop上面的 所有数据都是存储在HDFS中，而数据库则可以将数据保存在块设备或者本地文件系统中</p><blockquote><p>   数据的更新： <font color=#FF0000 >由于hives是针对数据仓库设立的，而数据仓库的内容主要是读多写少，因此，Hive中是不会建议修改数据的，所有数据都是在加载好的时候确定的</font>，而数据库需要经常修改</p><blockquote><p>索引： Hive在加载数据是不会进行任何操作，甚至不会对数据进行扫描，所以就别就不会存在key,Hive要访问数中符合特定条件会<font color=#FF0000>需要暴力扫描整个数据<font>,而数据库对一个或几个列建立key提高数据的访问，数据库可以有很高的效率、较低的延迟，由于数据的访问延迟高，决定Hive不适合在线查询</p><blockquote><p>执行： Hive中大多数查询通过Hadoop提供的Mapreduce来实现，而数据库通常有自己的执行引擎<br>可扩展性： 由于Hive时建立在Hadoop上面的，所以Hive和Hadoop的可扩展性的一致的<br>    数据规模： 由于hive是建立在集群上并可以利用Mapreduce进行计算，因此可以支持很大的规模的数据，对应的，数据库所支持就相对较小</p></blockquote></blockquote></blockquote></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大数据主要解决3个问题&quot;&gt;&lt;a href=&quot;#大数据主要解决3个问题&quot; class=&quot;headerlink&quot; title=&quot;大数据主要解决3个问题&quot;&gt;&lt;/a&gt;大数据主要解决3个问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;传输    存储      计算(Hive)&lt;/li&gt;
</summary>
      
    
    
    
    <category term="程序、语言、框架" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E3%80%81%E8%AF%AD%E8%A8%80%E3%80%81%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Hive" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E3%80%81%E8%AF%AD%E8%A8%80%E3%80%81%E6%A1%86%E6%9E%B6/Hive/"/>
    
    
    <category term="Hive相关概念" scheme="http://yoursite.com/tags/Hive%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
</feed>
